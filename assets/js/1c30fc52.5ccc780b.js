"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[61214],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(96540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},50553:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"development/display/working-in-three-dimensions/basics-of-3d-objects","title":"Basics of 3D display objects","description":"The main difference between a two-dimensional (2D) object and a","source":"@site/docs/development/display/working-in-three-dimensions/basics-of-3d-objects.md","sourceDirName":"development/display/working-in-three-dimensions","slug":"/development/display/working-in-three-dimensions/basics-of-3d-objects","permalink":"/docs/development/display/working-in-three-dimensions/basics-of-3d-objects","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-in-three-dimensions/basics-of-3d-objects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Working in three dimensions (3D)","permalink":"/docs/development/display/working-in-three-dimensions/"},"next":{"title":"Creating and moving 3D display objects","permalink":"/docs/development/display/working-in-three-dimensions/creating-and-moving-3d-display-objects"}}');var o=t(74848),s=t(28453);const a={},r="Basics of 3D display objects",c={},d=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}];function l(e){const n={br:"br",code:"code",h1:"h1",h4:"h4",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"basics-of-3d-display-objects",children:"Basics of 3D display objects"})}),"\n",(0,o.jsx)(n.p,{children:"The main difference between a two-dimensional (2D) object and a\nthree-dimensional (3D) object projected on a two-dimensional screen is the\naddition of a third dimension to the object. The third dimension allows the\nobject to move toward and away from viewpoint of the user."}),"\n",(0,o.jsxs)(n.p,{children:["When you explicitly set the ",(0,o.jsx)(n.code,{children:"z"})," property of a display object to a numeric value,\nthe object automatically creates a 3D transformation matrix. You can alter this\nmatrix to modify the 3D transformation settings of that object."]}),"\n",(0,o.jsx)(n.p,{children:"In addition, 3D rotation differs from 2D rotation. In 2D the axis of rotation is\nalways perpendicular to the x/y plane - in other words, on the z-axis. In 3D the\naxis of rotation can be around any of the x, y, or z axes. Setting the rotation\nand scaling properties of a display object enable it to move in 3D space."}),"\n",(0,o.jsx)(n.h4,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,o.jsx)(n.p,{children:"The following reference list contains important terms that you will encounter\nwhen programming 3-dimensional graphics:"}),"\n",(0,o.jsxs)(n.p,{children:["Perspective",(0,o.jsx)(n.br,{}),"\n","In a 2D plane, representation of parallel lines as converging on a vanishing\npoint to give the illusion of depth and distance."]}),"\n",(0,o.jsxs)(n.p,{children:["Projection",(0,o.jsx)(n.br,{}),"\n","The production of a 2D image of a higher-dimensional object; 3D projection maps\n3D points to a 2D plane."]}),"\n",(0,o.jsxs)(n.p,{children:["Rotation",(0,o.jsx)(n.br,{}),"\n","Changing the orientation (and often the position) of an object by moving every\npoint included in the object in a circular motion."]}),"\n",(0,o.jsxs)(n.p,{children:["Transformation",(0,o.jsx)(n.br,{}),"\n","Altering 3D points or sets of points by translation, rotation, scale, skew, or a\ncombination of these actions."]}),"\n",(0,o.jsxs)(n.p,{children:["Translation",(0,o.jsx)(n.br,{}),"\n","Changing the position of an object by moving every point included in the object\nby the same amount in the same direction."]}),"\n",(0,o.jsxs)(n.p,{children:["Vanishing point",(0,o.jsx)(n.br,{}),"\n","Point at which receding parallel lines seem to meet when represented in linear\nperspective."]}),"\n",(0,o.jsxs)(n.p,{children:["Vector",(0,o.jsx)(n.br,{}),"\n","A 3D vector represents a point or a location in the three-dimensional space\nusing the Cartesian coordinates x, y, and z."]}),"\n",(0,o.jsxs)(n.p,{children:["Vertex",(0,o.jsx)(n.br,{}),"\n","A corner point."]}),"\n",(0,o.jsxs)(n.p,{children:["Textured mesh",(0,o.jsx)(n.br,{}),"\n","Any point defining an object in 3D space."]}),"\n",(0,o.jsxs)(n.p,{children:["UV mapping",(0,o.jsx)(n.br,{}),"\n","A way to apply a texture or bitmap to a 3D surface. UV mapping assigns values to\ncoordinates on an image as percentages of the horizontal (U) axis and vertical\n(V) axis."]}),"\n",(0,o.jsxs)(n.p,{children:["T value",(0,o.jsx)(n.br,{}),"\n","The scaling factor for determining the size of a 3D object as the object moves\ntoward, or away from, the current point of view."]}),"\n",(0,o.jsxs)(n.p,{children:["Culling",(0,o.jsx)(n.br,{}),"\n","Rendering, or not, surfaces with specific winding. Using culling you can hide\nsurfaces that are not visible to the current point of view."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);