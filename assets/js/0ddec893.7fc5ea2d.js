"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[53143],{28453:(e,s,r)=>{r.d(s,{R:()=>t,x:()=>i});var n=r(96540);const a={},c=n.createContext(a);function t(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),n.createElement(c.Provider,{value:s},e.children)}},50439:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>h,contentTitle:()=>i,default:()=>x,frontMatter:()=>t,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/characters-metacharacters-and-metasequences","title":"Characters, metacharacters, and metasequences","description":"The simplest regular expression is one that matches a sequence of characters, as","source":"@site/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/characters-metacharacters-and-metasequences.md","sourceDirName":"development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax","slug":"/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/characters-metacharacters-and-metasequences","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/characters-metacharacters-and-metasequences","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/characters-metacharacters-and-metasequences.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Creating an instance of a regular expression","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/creating-an-instance-of-a-regular-expression"},"next":{"title":"Character classes","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/character-classes"}}');var a=r(74848),c=r(28453);const t={sidebar_position:2},i="Characters, metacharacters, and metasequences",h={},l=[{value:"About metacharacters",id:"about-metacharacters",level:4},{value:"About metasequences",id:"about-metasequences",level:4}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"characters-metacharacters-and-metasequences",children:"Characters, metacharacters, and metasequences"})}),"\n",(0,a.jsx)(s.p,{children:"The simplest regular expression is one that matches a sequence of characters, as\nin the following example:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"var pattern:RegExp = /hello/;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["However, the following characters, known as metacharacters ",(0,a.jsx)(s.em,{children:","})," have special\nmeanings in regular expressions:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"^ $ \\ . * + ? ( ) [ ] { } |\n"})}),"\n",(0,a.jsx)(s.p,{children:"For example, the following regular expression matches the letter A followed by\nzero or more instances of the letter B (the asterisk metacharacter indicates\nthis repetition), followed by the letter C:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"/AB*C/\n"})}),"\n",(0,a.jsxs)(s.p,{children:["To include a metacharacter without its special meaning in a regular expression\npattern, you must use the backslash ( ",(0,a.jsx)(s.code,{children:"\\"})," ) escape character. For example, the\nfollowing regular expression matches the letter A followed by the letter B,\nfollowed by an asterisk, followed by the letter C:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"var pattern:RegExp = /AB\\*C/;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["A ",(0,a.jsx)(s.em,{children:"metasequence,"})," like a metacharacter, has special meaning in a regular\nexpression. A metasequence is made up of more than one character. The following\nsections provide details on using metacharacters and metasequences."]}),"\n",(0,a.jsx)(s.h4,{id:"about-metacharacters",children:"About metacharacters"}),"\n",(0,a.jsx)(s.p,{children:"The following table summarizes the metacharacters that you can use in regular\nexpressions:"}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:(0,a.jsx)("p",{children:"Metacharacter"})}),(0,a.jsx)("th",{children:(0,a.jsx)("p",{children:"Description"})})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"^"})," (caret)"]})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Matches at the start of the string. With the ",(0,a.jsx)("samp",{children:"m"})," (\n",(0,a.jsx)("samp",{children:"multiline"})," ) flag set, the caret matches the start of a\nline as well (see\n",(0,a.jsx)("a",{href:"flags-and-properties",children:"Flags and properties"})," ). Note that\nwhen used at the start of a character class, the caret indicates\nnegation, not the start of a string. For more information, see\n",(0,a.jsx)("a",{href:"character-classes",children:"Character classes"}),"."]})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"$"})," (dollar sign)"]})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Matches at the end of the string. With the ",(0,a.jsx)("samp",{children:"m"})," (\n",(0,a.jsx)("samp",{children:"multiline"})," ) flag set, ",(0,a.jsx)("samp",{children:"$"})," matches the position\nbefore a newline ( ",(0,a.jsx)("samp",{children:"\\n"})," ) character as well. For more\ninformation, see\n",(0,a.jsx)("a",{href:"flags-and-properties",children:"Flags and properties"}),"."]})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"\\"})," (backslash)"]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:"Escapes the special metacharacter meaning of special characters."}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Also, use the backslash character if you want to use a forward slash\ncharacter in a regular expression literal, as in\n",(0,a.jsx)("samp",{children:"/1/2/"})," (to match the character 1, followed by the forward\nslash character, followed by the character 2)."]})})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"."})," (dot)"]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:"Matches any single character."}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["A dot matches a newline character ( ",(0,a.jsx)("samp",{children:"\\n"})," ) only if the\n",(0,a.jsx)("samp",{children:"s"})," ( ",(0,a.jsx)("samp",{children:"dotall"})," ) flag is set. For more\ninformation, see\n",(0,a.jsx)("a",{href:"flags-and-properties",children:"Flags and properties"}),"."]})})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"*"})," (star)"]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:"Matches the previous item repeated zero or more times."}),(0,a.jsxs)("p",{children:["For more information, see ",(0,a.jsx)("a",{href:"quantifiers",children:"Quantifiers"}),"."]})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"+"})," (plus)"]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:"Matches the previous item repeated one or more times."}),(0,a.jsxs)("p",{children:["For more information, see ",(0,a.jsx)("a",{href:"quantifiers",children:"Quantifiers"}),"."]})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"?"})," (question mark)"]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:"Matches the previous item repeated zero times or one time."}),(0,a.jsxs)("p",{children:["For more information, see ",(0,a.jsx)("a",{href:"quantifiers",children:"Quantifiers"}),"."]})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"("})," and ",(0,a.jsx)("samp",{children:")"})]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Defines groups within the regular expression. Use groups for the\nfollowing:"})}),(0,a.jsxs)("ul",{class:"incremental",children:[(0,a.jsx)("li",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["To confine the scope of the | alternator: ",(0,a.jsx)("samp",{children:"/(a|b|c)d/"})]})})}),(0,a.jsx)("li",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["To define the scope of a quantifier: ",(0,a.jsxs)("samp",{children:["/(walla.)",2,"/"]})]})})}),(0,a.jsx)("li",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["In backreferences. For example, the ",(0,a.jsx)("samp",{children:"\\1"})," in the\nfollowing regular expression matches whatever matched the first\nparenthetical group of the pattern:"]})})}),(0,a.jsx)("li",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"/(\\w*) is repeated: \\1/"})})})]}),(0,a.jsxs)("p",{children:["For more information, see ",(0,a.jsx)("a",{href:"groups",children:"Groups"}),"."]})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"["})," and ",(0,a.jsx)("samp",{children:"]"})]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Defines a character class, which defines possible matches for a single\ncharacter:"})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsx)("samp",{children:"/[aeiou]/"})," matches any one of the specified characters."]})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Within character classes, use the hyphen (\n",(0,a.jsx)("samp",{children:"-"}),"\n) to designate a range of characters:"]})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsx)("samp",{children:"/[A-Z0-9]/"})," matches uppercase A through Z or 0 through 9."]})}),(0,a.jsx)("p",{children:"Within character classes, insert a backslash to escape the ] and"}),(0,a.jsx)("p",{children:"- characters:"}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsx)("samp",{children:"/[+-]\\d+/"})," matches either ",(0,a.jsx)("samp",{children:"+"})," or\n",(0,a.jsx)("samp",{children:"-"})," before one or more digits."]})}),(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Within character classes, other characters, which are normally\nmetacharacters, are treated as normal characters (not metacharacters),\nwithout the need for a backslash:"})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsx)("samp",{children:"/[$]/"})," \xa3 matches either ",(0,a.jsx)("samp",{children:"$"})," ",(0,a.jsx)("samp",{children:"or"})," \xa3."]})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["For more information, see\n",(0,a.jsx)("a",{href:"character-classes",children:"Character classes"}),"."]})})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"|"})," ",(0,a.jsx)("em",{children:"(pipe)"})]})}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Used for alternation, to match either the part on the left side or the\npart on the right side:"})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsx)("samp",{children:"/abc|xyz/"})," matches either ",(0,a.jsx)("samp",{children:"abc"})," or\n",(0,a.jsx)("samp",{children:"xyz"})," ."]})})]})]})]})]}),"\n",(0,a.jsx)(s.h4,{id:"about-metasequences",children:"About metasequences"}),"\n",(0,a.jsx)(s.p,{children:"Metasequences are sequences of characters that have special meaning in a regular\nexpression pattern. The following table describes these metasequences:"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{style:{textAlign:"right"},children:"Metasequence"}),(0,a.jsx)(s.th,{children:"Description"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsxs)(s.td,{style:{textAlign:"right"},children:[(0,a.jsx)("br",{}),(0,a.jsx)("br",{})]}),(0,a.jsx)(s.td,{})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsxs)(s.td,{style:{textAlign:"right"},children:[(0,a.jsx)("samp",{children:"{n}"}),(0,a.jsx)("br",{})]}),(0,a.jsx)(s.td,{})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsxs)(s.td,{style:{textAlign:"right"},children:[(0,a.jsx)("samp",{children:"{n,}"}),(0,a.jsx)("br",{})]}),(0,a.jsx)(s.td,{})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsxs)(s.td,{style:{textAlign:"right"},children:[(0,a.jsx)("samp",{children:"{n, n}"}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{})]}),(0,a.jsxs)(s.td,{children:["Specifies a numeric quantifier or quantifier range for the previous item:",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)(s.code,{children:"/A{27}/"})," matches the character A repeated 27 times.",(0,a.jsx)("br",{}),(0,a.jsx)(s.code,{children:"/A{3,}/"})," matches the character A repeated 3 or more times.",(0,a.jsx)("br",{}),(0,a.jsx)(s.code,{children:"/A{3,5}/"})," matches the character A repeated 3 to 5 times.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),"For more information, see ",(0,a.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers",children:"Quantifiers"}),"."]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{style:{textAlign:"right"},children:(0,a.jsx)("samp",{children:"\\b"})}),(0,a.jsx)(s.td,{children:"Matches at the position between a word character and a nonword character. If the first or last character in the string is a word character, also matches the start or end of the string."})]})]})]}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:(0,a.jsx)("p",{children:"Metasequence"})}),(0,a.jsx)("th",{children:(0,a.jsx)("p",{children:"Description"})})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsxs)("td",{children:[(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"{"}),(0,a.jsx)("samp",{children:"n"}),(0,a.jsx)("samp",{children:"}"})]}),(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"{"}),(0,a.jsx)("samp",{children:"n"}),(0,a.jsx)("samp",{children:",}"})]}),(0,a.jsx)("p",{children:"and"}),(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"{"}),(0,a.jsx)("samp",{children:"n"}),(0,a.jsx)("samp",{children:","}),(0,a.jsx)("samp",{children:"n"}),(0,a.jsx)("samp",{children:"}"})]})]}),(0,a.jsxs)("td",{children:[(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Specifies a numeric quantifier or quantifier range for the previous\nitem:"})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("samp",{children:["/A",27,"/"]})," matches the character ",(0,a.jsx)("samp",{children:"A"})," repeated\n",(0,a.jsx)("samp",{children:"27"})," times."]})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("samp",{children:["/A","{3,}","/"]})," matches the character ",(0,a.jsx)("samp",{children:"A"})," repeated\n",(0,a.jsx)("samp",{children:"3"})," or more times."]})}),(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("samp",{children:["/A","{3,5}","/"]})," matches the character\n",(0,a.jsx)("samp",{children:"A"})," repeated ",(0,a.jsx)("samp",{children:"3"})," to ",(0,a.jsx)("samp",{children:"5"})," times."]})}),(0,a.jsxs)("p",{children:["For more information, see ",(0,a.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers",children:"Quantifiers"})," ."]})]})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\b"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Matches at the position between a word character and a nonword\ncharacter. If the first or last character in the string is a word\ncharacter, also matches the start or end of the string."})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\B"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Matches at the position between two word characters. Also matches the\nposition between two nonword characters."})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\d"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches a decimal digit."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\D"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches any character other than a digit."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\f"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches a form feed character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\n"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches the newline character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\r"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches the return character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\s"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)(s.p,{children:"Matches any white-space character (a space, tab, newline, or return\ncharacter)."})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\S"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches any character other than a white-space character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\t"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches the tab character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"\\u"})," ",(0,a.jsx)("samp",{children:"nnnn"})]})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Matches the Unicode character with the character code specified by the\nhexadecimal number ",(0,a.jsx)("em",{children:"nnnn"}),". For example, ",(0,a.jsx)("samp",{children:"\\u263a"})," is\nthe smiley character."]})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\v"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches a vertical feed character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\w"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Matches a word character ( ",(0,a.jsx)("samp",{children:"AZ"})," \u2013, ",(0,a.jsx)("samp",{children:"az"})," \u2013,\n",(0,a.jsx)("samp",{children:"0-9"})," , or ",(0,a.jsx)("samp",{children:"_"})," ). Note that ",(0,a.jsx)("samp",{children:"\\w"})," does\nnot match non-English characters, such as ",(0,a.jsx)("samp",{children:"\xe9"}),",\n",(0,a.jsx)("samp",{children:"\xf1"}),", or ",(0,a.jsx)("samp",{children:"\xe7"}),"."]})})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsx)("samp",{children:"\\W"})})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:"Matches any character other than a word character."})})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("p",{children:[(0,a.jsx)("samp",{children:"\\x"})," ",(0,a.jsx)("samp",{children:"nn"})]})}),(0,a.jsx)("td",{children:(0,a.jsx)("p",{children:(0,a.jsxs)(s.p,{children:["Matches the character with the specified ASCII value, as defined by\nthe hexadecimal number ",(0,a.jsx)("em",{children:"nn"}),"."]})})})]})]})]})]})}function x(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);