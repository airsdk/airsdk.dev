"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[98665],{17799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"development/display/working-with-geometry/basics-of-geometry","title":"Basics of geometry","description":"The flash.geom package contains classes that define geometric objects such as points, rectangles, and transformation matrixes. These classes don\u2019t necessarily provide functionality by themselves; however, they are used to define the properties of objects that are used in other classes.","source":"@site/docs/development/display/working-with-geometry/basics-of-geometry.md","sourceDirName":"development/display/working-with-geometry","slug":"/development/display/working-with-geometry/basics-of-geometry","permalink":"/docs/development/display/working-with-geometry/basics-of-geometry","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-geometry/basics-of-geometry.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Basics of geometry","sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Overview","permalink":"/docs/development/display/working-with-geometry/"},"next":{"title":"Using Point objects","permalink":"/docs/development/display/working-with-geometry/using-point-objects"}}');var i=n(74848),s=n(28453);const a={title:"Basics of geometry",sidebar_position:2},r=void 0,c={},l=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"flash.geom"})," package contains classes that define geometric objects such as points, rectangles, and transformation matrixes. These classes don\u2019t necessarily provide functionality by themselves; however, they are used to define the properties of objects that are used in other classes."]}),"\n",(0,i.jsx)(t.p,{children:"All the geometry classes are based around the notion that locations on the screen are represented as a two-dimensional plane. The screen is treated like a flat graph with a horizontal (x) axis and a vertical (y) axis. Any location (or point ) on the screen can be represented as a pair of x and y values\u2014the coordinates of that location."}),"\n",(0,i.jsx)(t.p,{children:"Every display object, including the Stage, has its own coordinate space . The coordinate space is an object\u2019s own graph for plotting the locations of child display objects, drawings, and so on. The origin is at coordinate location 0, 0 (where the x and y-axes meet), and is placed at the upper-left corner of the display object. While this origin location is always true for the Stage, it is not necessarily true for other display objects. Values on the x-axis get bigger going toward the right, and smaller going toward the left. For locations to the left of the origin, the x coordinate is negative. However, contrary to traditional coordinate systems, Flash runtime coordinate values on the y-axis get bigger going down the screen and smaller going up the screen. Values above the origin have a negative y coordinate value). Since the upper-left corner of the Stage is the origin of its coordinate space, most objects on the Stage have an x coordinate greater than 0 and smaller than the Stage width. And the same object has a y coordinate larger than 0 and smaller than the Stage height."}),"\n",(0,i.jsxs)(t.p,{children:["You can use Point class instances to represent individual points in a coordinate space. You can create a Rectangle instance to represent a rectangular region in a coordinate space. For advanced users, you can use a Matrix instance to apply multiple or complex transformations to a display object. Many simple transformations, such as rotation, position, and scale changes, can be applied directly to a display object using that object\u2019s properties. For more information on applying transformations using display object properties, see ",(0,i.jsx)(t.a,{href:"/docs/development/display/display-programming/manipulating-display-objects/",children:"Manipulating display objects"})," ."]}),"\n",(0,i.jsx)(t.h2,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,i.jsx)(t.p,{children:"The following reference list contains important geometry terms:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Cartesian coordinates"})," Coordinates are commonly written as a pair of number (like 5, 12 or 17, -23). The two numbers are the x coordinate and the y coordinate, respectively."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Coordinate space"})," The graph of coordinates contained in a display object, on which its child elements are positioned."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Origin"})," The point in a coordinate space where the x-axis meets the y-axis. This point has the coordinate 0, 0."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Point"})," A single location in a coordinate space. In the 2-d coordinate system used in ActionScript, the location along the x-axis and the y-axis (the point\u2019s coordinates) define the point."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Registration"})," point In a display object, the origin (0, 0 coordinate) of its coordinate space."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Scale"})," The size of an object relative to its original size. When used as a verb, to scale an object means to change its size by stretching or shrinking the object."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Translate"})," To change a point\u2019s coordinates from one coordinate space to another."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Transformation"})," An adjustment to a visual characteristic of a graphic, such as rotating the object, altering its scale, skewing or distorting its shape, or altering its color."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"X-axis"})," The horizontal axis in the 2-d coordinate system used in ActionScript."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Y-axis"})," The vertical axis in the 2-d coordinate system used in ActionScript."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(96540);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);