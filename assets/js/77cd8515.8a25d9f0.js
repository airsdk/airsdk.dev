"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[37971],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var t=o(96540);const i={},c=t.createContext(i);function r(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(c.Provider,{value:n},e.children)}},39206:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"building/air-developer-tool/option-sets/debugger-connection-options","title":"ADT Debugger connection options","description":"When the target of the package is apk-debug, ipa-debug, or ipa-debug-interpreter, the connection options can be used to specify whether the app will attempt to connect to a remote debugger (typically used for wifi debugging) or listen for an incoming connection from a remote debugger (typically used for USB debugging). Use the -connect option to connect to a debugger; use the -listen option to accept a connection from a debugger over a USB connection. These options are mutually exclusive; that is, you cannot use them together.","source":"@site/docs/building/air-developer-tool/option-sets/debugger-connection-options.md","sourceDirName":"building/air-developer-tool/option-sets","slug":"/building/air-developer-tool/option-sets/debugger-connection-options","permalink":"/docs/building/air-developer-tool/option-sets/debugger-connection-options","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/building/air-developer-tool/option-sets/debugger-connection-options.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"ADT Debugger connection options","sidebar_label":"Debugger connection","sidebar_position":3},"sidebar":"mainSidebar","previous":{"title":"File and path","permalink":"/docs/building/air-developer-tool/option-sets/file-and-path-options"},"next":{"title":"Android application profiling","permalink":"/docs/building/air-developer-tool/option-sets/android-application-profiling-options"}}');var i=o(74848),c=o(28453);const r={title:"ADT Debugger connection options",sidebar_label:"Debugger connection",sidebar_position:3},s=void 0,d={},l=[{value:"Connect",id:"connect",level:2},{value:"<code>-connect</code>",id:"-connect",level:3},{value:"<code>hostString</code>",id:"hoststring",level:3},{value:"Listen",id:"listen",level:2},{value:"<code>-listen</code>",id:"-listen",level:3},{value:"<code>port</code>",id:"port",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["When the target of the package is ",(0,i.jsx)(n.code,{children:"apk-debug"}),", ",(0,i.jsx)(n.code,{children:"ipa-debug"}),", or ",(0,i.jsx)(n.code,{children:"ipa-debug-interpreter"}),", the connection options can be used to specify whether the app will attempt to connect to a remote debugger (typically used for wifi debugging) or listen for an incoming connection from a remote debugger (typically used for USB debugging). Use the ",(0,i.jsx)(n.code,{children:"-connect"})," option to connect to a debugger; use the ",(0,i.jsx)(n.code,{children:"-listen"})," option to accept a connection from a debugger over a USB connection. These options are mutually exclusive; that is, you cannot use them together."]}),"\n",(0,i.jsx)(n.h2,{id:"connect",children:"Connect"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"-connect"})," option uses the following syntax:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"-connect hostString\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-connect",children:(0,i.jsx)(n.code,{children:"-connect"})}),"\n",(0,i.jsx)(n.p,{children:"If present, the app will attempt to connect to a remote debugger."}),"\n",(0,i.jsx)(n.h3,{id:"hoststring",children:(0,i.jsx)(n.code,{children:"hostString"})}),"\n",(0,i.jsxs)(n.p,{children:["A string identifying the computer running the Flash debugging tool FDB. If not specified, the app will attempt to connect to a debugger running on the computer on which the package is created. The host string can be a fully qualified computer domain name: ",(0,i.jsx)(n.code,{children:"machinename.subgroup.example.com"}),", or an IP address: ",(0,i.jsx)(n.code,{children:"192.168.4.122"}),". If the specified (or default) machine cannot be found, then the runtime will display a dialog requesting a valid host name."]}),"\n",(0,i.jsx)(n.h2,{id:"listen",children:"Listen"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"-listen"})," option uses the following syntax:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"-listen port\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-listen",children:(0,i.jsx)(n.code,{children:"-listen"})}),"\n",(0,i.jsx)(n.p,{children:"If present, the runtime waits for a connection from a remote debugger."}),"\n",(0,i.jsx)(n.h3,{id:"port",children:(0,i.jsx)(n.code,{children:"port"})}),"\n",(0,i.jsx)(n.p,{children:"(Optional)"}),"\n",(0,i.jsxs)(n.p,{children:["The port to listen on. By default, the runtime listens on port 7936. For more information on using the ",(0,i.jsx)(n.code,{children:"-listen"})," option, see ",(0,i.jsx)(n.a,{href:"https://help.adobe.com/en_US/air/build/WS901d38e593cd1bac7b2281cc12cd6bced97-8000.html",children:"Remote debugging with FDB over USB"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);