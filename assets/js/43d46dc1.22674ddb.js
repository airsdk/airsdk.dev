"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[51610],{3154:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"development/display/working-with-movie-clips/basics-of-movie-clips","title":"Basics of movie clips","description":"Movie clips are a key element for people who create animated content with the","source":"@site/docs/development/display/working-with-movie-clips/basics-of-movie-clips.md","sourceDirName":"development/display/working-with-movie-clips","slug":"/development/display/working-with-movie-clips/basics-of-movie-clips","permalink":"/docs/development/display/working-with-movie-clips/basics-of-movie-clips","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-movie-clips/basics-of-movie-clips.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Working with movie clips","permalink":"/docs/development/display/working-with-movie-clips/"},"next":{"title":"Controlling movie clip playback","permalink":"/docs/development/display/working-with-movie-clips/controlling-movie-clip-playback"}}');var s=t(74848),o=t(28453);const a={},r="Basics of movie clips",l={},c=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}];function p(e){const i={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"basics-of-movie-clips",children:"Basics of movie clips"})}),"\n",(0,s.jsxs)(i.p,{children:["Movie clips are a key element for people who create animated content with the\nFlash authoring tool and want to control that content with ActionScript.\nWhenever you create a movie clip symbol in Flash, Flash adds the symbol to the\nlibrary of that Flash document. By default, this symbol becomes an instance of\nthe\n",(0,s.jsx)(i.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/display/MovieClip.html",children:"MovieClip class"}),",\nand as such has the properties and methods of the MovieClip class."]}),"\n",(0,s.jsx)(i.p,{children:"When an instance of a movie clip symbol is placed on the Stage, the movie clip\nautomatically progresses through its timeline (if it has more than one frame)\nunless its playback is altered using ActionScript. It is this timeline that\ndistinguishes the MovieClip class, allowing you to create animation through\nmotion or shape tweens through the Flash authoring tool. By contrast, with a\ndisplay object that is an instance of the Sprite class, you can create animation\nonly by programmatically changing the object's values."}),"\n",(0,s.jsxs)(i.p,{children:["In previous versions of ActionScript, the MovieClip class was the base class of\nall instances on the Stage. In ActionScript 3.0, a movie clip is only one of\nmany display objects that can appear on the screen. If a timeline is not\nnecessary for the function of a display object, using the Shape class or Sprite\nclass in lieu of the MovieClip class may improve rendering performance. For more\ninformation on choosing the appropriate display object for a task, see\n",(0,s.jsx)(i.a,{href:"/docs/development/display/display-programming/working-with-display-objects/choosing-a-displayobject-subclass",children:"Choosing a DisplayObject subclass"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,s.jsx)(i.p,{children:"The following reference list contains important terms related to movie clips:"}),"\n",(0,s.jsxs)(i.p,{children:["AVM1 SWF",(0,s.jsx)(i.br,{}),"\n","A SWF file created using ActionScript 1.0 or ActionScript 2.0, usually targeting\nFlash Player 8 or earlier."]}),"\n",(0,s.jsxs)(i.p,{children:["AVM2 SWF",(0,s.jsx)(i.br,{}),"\n","A SWF file created using ActionScript 3.0 for Adobe Flash Player 9 or later or\nAdobe AIR."]}),"\n",(0,s.jsxs)(i.p,{children:["External SWF",(0,s.jsx)(i.br,{}),"\n","A SWF file that is created separately from the project SWF file and is intended\nto be loaded into the project SWF file and played back within that SWF file."]}),"\n",(0,s.jsxs)(i.p,{children:["Frame",(0,s.jsx)(i.br,{}),"\n","The smallest division of time on the timeline. As with a motion picture\nfilmstrip, each frame is like a snapshot of the animation in time, and when\nframes are played quickly in sequence, the effect of animation is created."]}),"\n",(0,s.jsxs)(i.p,{children:["Timeline",(0,s.jsx)(i.br,{}),"\n","The metaphorical representation of the series of frames that make up a movie\nclip's animation sequence. The timeline of a MovieClip object is equivalent to\nthe timeline in the Flash authoring tool."]}),"\n",(0,s.jsxs)(i.p,{children:["Playhead",(0,s.jsx)(i.br,{}),"\n","A marker identifying the location (frame) in the timeline that is being\ndisplayed at a given moment."]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>r});var n=t(96540);const s={},o=n.createContext(s);function a(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);