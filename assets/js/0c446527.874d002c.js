"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[42654],{17631:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element","title":"Dragging data out of an HTML element","description":"The default behavior allows most content in an HTML page to be copied by","source":"@site/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element.md","sourceDirName":"development/user-interaction/drag-and-drop-in-air","slug":"/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element","permalink":"/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"mainSidebar","previous":{"title":"Drag and drop in HTML","permalink":"/docs/development/user-interaction/drag-and-drop-in-air/drag-and-drop-in-html"},"next":{"title":"Dragging data into an HTML element","permalink":"/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-into-an-html-element"}}');var r=n(74848),d=n(28453);const o={sidebar_position:5},i="Dragging data out of an HTML element",s={},c=[{value:"Setting the dragged data",id:"setting-the-dragged-data",level:2}];function l(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"dragging-data-out-of-an-html-element",children:"Dragging data out of an HTML element"})}),"\n",(0,r.jsxs)(t.p,{children:["The default behavior allows most content in an HTML page to be copied by\ndragging. You can control the content allowed to be dragged using CSS properties\n",(0,r.jsx)(t.code,{children:"-webkit-user-select"})," and ",(0,r.jsx)(t.code,{children:"-webkit-user-drag"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Override the default drag-out behavior in the handler for the ",(0,r.jsx)(t.code,{children:"dragstart"})," event.\nCall the ",(0,r.jsx)(t.code,{children:"setData()"})," method of the ",(0,r.jsx)(t.code,{children:"dataTransfer"})," property of the event object\nto put your own data into the drag gesture."]}),"\n",(0,r.jsxs)(t.p,{children:["To indicate which drag effects a source object supports when you are not relying\non the default behavior, set the ",(0,r.jsx)(t.code,{children:"dataTransfer.effectAllowed"})," property of the\nevent object dispatched for the ",(0,r.jsx)(t.code,{children:"dragstart"})," event. You can choose any\ncombination of effects. For example, if a source element supports both ",(0,r.jsx)(t.em,{children:"copy"}),"\nand ",(0,r.jsx)(t.em,{children:"link"})," effects, set the property to ",(0,r.jsx)(t.code,{children:'"copyLink"'}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"setting-the-dragged-data",children:"Setting the dragged data"}),"\n",(0,r.jsxs)(t.p,{children:["Add the data for the drag gesture in the handler for the ",(0,r.jsx)(t.code,{children:"dragstart"})," event with\nthe ",(0,r.jsx)(t.code,{children:"dataTransfer"})," property. Use the ",(0,r.jsx)(t.code,{children:"dataTransfer.setData()"})," method to put data\nonto the clipboard, passing in the MIME type and the data to transfer."]}),"\n",(0,r.jsxs)(t.p,{children:["For example, if you had an image element in your application, with the id\n",(0,r.jsx)(t.em,{children:"imageOfGeorge"})," , you could use the following dragstart event handler. This\nexample adds representations of a picture of George in several data formats,\nwhich increases the likelihood that other applications can use the dragged data."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'function dragStartHandler(event){\n\tevent.dataTransfer.effectAllowed = "copy";\n\n\tvar dragImage = document.getElementById("imageOfGeorge");\n\tvar dragFile = new air.File(dragImage.src);\n\tevent.dataTransfer.setData("text/plain","A picture of George");\n\tevent.dataTransfer.setData("image/x-vnd.adobe.air.bitmap", dragImage);\n\tevent.dataTransfer.setData("application/x-vnd.adobe.air.file-list",\n\t\t\t\t\t\t\t\tnew Array(dragFile));\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Note: When you call the ",(0,r.jsx)(t.code,{children:"setData()"})," method of ",(0,r.jsx)(t.code,{children:"dataTransfer"})," object, no data is\nadded by the default drag-and-drop behavior."]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var a=n(96540);const r={},d=a.createContext(r);function o(e){const t=a.useContext(d);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(d.Provider,{value:t},e.children)}}}]);