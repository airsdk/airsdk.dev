"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[67093],{5834:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class","title":"Creating subclasses of the HTMLLoader class","description":"You can create a subclass of the HTMLLoader class, to create new behaviors. For","source":"@site/docs/development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class.md","sourceDirName":"development/html-content-in-air/scripting-the-air-html-container","slug":"/development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class","permalink":"/docs/development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Accessing the HTML history list","permalink":"/docs/development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list"},"next":{"title":"Defining browser-like user interfaces for HTML content","permalink":"/docs/development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content"}}');var o=n(74848),r=n(28453);const i={},a="Creating subclasses of the HTMLLoader class",c={},l=[];function d(t){const e={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"creating-subclasses-of-the-htmlloader-class",children:"Creating subclasses of the HTMLLoader class"})}),"\n",(0,o.jsx)(e.p,{children:"You can create a subclass of the HTMLLoader class, to create new behaviors. For\nexample, you can create a subclass that defines default event listeners for\nHTMLLoader events (such as those events dispatched when HTML is rendered or when\nthe user clicks a link)."}),"\n",(0,o.jsxs)(e.p,{children:["The following example extends the HTMLHost class to provide ",(0,o.jsx)(e.em,{children:"normal"})," behavior\nwhen the JavaScript ",(0,o.jsx)(e.code,{children:"window.open()"})," method is called. The example then defines a\nsubclass of HTMLLoader that uses the custom HTMLHost implementation class:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"package\n{\n\timport flash.html.HTMLLoader;\n\tpublic class MyHTMLHost extends HTMLHost\n\t{\n\t\tpublic function MyHTMLHost()\n\t\t{\n\t\t\tsuper(false);\n\t\t}\n\t\toverride public function createWindow(opts:HTMLWindowCreateOptions):void\n\t\t{\n\t\t\tvar initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();\n\t\t\tvar bounds:Rectangle = new Rectangle(opts.x, opts.y, opts.width, opts.height);\n\t\t\tvar html:HTMLLoader = HTMLLoader.createRootWindow(true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tinitOptions,\n\t\t\t\t\t\t\t\t\t\t\t\t\topts.scrollBarsVisible,\n\t\t\t\t\t\t\t\t\t\t\t\t\tbounds);\n\t\t\thtml.stage.nativeWindow.orderToFront();\n\t\t\treturn html\n\t\t}\n\t}\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["The following defines a subclass of the HTMLLoader class that assigns a\nMyHTMLHost object to its ",(0,o.jsx)(e.code,{children:"htmlHost"})," property:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"package\n{\n\timport flash.html.HTMLLoader;\n\tpublic class MyHTML extends HTMLLoader\n\t{\n\t\tpublic function MyHTML()\n\t\t{\n\t\t\tsuper();\n\t\t\thtmlHost = new MyHTMLHost();\n\t\t}\n\t}\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["For details on the HTMLHost class and the ",(0,o.jsx)(e.code,{children:"HTMLLoader.createRootWindow()"})," method\nused in this example, see\n",(0,o.jsx)(e.a,{href:"/docs/development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content",children:"Defining browser-like user interfaces for HTML content"}),"."]})]})}function h(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>a});var s=n(96540);const o={},r=s.createContext(o);function i(t){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:i(t.components),s.createElement(r.Provider,{value:e},t.children)}}}]);