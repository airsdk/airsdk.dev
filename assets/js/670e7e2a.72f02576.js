"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[51812],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(96540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},58232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting","title":"Troubleshooting","description":"Hardware and software support for touch input is changing, rapidly. This","source":"@site/docs/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting.md","sourceDirName":"development/user-interaction/touch-multitouch-and-gesture-input","slug":"/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting","permalink":"/docs/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"mainSidebar","previous":{"title":"Gesture event handling","permalink":"/docs/development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling"},"next":{"title":"Copy and paste","permalink":"/docs/development/user-interaction/copy-and-paste/"}}');var i=n(74848),s=n(28453);const r={sidebar_position:6},a="Troubleshooting",d={},h=[{value:"Known Issues",id:"known-issues",level:2}];function c(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n",(0,i.jsx)(t.p,{children:"Hardware and software support for touch input is changing, rapidly. This\nreference does not maintain a list of every device an operating system and\nsoftware combination that supports multitouch. However, it provides guidance on\nusing the discovery API to determine if your application is deployed on a device\nthat supports multitouch, and provides tips for troubleshooting your\nActionScript code."}),"\n",(0,i.jsx)(t.p,{children:'Flash runtimes respond to touch events based on information the device,\noperating system, or containing software (such as a browser) passes to the\nruntime. This dependency on the software environment complicates documenting\nmultitouch compatibility. Some devices interpret a gesture or touch motion\ndifferently than another device. Is rotation defined by two fingers rotating at\nthe same time? Is rotation one finger drawing a circle on a screen? Depending on\nthe hardware and software environment, the rotation gesture could be either, or\nsomething entirely different. So, the device tells the operating system the user\ninput, then the operating system passes that information to the runtime. If the\nruntime is inside a browser, the browser software sometimes interprets the\ngesture or touch event and does not pass the input to the runtime. This behavior\nis similar to the behavior of "hotkeys": you try to use a specific key\ncombination to get Flash Player to do something inside the browser and the\nbrowser keeps opening a menu instead.'}),"\n",(0,i.jsxs)(t.p,{children:["Individual API and classes mention if they're not compatible with specific\noperating systems. You can explore individual API entries here, starting with\nthe Multitouch class: ",(0,i.jsx)(t.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/ui/Multitouch.html",children:"https://airsdk.dev/reference/actionscript/3.0/flash/ui/Multitouch.html"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Here are some common gesture and touch descriptions:"}),"\n",(0,i.jsxs)(t.p,{children:["Pan",(0,i.jsx)(t.br,{}),"\n","Move a finger left-to-right or right-to-left. Some devices require two fingers\nto pan."]}),"\n",(0,i.jsxs)(t.p,{children:["Rotate",(0,i.jsx)(t.br,{}),"\n","Touch two fingers down, then move them around in a circle (as if they're both\nsimultaneously tracing an imaginary circle on a surface). The pivot point is set\nat the midpoint between the two finger touch points."]}),"\n",(0,i.jsxs)(t.p,{children:["Swipe",(0,i.jsx)(t.br,{}),"\n","Move three fingers left-to-right or right-to-left, top-to-bottom, or\nbottom-to-top, quickly."]}),"\n",(0,i.jsxs)(t.p,{children:["Zoom",(0,i.jsx)(t.br,{}),"\n","Touch two fingers down, then move them away from each other to zoom in and\ntoward each other to zoom out."]}),"\n",(0,i.jsxs)(t.p,{children:["Press-and-tap",(0,i.jsx)(t.br,{}),"\n","Move or press one finger, then tap the surface with another."]}),"\n",(0,i.jsx)(t.p,{children:"Each device has its own documentation about the gestures the device supports and\nhow to perform each gesture on that device. In general, the user must remove all\nfingers from contact with the device between gestures, depending upon the\noperating system."}),"\n",(0,i.jsx)(t.p,{children:"If you find your application is not responding to touch events or gestures, test\nthe following:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Do you have event listeners for touch or gesture events attached to an\nobject class that inherits from the InteractiveObject class? Only\nInteractiveObject instances can listen for touch and gesture events"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Are you testing your application within Flash Professional CS5? If so, try\npublishing and testing the application, because Flash Professional can\nintercept the interaction."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Start simple and see what does work, first (the following code example is\nfrom the API entry for ",(0,i.jsx)(t.code,{children:"Multitouch.inputMode"}),":"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-actionscript",children:'Multitouch.inputMode=MultitouchInputMode.TOUCH_POINT;\nvar mySprite:Sprite = new Sprite();\nvar myTextField:TextField = new TextField()\n\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(0,0,40,40);\naddChild(mySprite);\n\nmySprite.addEventListener(TouchEvent.TOUCH_TAP, taplistener);\n\nfunction taplistener(e:TouchEvent): void {\n        myTextField.text = "I\'ve been tapped";\n        myTextField.y = 50;\n        addChild(myTextField);\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Tap the rectangle. If this example works, then you know your environment\nsupports a simple tap. Then you can try more complicated handling."}),"\n",(0,i.jsx)(t.p,{children:"Testing for gesture support is more complicated. An individual device or\noperating system supports any combination of gesture input, or none."}),"\n",(0,i.jsx)(t.p,{children:"Here is a simple test for the zoom gesture:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-actionscript",children:'Multitouch.inputMode = MultitouchInputMode.GESTURE;\n\nstage.addEventListener(TransformGestureEvent.GESTURE_ZOOM , onZoom);\nvar myTextField = new TextField();\nmyTextField.y = 200;\nmyTextField.text = "Perform a zoom gesture";\naddChild(myTextField);\n\nfunction onZoom(evt:TransformGestureEvent):void {\n        myTextField.text = "Zoom is supported";\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Perform a zoom gesture on the device and see if the text field populates\nwith the message ",(0,i.jsx)(t.code,{children:"Zoom is supported"}),". The event listener is added to the\nstage so you can perform the gesture on any part of the test application."]}),"\n",(0,i.jsx)(t.p,{children:"Here is a simple test for the pan gesture:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-actionscript",children:'Multitouch.inputMode = MultitouchInputMode.GESTURE;\n\nstage.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan);\nvar myTextField = new TextField();\nmyTextField.y = 200;\nmyTextField.text = "Perform a pan gesture";\naddChild(myTextField);\n\nfunction onPan(evt:TransformGestureEvent):void {\n        myTextField.text = "Pan is supported";\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Perform a pan gesture on the device and see if the text field populates with\nthe message ",(0,i.jsx)(t.code,{children:"Pan is supported"}),". The event listener is added to the stage so\nyou can perform the gesture on any part of the test application."]}),"\n",(0,i.jsx)(t.p,{children:"Some operating system and device combinations support both gestures, some\nsupport only one, some none. Test your application's deployment environment\nto be sure."}),"\n",(0,i.jsx)(t.h2,{id:"known-issues",children:"Known Issues"}),"\n",(0,i.jsx)(t.p,{children:"The following are known issues related to touch input:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Mobile Internet Explorer on Windows Mobile operating system automatically\nzooms SWF file content:"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This Internet Explorer zoom behavior is overridden by adding the following\nto the HTML page hosting the SWF file:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<head>\n    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0">\n</head>\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Windows 7 (and possibly other operating systems), the user must lift the\npointing device (or fingers) off the screen between gestures. For example:,\nto rotate and zoom an image:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Perform the rotate gesture."}),"\n",(0,i.jsx)(t.li,{children:"Lift your fingers off the screen."}),"\n",(0,i.jsx)(t.li,{children:"Put your fingers back onto the screen and perform the zoom gesture."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:'Windows 7 (and possibly other operating systems), the rotate and zoom\ngestures don\'t always generate an "update" phase if the user performs the\ngesture very quickly.'}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Windows 7 Starter Edition does not support multitouch. See the AIR Labs\nForum for details: ",(0,i.jsx)(t.a,{href:"http://forums.adobe.com/thread/579180?tstart=0",children:"http://forums.adobe.com/thread/579180?tstart=0"})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["For Mac OS 10.5.3 and later, the ",(0,i.jsx)(t.code,{children:"Multitouch.supportsGestureEvents"})," value is\nalways ",(0,i.jsx)(t.code,{children:"true"}),", even if the hardware does not support gesture events."]}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);