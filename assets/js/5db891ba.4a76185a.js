"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[38091],{9233:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers","title":"Quantifiers","description":"You use quantifiers to specify repetitions of characters or sequences in","source":"@site/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers.md","sourceDirName":"development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax","slug":"/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"mainSidebar","previous":{"title":"Character classes","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/character-classes"},"next":{"title":"Alternation","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/alternation"}}');var i=r(74848),t=r(28453);const c={sidebar_position:4},a="Quantifiers",o={},l=[];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"quantifiers",children:"Quantifiers"})}),"\n",(0,i.jsx)(s.p,{children:"You use quantifiers to specify repetitions of characters or sequences in\npatterns, as follows:"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:(0,i.jsx)("p",{children:"Quantifier metacharacter"})}),(0,i.jsx)("th",{children:(0,i.jsx)("p",{children:"Description"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsxs)("p",{children:[(0,i.jsx)("samp",{children:"*"}),"(star)"]})}),(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"Matches the previous item repeated zero or more times."})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsxs)("p",{children:[(0,i.jsx)("samp",{children:"+"}),"(plus)"]})}),(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"Matches the previous item repeated one or more times."})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsxs)("p",{children:[(0,i.jsx)("samp",{children:"?"}),"(question mark)"]})}),(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"Matches the previous item repeated zero times or one time."})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsxs)("td",{children:[(0,i.jsxs)("p",{children:[(0,i.jsx)("samp",{children:"{"}),(0,i.jsx)("samp",{children:"n"}),(0,i.jsx)("samp",{children:"}"})]}),(0,i.jsxs)("p",{children:[(0,i.jsx)("samp",{children:"{"}),(0,i.jsx)("samp",{children:"n"}),(0,i.jsx)("samp",{children:",}"})]}),(0,i.jsx)("p",{children:"and"}),(0,i.jsxs)("p",{children:[(0,i.jsx)("samp",{children:"{"}),(0,i.jsx)("samp",{children:"n"}),(0,i.jsx)("samp",{children:","}),(0,i.jsx)("samp",{children:"n"}),(0,i.jsx)("samp",{children:"}"})]})]}),(0,i.jsxs)("td",{children:[(0,i.jsx)("p",{children:(0,i.jsx)(s.p,{children:"Specifies a numeric quantifier or quantifier range for the previous\nitem:"})}),(0,i.jsxs)("p",{children:[(0,i.jsxs)("samp",{children:["/A",27,"/"]})," matches the character A repeated 27 times."]}),(0,i.jsx)("p",{children:(0,i.jsxs)(s.p,{children:[(0,i.jsxs)("samp",{children:["/A","{3,}","/"]})," matches the character A repeated 3 or more\ntimes."]})}),(0,i.jsx)("p",{children:(0,i.jsxs)(s.p,{children:[(0,i.jsxs)("samp",{children:["/A",5,"/"]})," matches the character A repeated 3 to 5 times."]})})]})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"You can apply a quantifier to a single character, to a character class, or to a\ngroup:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"/a+/"})," matches the character ",(0,i.jsx)(s.code,{children:"a"})," repeated one or more times."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"/\\d+/"})," matches one or more digits."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"/[abc]+/"})," matches a repetition of one or more character, each of which is\neither ",(0,i.jsx)(s.code,{children:"a"}),", ",(0,i.jsx)(s.code,{children:"b"}),", or ",(0,i.jsx)(s.code,{children:"c"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"/(very, )*/"})," matches the word ",(0,i.jsx)(s.code,{children:"very"})," followed by a comma and a space repeated\nzero or more times."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["You can use quantifiers within parenthetical groupings that have quantifiers\napplied to them. For example, the following quantifier matches strings such as\n",(0,i.jsx)(s.code,{children:"word"})," and ",(0,i.jsx)(s.code,{children:"word-word-word"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"/\\w+(-\\w+)*/\n"})}),"\n",(0,i.jsxs)(s.p,{children:["By default, regular expressions perform what is known as ",(0,i.jsx)(s.em,{children:"greedy matching."})," Any\nsubpattern in the regular expression (such as ",(0,i.jsx)(s.code,{children:".*"}),") tries to match as many\ncharacters in the string as possible before moving forward to the next part of\nthe regular expression. For example, consider the following regular expression\nand string:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'var pattern:RegExp = /<p>.*<\\/p>/;\nstr:String = "<p>Paragraph 1</p> <p>Paragraph 2</p>";\n'})}),"\n",(0,i.jsx)(s.p,{children:"The regular expression matches the entire string:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"<p>Paragraph 1</p> <p>Paragraph 2</p>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Suppose, however, that you want to match only one ",(0,i.jsx)(s.code,{children:"<p>...</p>"})," grouping. You can\ndo this with the following:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"<p>Paragraph 1</p>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Add a question mark (",(0,i.jsx)(s.code,{children:"?"}),") after any quantifier to change it to what is known as\na ",(0,i.jsx)(s.em,{children:"lazy quantifier"}),". For example, the following regular expression, which uses\nthe lazy ",(0,i.jsx)(s.code,{children:"*?"})," quantifier, matches ",(0,i.jsx)(s.code,{children:"<p>"})," followed by the minimum number of\ncharacters possible (lazy), followed by ",(0,i.jsx)(s.code,{children:"</p>"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"/<p>.*?<\\/p>/\n"})}),"\n",(0,i.jsx)(s.p,{children:"Keep in mind the following points about quantifiers:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The quantifiers ",(0,i.jsx)(s.code,{children:"{0}"})," and ",(0,i.jsx)(s.code,{children:"{0,0}"})," do not exclude an item from a match."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Do not combine multiple quantifiers, as in ",(0,i.jsx)(s.code,{children:"/abc+*/"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The dot (.) does not span lines unless the ",(0,i.jsx)(s.code,{children:"s"})," (",(0,i.jsx)(s.code,{children:"dotall"}),") flag is set, even if\nit is followed by a ",(0,i.jsx)(s.code,{children:"*"})," quantifier. For example, consider the following code:"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'var str:String = "<p>Test\\n";\nstr += "Multiline</p>";\nvar re:RegExp = /<p>.*<\\/p>/;\ntrace(str.match(re)); // null;\n\nre = /<p>.*<\\/p>/s;\ntrace(str.match(re));\n// output: <p>Test\n//                    Multiline</p>\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For more information, see ",(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/flags-and-properties",children:"Flags and properties"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>a});var n=r(96540);const i={},t=n.createContext(i);function c(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);