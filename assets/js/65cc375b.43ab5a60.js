"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[65857],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(96540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}},78856:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"development/display/working-with-motion-tweens/associating-a-motion-tween-with-its-display-objects","title":"Associating a motion tween with its display objects","description":"The last task is to associate the motion tween with the display object or","source":"@site/docs/development/display/working-with-motion-tweens/associating-a-motion-tween-with-its-display-objects.md","sourceDirName":"development/display/working-with-motion-tweens","slug":"/development/display/working-with-motion-tweens/associating-a-motion-tween-with-its-display-objects","permalink":"/docs/development/display/working-with-motion-tweens/associating-a-motion-tween-with-its-display-objects","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-motion-tweens/associating-a-motion-tween-with-its-display-objects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Adding filters","permalink":"/docs/development/display/working-with-motion-tweens/adding-filters"},"next":{"title":"Basics of Motion Tweens","permalink":"/docs/development/display/working-with-motion-tweens/basics-of-motion-tweens"}}');var o=n(74848),s=n(28453);const a={},c="Associating a motion tween with its display objects",r={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"associating-a-motion-tween-with-its-display-objects",children:"Associating a motion tween with its display objects"})}),"\n",(0,o.jsx)(t.p,{children:"The last task is to associate the motion tween with the display object or\nobjects that it manipulates."}),"\n",(0,o.jsx)(t.p,{children:"The AnimatorFactory class manages the association between a motion tween and its\ntarget display objects. The argument to the AnimatorFactory constructor is the\nMotion object:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"var __animFactory_Wheel:AnimatorFactory = new AnimatorFactory(__motion_Wheel);\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Use the ",(0,o.jsx)(t.code,{children:"addTarget()"})," method of the AnimatorFactory class to associate the\ntarget display object with its motion tween. The ActionScript copied from Flash\ncomments out the ",(0,o.jsx)(t.code,{children:"addTarget()"})," line and does not specify an instance name:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"// __animFactory_Wheel.addTarget(<instance name goes here>, 0);\n"})}),"\n",(0,o.jsxs)(t.p,{children:["In your copy, specify the display object to associate with the motion tween. In\nthe following example, the targets are specified as ",(0,o.jsx)(t.code,{children:"greenWheel"})," and ",(0,o.jsx)(t.code,{children:"redWheel"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"__animFactory_Wheel.AnimatorFactory.addTarget(greenWheel, 0);\n__animFactory_Wheel.AnimationFactory.addTarget(redWheel, 0);\n"})}),"\n",(0,o.jsxs)(t.p,{children:["You can associate multiple display objects with the same motion tween using\nmultiple calls to ",(0,o.jsx)(t.code,{children:"addTarget()."})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);