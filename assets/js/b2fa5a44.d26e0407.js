"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[62742],{21651:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"development/user-interaction/copy-and-paste/reading-from-and-writing-to-the-system-clipboard","title":"Reading from and writing to the system clipboard","description":"To read the operating system clipboard, call the getData() method of the","source":"@site/docs/development/user-interaction/copy-and-paste/reading-from-and-writing-to-the-system-clipboard.md","sourceDirName":"development/user-interaction/copy-and-paste","slug":"/development/user-interaction/copy-and-paste/reading-from-and-writing-to-the-system-clipboard","permalink":"/docs/development/user-interaction/copy-and-paste/reading-from-and-writing-to-the-system-clipboard","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/copy-and-paste/reading-from-and-writing-to-the-system-clipboard.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Basics of copy-and-paste","permalink":"/docs/development/user-interaction/copy-and-paste/basics-of-copy-and-paste"},"next":{"title":"HTML copy and paste in AIR","permalink":"/docs/development/user-interaction/copy-and-paste/html-copy-and-paste-in-air"}}');var a=n(74848),r=n(28453);const i={sidebar_position:2},d="Reading from and writing to the system clipboard",s={},c=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"reading-from-and-writing-to-the-system-clipboard",children:"Reading from and writing to the system clipboard"})}),"\n",(0,a.jsxs)(t.p,{children:["To read the operating system clipboard, call the ",(0,a.jsx)(t.code,{children:"getData()"})," method of the\n",(0,a.jsx)(t.code,{children:"Clipboard.generalClipboard"})," object, passing in the name of the format to read:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"import flash.desktop.Clipboard;\nimport flash.desktop.ClipboardFormats;\n\nif(Clipboard.generalClipboard.hasFormat(ClipboardFormats.TEXT_FORMAT)){\nvar text:String = Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT);\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Note: Content running in Flash Player or in a non-application sandbox in AIR can\ncall the ",(0,a.jsx)(t.code,{children:"getData()"})," method only in an event handler for a ",(0,a.jsx)(t.code,{children:"paste"})," event. In\nother words, only code running in the AIR application sandbox can call the\n",(0,a.jsx)(t.code,{children:"getData()"})," method outside of a ",(0,a.jsx)(t.code,{children:"paste"})," event handler."]}),"\n",(0,a.jsxs)(t.p,{children:["To write to the clipboard, add the data to the ",(0,a.jsx)(t.code,{children:"Clipboard.generalClipboard"}),"\nobject in one or more formats. Any existing data in the same format is\noverwritten automatically. Nevertheless, it is a good practice to also clear the\nsystem clipboard before writing new data to it to make sure that unrelated data\nin any other formats is also deleted."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'import flash.desktop.Clipboard;\nimport flash.desktop.ClipboardFormats;\n\nvar textToCopy:String = "Copy to clipboard.";\nClipboard.generalClipboard.clear();\nClipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, textToCopy, false);\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Note: Content running in Flash Player or in a non-application sandbox in AIR can\ncall the ",(0,a.jsx)(t.code,{children:"setData()"})," method only in an event handler for a user event, such as a\nkeyboard or mouse event, or a ",(0,a.jsx)(t.code,{children:"copy"})," or ",(0,a.jsx)(t.code,{children:"cut"})," event. In other words, only code\nrunning in the AIR application sandbox can call the ",(0,a.jsx)(t.code,{children:"setData()"})," method outside\nof a user event handler."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var o=n(96540);const a={},r=o.createContext(a);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);