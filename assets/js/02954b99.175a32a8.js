"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[10967],{15911:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"development/rich-media-content/working-with-cameras","title":"Working with cameras","description":"A camera attached to a user\'s computer can serve as a source of video data that","source":"@site/docs/development/rich-media-content/working-with-cameras.md","sourceDirName":"development/rich-media-content","slug":"/development/rich-media-content/working-with-cameras","permalink":"/docs/development/rich-media-content/working-with-cameras","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/working-with-cameras.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"mainSidebar","previous":{"title":"Using the StageVideo APIs","permalink":"/docs/development/rich-media-content/working-with-video/using-the-stagevideo-apis"},"next":{"title":"Using digital rights management","permalink":"/docs/development/rich-media-content/using-digital-rights-management/"}}');var i=n(74848),s=n(28453);const r={sidebar_position:3},c="Working with cameras",o={},d=[{value:"Understanding the Camera class",id:"understanding-the-camera-class",level:2},{value:"Displaying camera content on screen",id:"displaying-camera-content-on-screen",level:2},{value:"Designing your camera application",id:"designing-your-camera-application",level:2},{value:"Connecting to a user&#39;s camera",id:"connecting-to-a-users-camera",level:2},{value:"Verifying that cameras are installed",id:"verifying-that-cameras-are-installed",level:2},{value:"Mobile device cameras",id:"mobile-device-cameras",level:4},{value:"Detecting permissions for camera access",id:"detecting-permissions-for-camera-access",level:2},{value:"Maximizing camera video quality",id:"maximizing-camera-video-quality",level:2},{value:"Monitoring camera status",id:"monitoring-camera-status",level:2}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"working-with-cameras",children:"Working with cameras"})}),"\n",(0,i.jsxs)(a.p,{children:["A camera attached to a user's computer can serve as a source of video data that\nyou can display and manipulate using ActionScript. The\n",(0,i.jsx)(a.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/media/Camera.html",children:"Camera"}),"\nclass is the mechanism built into ActionScript for working with a computer or\ndevice camera."]}),"\n",(0,i.jsxs)(a.p,{children:["On mobile devices, you can also use the\n",(0,i.jsx)(a.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/media/CameraUI.html",children:"CameraUI"}),"\nclass. The CameraUI class launches a separate camera application to allow the\nuser to capture a still image or video. When the user is finished, your\napplication can access the image or video through a\n",(0,i.jsx)(a.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/media/MediaPromise.html",children:"MediaPromise"}),"\nobject."]}),"\n",(0,i.jsx)(a.h2,{id:"understanding-the-camera-class",children:"Understanding the Camera class"}),"\n",(0,i.jsx)(a.p,{children:"The Camera object allows you to connect to the user's local camera and broadcast\nthe video either locally (back to the user) or remotely to a server (such as\nFlash Media Server)."}),"\n",(0,i.jsx)(a.p,{children:"Using the Camera class, you can access the following kinds of information about\nthe user's camera:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Which cameras installed on the user's computer or device are available"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Whether a camera is installed"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Whether Flash Player is allowed or denied access to the user's camera"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Which camera is currently active"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"The width and height of the video being captured"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(a.p,{children:["The Camera class includes several useful methods and properties for working with\ncamera objects. For example, the static ",(0,i.jsx)(a.code,{children:"Camera.names"})," property contains an\narray of camera names currently installed on the user's computer. You can also\nuse the ",(0,i.jsx)(a.code,{children:"name"})," property to display the name of the currently active camera."]}),"\n",(0,i.jsx)(a.p,{children:"Note: When streaming camera video across the network, you should always handle\nnetwork interruptions. Network interruptions can occur for many reasons,\nparticularly on mobile devices."}),"\n",(0,i.jsx)(a.h2,{id:"displaying-camera-content-on-screen",children:"Displaying camera content on screen"}),"\n",(0,i.jsx)(a.p,{children:"Connecting to a camera can require less code than using the NetConnection and\nNetStream classes to load a video. The camera class can also quickly become\ntricky because with Flash Player, you need a user's permission to connect to\ntheir camera before you can access it."}),"\n",(0,i.jsx)(a.p,{children:"The following code demonstrates how you can use the Camera class to connect to a\nuser's local camera:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:"var cam:Camera = Camera.getCamera();\nvar vid:Video = new Video();\nvid.attachCamera(cam);\naddChild(vid);\n"})}),"\n",(0,i.jsxs)(a.p,{children:["Note: The Camera class does not have a constructor method. In order to create a\nnew Camera instance you use the static ",(0,i.jsx)(a.code,{children:"Camera.getCamera()"})," method."]}),"\n",(0,i.jsx)(a.h2,{id:"designing-your-camera-application",children:"Designing your camera application"}),"\n",(0,i.jsx)(a.p,{children:"When writing an application that connects to a user's camera, you need to\naccount for the following in your code:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Check if the user has a camera currently installed. Handle the case where no\ncamera is available."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"For Flash Player only, check if the user has explicitly allowed access to the\ncamera. For security reasons the player displays the Flash Player Settings\ndialog which lets the user allow or deny access to their camera. This prevents\nFlash Player from connecting to a user's camera and broadcasting a video\nstream without their permission. If a user clicks allow, your application can\nconnect to the user's camera. If the user clicks deny, your application will\nbe unable to access the user's camera. Your applications should always handle\nboth cases gracefully."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"For AIR only, check whether the Camera class is supported for the device\nprofiles supported by your application."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"The Camera class is not supported in mobile browsers."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"The Camera class is not supported in mobile AIR apps that use the GPU\nrendering mode."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"On mobile devices, only one camera can be active at a time."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"connecting-to-a-users-camera",children:"Connecting to a user's camera"}),"\n",(0,i.jsxs)(a.p,{children:["The first step when connecting to a user's camera is to create a new camera\ninstance by creating a variable of type Camera and initializing it to the return\nvalue of the static ",(0,i.jsx)(a.code,{children:"Camera.getCamera()"})," method."]}),"\n",(0,i.jsx)(a.p,{children:"The next step is to create a new video object and attach the Camera object to\nit."}),"\n",(0,i.jsxs)(a.p,{children:["The third step is to add the video object to the display list. You need to\nperform steps 2 and 3 because the Camera class does not extend the DisplayObject\nclass so it cannot be added directly to the display list. To display the\ncamera's captured video, you create a new video object and call the\n",(0,i.jsx)(a.code,{children:"attachCamera()"})," method."]}),"\n",(0,i.jsx)(a.p,{children:"The following code shows these three steps:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:"var cam:Camera = Camera.getCamera();\nvar vid:Video = new Video();\nvid.attachCamera(cam);\naddChild(vid);\n"})}),"\n",(0,i.jsx)(a.p,{children:"Note that if a user does not have a camera installed, the application does not\ndisplay anything."}),"\n",(0,i.jsxs)(a.p,{children:["In real life, you need to perform additional steps for your application. See\n",(0,i.jsx)(a.a,{href:"#verifying-that-cameras-are-installed",children:"Verifying that cameras are installed"}),"\nand\n",(0,i.jsx)(a.a,{href:"#detecting-permissions-for-camera-access",children:"Detecting permissions for camera access"}),"\nfor further information."]}),"\n",(0,i.jsx)(a.h2,{id:"verifying-that-cameras-are-installed",children:"Verifying that cameras are installed"}),"\n",(0,i.jsx)(a.p,{children:"Before you attempt to use any methods or properties on a camera instance, you'll\nwant to verify that the user has a camera installed. There are two ways to check\nwhether the user has a camera installed:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["Check the static ",(0,i.jsx)(a.code,{children:"Camera.names"})," property which contains an array of camera\nnames which are available. Typically this array will have one or fewer\nstrings, as most users will not likely have more than one camera installed at\na time. The following code demonstrates how you could check the ",(0,i.jsx)(a.code,{children:"Camera.names"}),"\nproperty to see if the user has any available cameras:"]}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'if (Camera.names.length > 0)\n{\n\ttrace("User has at least one camera installed.");\n\tvar cam:Camera = Camera.getCamera(); // Get default camera.\n}\nelse\n{\n\ttrace("User has no cameras installed.");\n}\n'})}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["Check the return value of the static ",(0,i.jsx)(a.code,{children:"Camera.getCamera()"})," method. If no\ncameras are available or installed, this method returns ",(0,i.jsx)(a.code,{children:"null"}),", otherwise it\nreturns a reference to a Camera object. The following code demonstrates how\nyou could check the ",(0,i.jsx)(a.code,{children:"Camera.getCamera()"})," method to see if the user has any\navailable cameras:"]}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'var cam:Camera = Camera.getCamera();\nif (cam == null)\n{\n\ttrace("User has no cameras installed.");\n}\nelse\n{\n\ttrace("User has at least 1 camera installed.");\n}\n'})}),"\n",(0,i.jsxs)(a.p,{children:["Since the Camera class doesn't extend the DisplayObject class, it cannot be\ndirectly added to the display list using the ",(0,i.jsx)(a.code,{children:"addChild()"})," method. In order to\ndisplay the camera's captured video, you need to create a new Video object and\ncall the ",(0,i.jsx)(a.code,{children:"attachCamera()"})," method on the Video instance."]}),"\n",(0,i.jsx)(a.p,{children:"This snippet shows how you can attach the camera if one exists; if not, the\napplication simply displays nothing:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:"var cam:Camera = Camera.getCamera();\nif (cam != null)\n{\n\tvar vid:Video = new Video();\n\tvid.attachCamera(cam);\n\taddChild(vid);\n}\n"})}),"\n",(0,i.jsx)(a.h4,{id:"mobile-device-cameras",children:"Mobile device cameras"}),"\n",(0,i.jsx)(a.p,{children:"The Camera class is not supported in the Flash Player runtime in mobile\nbrowsers."}),"\n",(0,i.jsx)(a.p,{children:"In AIR applications on mobile devices you can access the camera or cameras on\nthe device. On mobile devices, you can use both the front- and the back-facing\ncamera, but only one camera output can be displayed at any given time.\n(Attaching a second camera will detach the first.) The front-facing camera is\nhorizontally mirrored on iOS, on Android, it is not."}),"\n",(0,i.jsx)(a.h2,{id:"detecting-permissions-for-camera-access",children:"Detecting permissions for camera access"}),"\n",(0,i.jsx)(a.p,{children:"In the AIR application sandbox, the application can access any camera without\nthe user's permission. On Android, however, the application must specify the\nAndroid CAMERA permission in the application descriptor."}),"\n",(0,i.jsxs)(a.p,{children:["Before Flash Player can display a camera's output, the user must explicitly\nallow Flash Player to access the camera. When the ",(0,i.jsx)(a.code,{children:"attachCamera()"})," method gets\ncalled Flash Player displays the Flash Player Settings dialog box which prompts\nthe user to either allow or deny Flash Player access to the camera and\nmicrophone. If the user clicks the Allow button, Flash Player displays the\ncamera's output in the Video instance on the Stage. If the user clicks the Deny\nbutton, Flash Player is unable to connect to the camera and the Video object\ndoes not display anything."]}),"\n",(0,i.jsxs)(a.p,{children:["If you want to detect whether the user allowed Flash Player access to the\ncamera, you can listen for the camera's ",(0,i.jsx)(a.code,{children:"status"})," event ( ",(0,i.jsx)(a.code,{children:"StatusEvent.STATUS"}),"),\nas seen in the following code:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'var cam:Camera = Camera.getCamera();\nif (cam != null)\n{\n\tcam.addEventListener(StatusEvent.STATUS, statusHandler);\n\tvar vid:Video = new Video();\n\tvid.attachCamera(cam);\n\taddChild(vid);\n}\nfunction statusHandler(event:StatusEvent):void\n{\n\t// This event gets dispatched when the user clicks the "Allow" or "Deny"\n\t// button in the Flash Player Settings dialog box.\n\ttrace(event.code); // "Camera.Muted" or "Camera.Unmuted"\n}\n'})}),"\n",(0,i.jsxs)(a.p,{children:["The ",(0,i.jsx)(a.code,{children:"statusHandler()"})," function gets called as soon as the user clicks either\nAllow or Deny. You can detect which button the user clicked, using one of two\nmethods:"]}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["The ",(0,i.jsx)(a.code,{children:"event"})," parameter of the ",(0,i.jsx)(a.code,{children:"statusHandler()"}),' function contains a code\nproperty which contains the string "Camera.Muted" or "Camera.Unmuted". If the\nvalue is "Camera.Muted" the user clicked the Deny button and Flash Player is\nunable to access the camera. You can see an example of this in the following\nsnippet:']}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'function statusHandler(event:StatusEvent):void\n{\n\tswitch (event.code)\n\t{\n\t\tcase "Camera.Muted":\n\t\t\ttrace("User clicked Deny.");\n\t\t\tbreak;\n\t\tcase "Camera.Unmuted":\n\t\t\ttrace("User clicked Accept.");\n\t\t\tbreak;\n\t}\n}\n'})}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["The Camera class contains a read-only property named ",(0,i.jsx)(a.code,{children:"muted"})," which specifies\nwhether the user has denied access to the camera ( ",(0,i.jsx)(a.code,{children:"true"}),") or allowed access (\n",(0,i.jsx)(a.code,{children:"false"}),") in the Flash Player Privacy panel. You can see an example of this in\nthe following snippet:"]}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'function statusHandler(event:StatusEvent):void\n{\n\tif (cam.muted)\n\t{\n\t\ttrace("User clicked Deny.");\n\t}\n\telse\n\t{\n\t\ttrace("User clicked Accept.");\n\t}\n}\n'})}),"\n",(0,i.jsx)(a.p,{children:"By checking for the status event to be dispatched, you can write code that\nhandles the user accepting or denying access to the camera and clean up\nappropriately. For example, if the user clicks the Deny button, you could\ndisplay a message to the user stating that they need to click Allow if they want\nto participate in a video chat, or you could instead make sure the Video object\non the display list is deleted to free up system resources."}),"\n",(0,i.jsx)(a.p,{children:"In AIR, a Camera object does not dispatch status events since permission to use\nthe camera is not dynamic."}),"\n",(0,i.jsx)(a.h2,{id:"maximizing-camera-video-quality",children:"Maximizing camera video quality"}),"\n",(0,i.jsxs)(a.p,{children:["By default, new instances of the Video class are 320 pixels wide by 240 pixels\nhigh. In order to maximize video quality you should always ensure that your\nvideo object matches the same dimensions as the video being returned by the\ncamera object. You can get the camera object's width and height by using the\nCamera class's ",(0,i.jsx)(a.code,{children:"width"})," and ",(0,i.jsx)(a.code,{children:"height"})," properties, you can then set the video\nobject's ",(0,i.jsx)(a.code,{children:"width"})," and ",(0,i.jsx)(a.code,{children:"height"})," properties to match the camera objects dimensions,\nor you can pass the camera's width and height to the Video class's constructor\nmethod, as seen in the following snippet:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:"var cam:Camera = Camera.getCamera();\nif (cam != null)\n{\n\tvar vid:Video = new Video(cam.width, cam.height);\n\tvid.attachCamera(cam);\n\taddChild(vid);\n}\n"})}),"\n",(0,i.jsxs)(a.p,{children:["Since the ",(0,i.jsx)(a.code,{children:"getCamera()"})," method returns a reference to a camera object (or ",(0,i.jsx)(a.code,{children:"null"}),"\nif no cameras are available) you can access the camera's methods and properties\neven if the user denies access to their camera. This allows you to set the size\nof the video instance using the camera's native height and width."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'var vid:Video;\nvar cam:Camera = Camera.getCamera();\n\nif (cam == null)\n{\n\ttrace("Unable to locate available cameras.");\n}\nelse\n{\n\ttrace("Found camera: " + cam.name);\n\tcam.addEventListener(StatusEvent.STATUS, statusHandler);\n\tvid = new Video();\n\tvid.attachCamera(cam);\n}\nfunction statusHandler(event:StatusEvent):void\n{\n\tif (cam.muted)\n\t{\n\t\ttrace("Unable to connect to active camera.");\n\t}\n\telse\n\t{\n\t\t// Resize Video object to match camera settings and\n\t\t// add the video to the display list.\n\t\tvid.width = cam.width;\n\t\tvid.height = cam.height;\n\t\taddChild(vid);\n\t}\n\t// Remove the status event listener.\n\tcam.removeEventListener(StatusEvent.STATUS, statusHandler);\n}\n'})}),"\n",(0,i.jsxs)(a.p,{children:["For information about full-screen mode, see the full-screen mode section under\n",(0,i.jsx)(a.a,{href:"/docs/development/display/display-programming/working-with-display-objects/setting-stage-properties",children:"Setting Stage properties"}),"."]}),"\n",(0,i.jsx)(a.h2,{id:"monitoring-camera-status",children:"Monitoring camera status"}),"\n",(0,i.jsx)(a.p,{children:"The camera class contains several properties which allow you to monitor the\nCamera object's current status. For example, the following code displays several\nof the camera's properties using a Timer object and a text field instance on the\ndisplay list:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:'var vid:Video;\nvar cam:Camera = Camera.getCamera();\nvar tf:TextField = new TextField();\ntf.x = 300;\ntf.autoSize = TextFieldAutoSize.LEFT;\naddChild(tf);\n\nif (cam != null)\n{\n\tcam.addEventListener(StatusEvent.STATUS, statusHandler);\n\tvid = new Video();\n\tvid.attachCamera(cam);\n}\nfunction statusHandler(event:StatusEvent):void\n{\n\tif (!cam.muted)\n\t{\n\t\tvid.width = cam.width;\n\t\tvid.height = cam.height;\n\t\taddChild(vid);\n\t\tt.start();\n\t}\n\tcam.removeEventListener(StatusEvent.STATUS, statusHandler);\n}\n\nvar t:Timer = new Timer(100);\nt.addEventListener(TimerEvent.TIMER, timerHandler);\nfunction timerHandler(event:TimerEvent):void\n{\n\ttf.text = "";\n\ttf.appendText("activityLevel: " + cam.activityLevel + "\\n");\n\ttf.appendText("bandwidth: " + cam.bandwidth + "\\n");\n\ttf.appendText("currentFPS: " + cam.currentFPS + "\\n");\n\ttf.appendText("fps: " + cam.fps + "\\n");\n\ttf.appendText("keyFrameInterval: " + cam.keyFrameInterval + "\\n");\n\ttf.appendText("loopback: " + cam.loopback + "\\n");\n\ttf.appendText("motionLevel: " + cam.motionLevel + "\\n");\n\ttf.appendText("motionTimeout: " + cam.motionTimeout + "\\n");\n\ttf.appendText("quality: " + cam.quality + "\\n");\n}\n'})}),"\n",(0,i.jsxs)(a.p,{children:["Every 1/10 of a second (100 milliseconds) the Timer object's ",(0,i.jsx)(a.code,{children:"timer"})," event is\ndispatched and the ",(0,i.jsx)(a.code,{children:"timerHandler()"})," function updates the text field on the\ndisplay list."]}),"\n",(0,i.jsx)(a.p,{children:"More Help topics"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.a,{href:"https://web.archive.org/web/20160424032356/http://blogs.adobe.com/cantrell/archives/2011/02/how-to-use-cameraui-in-a-cross-platform-way.html",children:"Christian Cantrell: How to use CameraUI in a Cross-platform Way"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.a,{href:"https://web.archive.org/web/20160316185243/http://www.riagora.com/2010/07/android-air-and-the-camera/",children:"Micha\xebl CHAIZE: Android, AIR and the Camera"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.a,{href:"https://web.archive.org/web/20160315102228/http://coenraets.org/blog/2010/08/multi-user-video-tic-tac-toe-for-android/",children:"Christophe Coenraets: Multi-User Video Tic-Tac-Toe"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.a,{href:"https://web.archive.org/web/20120710014226/http://www.flashmobileblog.com/2010/10/14/facebook-connect-with-air-on-android/",children:"Mark Doherty: Android Radar app (source)"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.a,{href:"https://web.archive.org/web/20120119025225/http://www.gotoandlearn.com/play.php?id=124",children:"Lee Brimelow: How to access the camera on Android devices"})})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>c});var t=n(96540);const i={},s=t.createContext(i);function r(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);