"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[9155],{24542:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/ge_DisplayObjectTransformer-2-107bcd4045f759bae23457c43240f93e.png"},26645:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/ge_DisplayObjectTransformer-1-ec2ee16f10b47c8a1f456b45f6f7f620.png"},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(96540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},91340:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object","title":"Geometry example: Applying a matrix transformation to a display object","description":"The DisplayObjectTransformer sample application shows a number of features of","source":"@site/docs/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object.md","sourceDirName":"development/display/working-with-geometry","slug":"/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object","permalink":"/docs/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Using Matrix objects","permalink":"/docs/development/display/working-with-geometry/using-matrix-objects"},"next":{"title":"Overview","permalink":"/docs/development/display/using-the-drawing-api/"}}');var i=t(74848),s=t(28453);const a={},l="Geometry example: Applying a matrix transformation to a display object",o={},d=[{value:"Defining the MatrixTransformer class",id:"defining-the-matrixtransformer-class",level:2},{value:"The transform() method",id:"the-transform-method",level:4},{value:"The skew() method",id:"the-skew-method",level:4},{value:"The scale() method",id:"the-scale-method",level:4},{value:"The translate() method",id:"the-translate-method",level:4},{value:"The rotate() method",id:"the-rotate-method",level:4},{value:"Calling the MatrixTransformer.transform() method from the application",id:"calling-the-matrixtransformertransform-method-from-the-application",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"geometry-example-applying-a-matrix-transformation-to-a-display-object",children:"Geometry example: Applying a matrix transformation to a display object"})}),"\n",(0,i.jsx)(n.p,{children:"The DisplayObjectTransformer sample application shows a number of features of\nusing the Matrix class to transform a display object, including the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Rotating the display object"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Scaling the display object"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Translating (repositioning) the display object"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Skewing the display object"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The application provides an interface for adjusting the parameters of the matrix\ntransformation, as follows:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(26645).A+"",width:"360",height:"460"})}),"\n",(0,i.jsx)(n.p,{children:"When the user clicks the Transform button, the application applies the\nappropriate transformation."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(24542).A+"",width:"470",height:"204"})}),"\n",(0,i.jsxs)(n.p,{children:["The original display object, and the display object rotated by -45\xb0 ",(0,i.jsx)(n.em,{children:"and scaled\nby 50%"})]}),"\n",(0,i.jsxs)(n.p,{children:["To get the application files for this sample, see\n",(0,i.jsx)(n.a,{href:"https://github.com/joshtynjala/flash-platform-as3-dev-guide-examples/releases/tag/original",children:(0,i.jsx)(n.em,{children:"FlashPlatformAS3DevGuideExamples.zip"})}),".\nThe DisplayObjectTransformer application files can be found in the folder\nSamples/DisplayObjectTransformer. The application consists of the following\nfiles:"]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:(0,i.jsx)("p",{children:"File"})}),(0,i.jsx)("th",{children:(0,i.jsx)("p",{children:"Description"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsxs)("td",{children:[(0,i.jsx)("p",{children:"DisplayObjectTransformer.mxml"}),(0,i.jsx)("p",{children:"or"}),(0,i.jsx)("p",{children:"DisplayObjectTransformer.fla"})]}),(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"The main\napplication file in Flash (FLA) or Flex (MXML)"})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"com/example/programmingas3/geometry/MatrixTransformer.as"})}),(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"A class that\ncontains methods for applying matrix transformations."})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"img/"})}),(0,i.jsx)("td",{children:(0,i.jsx)("p",{children:"A directory\ncontaining sample image files used by the application."})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"defining-the-matrixtransformer-class",children:"Defining the MatrixTransformer class"}),"\n",(0,i.jsx)(n.p,{children:"The MatrixTransformer class includes static methods that apply geometric\ntransformations of Matrix objects."}),"\n",(0,i.jsx)(n.h4,{id:"the-transform-method",children:"The transform() method"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"transform()"})," method includes parameters for each of the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sourceMatrix"})," \u2014The input matrix, which the method transforms"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"xScale"})," and ",(0,i.jsx)(n.code,{children:"yScale"})," \u2014The ",(0,i.jsx)(n.em,{children:"x"})," and ",(0,i.jsx)(n.em,{children:"y"})," scale factor"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dx"})," and ",(0,i.jsx)(n.code,{children:"dy"})," \u2014The ",(0,i.jsx)(n.em,{children:"x"})," and ",(0,i.jsx)(n.em,{children:"y"})," translation amounts, in pixels"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"rotation"})," \u2014The rotation amount, in degrees"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"skew"})," \u2014The skew factor, as a percentage"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"skewType"})," \u2014The direction in which the skew, either ",(0,i.jsx)(n.code,{children:'"right"'})," or ",(0,i.jsx)(n.code,{children:'"left"'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The return value is the resulting matrix."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"transform()"})," method calls the following static methods of the class:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"skew()"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"scale()"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"translate()"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"rotate()"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each returns the source matrix with the applied transformation."}),"\n",(0,i.jsx)(n.h4,{id:"the-skew-method",children:"The skew() method"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"skew()"})," method skews the matrix by adjusting the ",(0,i.jsx)(n.code,{children:"b"})," and ",(0,i.jsx)(n.code,{children:"c"})," properties of\nthe matrix. An optional parameter, ",(0,i.jsx)(n.code,{children:"unit"}),", determines the units used to define\nthe skew angle, and if necessary, the method converts the ",(0,i.jsx)(n.code,{children:"angle"})," value to\nradians:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'if (unit == "degrees")\n{\n'})}),"\n",(0,i.jsx)(n.p,{children:"angle = Math.PI * 2 * angle / 360;"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'}\nif (unit == "gradients")\n{\n'})}),"\n",(0,i.jsx)(n.p,{children:"angle = Math.PI * 2 * angle / 100;"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"skewMatrix"})," Matrix object is created and adjusted to apply the skew\ntransformation. Initially, it is the identity matrix, as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"var skewMatrix:Matrix = new Matrix();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"skewSide"})," parameter determines the side to which the skew is applied. If it\nis set to ",(0,i.jsx)(n.code,{children:'"right"'}),", the following code sets the ",(0,i.jsx)(n.code,{children:"b"})," property of the matrix:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"skewMatrix.b = Math.tan(angle);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Otherwise, the bottom side is skewed by adjusting the ",(0,i.jsx)(n.code,{children:"c"})," property of the\nMatrix, as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"skewMatrix.c = Math.tan(angle);\n"})}),"\n",(0,i.jsx)(n.p,{children:"The resulting skew is then applied to the existing matrix by concatenating the\ntwo matrixes, as the following example shows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sourceMatrix.concat(skewMatrix);\nreturn sourceMatrix;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"the-scale-method",children:"The scale() method"}),"\n",(0,i.jsxs)(n.p,{children:["The following example shows the ",(0,i.jsx)(n.code,{children:"scale()"})," method adjusts the scale factor if it\nis provided as a percentage, first, and then uses the ",(0,i.jsx)(n.code,{children:"scale()"})," method of the\nmatrix object:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"if (percent)\n{\n"})}),"\n",(0,i.jsx)(n.p,{children:"xScale = xScale / 100;\nyScale = yScale / 100;"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"}\nsourceMatrix.scale(xScale, yScale);\nreturn sourceMatrix;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"the-translate-method",children:"The translate() method"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"translate()"})," method simply applies the ",(0,i.jsx)(n.code,{children:"dx"})," and ",(0,i.jsx)(n.code,{children:"dy"})," translation factors by\ncalling the ",(0,i.jsx)(n.code,{children:"translate()"})," method of the matrix object, as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sourceMatrix.translate(dx, dy);\nreturn sourceMatrix;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"the-rotate-method",children:"The rotate() method"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"rotate()"})," method converts the input rotation factor to radians (if it is\nprovided in degrees or gradients), and then calls the ",(0,i.jsx)(n.code,{children:"rotate()"})," method of the\nmatrix object:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'if (unit == "degrees")\n{\n'})}),"\n",(0,i.jsx)(n.p,{children:"angle = Math.PI * 2 * angle / 360;"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'}\nif (unit == "gradients")\n{\n'})}),"\n",(0,i.jsx)(n.p,{children:"angle = Math.PI * 2 * angle / 100;"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"}\nsourceMatrix.rotate(angle);\nreturn sourceMatrix;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"calling-the-matrixtransformertransform-method-from-the-application",children:"Calling the MatrixTransformer.transform() method from the application"}),"\n",(0,i.jsxs)(n.p,{children:["The application contains a user interface for getting the transformation\nparameters from the user. It then passes these values, along with the ",(0,i.jsx)(n.code,{children:"matrix"}),"\nproperty of the ",(0,i.jsx)(n.code,{children:"transform"})," property of the display object, to the\n",(0,i.jsx)(n.code,{children:"Matrix.transform()"})," method, as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"tempMatrix = MatrixTransformer.transform(tempMatrix,\n"})}),"\n",(0,i.jsx)(n.p,{children:"xScaleSlider.value,\nyScaleSlider.value,\ndxSlider.value,\ndySlider.value,\nrotationSlider.value,\nskewSlider.value,\nskewSide);"}),"\n",(0,i.jsxs)(n.p,{children:["The application then applies the return value to the ",(0,i.jsx)(n.code,{children:"matrix"})," property of the\n",(0,i.jsx)(n.code,{children:"transform"})," property of the display object, triggering the transformation:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"img.content.transform.matrix = tempMatrix;\n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);