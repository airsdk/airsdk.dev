"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[57898],{28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>d});var n=o(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},62469:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"development/security/accessing-loaded-media-as-data","title":"Accessing loaded media as data","description":"To access load data use the BitmapData.draw(), BitmapData.drawWithQuality(),","source":"@site/docs/development/security/accessing-loaded-media-as-data.md","sourceDirName":"development/security","slug":"/development/security/accessing-loaded-media-as-data","permalink":"/docs/development/security/accessing-loaded-media-as-data","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/security/accessing-loaded-media-as-data.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"mainSidebar","previous":{"title":"Cross-scripting","permalink":"/docs/development/security/cross-scripting"},"next":{"title":"Loading data","permalink":"/docs/development/security/loading-data"}}');var s=o(74848),i=o(28453);const a={sidebar_position:9},d="Accessing loaded media as data",r={},c=[{value:"Accessing bitmap data",id:"accessing-bitmap-data",level:2},{value:"Accessing sound data",id:"accessing-sound-data",level:2},{value:"Accessing video data",id:"accessing-video-data",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"accessing-loaded-media-as-data",children:"Accessing loaded media as data"})}),"\n",(0,s.jsxs)(t.p,{children:["To access load data use the ",(0,s.jsx)(t.code,{children:"BitmapData.draw()"}),", ",(0,s.jsx)(t.code,{children:"BitmapData.drawWithQuality()"}),",\nand ",(0,s.jsx)(t.code,{children:"SoundMixer.computeSpectrum()"})," methods. By default, you cannot obtain pixel\ndata or audio data from graphic or audio objects rendered or played by media\nloaded in a different sandbox. However, you can use the following methods to\ngrant permission to access such data across sandbox boundaries:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["In the content rendering or playing the data to be accessed, call the\n",(0,s.jsx)(t.code,{children:"Security.allowDomain()"})," method to grant data access to content in other\ndomains."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["For a loaded image, sound, or video, add a URL policy file on the server of\nthe loaded file. This policy file must grant access to the domain of the SWF\nfile that is attempting to call the ",(0,s.jsx)(t.code,{children:"BitmapData.draw()"}),",\n",(0,s.jsx)(t.code,{children:"BitmapData.drawWithQuality()"}),", or ",(0,s.jsx)(t.code,{children:"SoundMixer.computeSpectrum()"})," methods to\nextract data from the file. The ",(0,s.jsx)(t.code,{children:"drawWithQuality"})," method is available in Flash\nPlayer 11.3 and higher; AIR 3.3 and higher."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The following sections provide details on accessing bitmap, sound, and video\ndata."}),"\n",(0,s.jsx)(t.h2,{id:"accessing-bitmap-data",children:"Accessing bitmap data"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"draw()"})," and ",(0,s.jsx)(t.code,{children:"drawWithQuality()"})," (Flash Player 11.3; AIR 3.3) methods of a\nBitmapData object lets you draw the currently displayed pixels of any display\nobject to the BitmapData object. This could include the pixels of a MovieClip\nobject, a Bitmap object, or any display object. The following conditions must be\nmet for these methods to draw pixels to the BitmapData object:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["In the case of a source object other than a loaded bitmap, the source object\nand (in the case of a Sprite or MovieClip object) all of its child objects\nmust come from the same domain as the object calling the draw method, or they\nmust be in a SWF file that is accessible to the caller by having called the\n",(0,s.jsx)(t.code,{children:"Security.allowDomain()"})," method."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"In the case of a Loaded bitmap source object, the source object must come from\nthe same domain as the object calling the draw method, or its source server\nmust include a URL policy file that grants permission to the calling domain."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"If these conditions are not met, a SecurityError exception is thrown."}),"\n",(0,s.jsxs)(t.p,{children:["When you load the image using the ",(0,s.jsx)(t.code,{children:"load()"})," method of the Loader class, you can\nspecify a ",(0,s.jsx)(t.code,{children:"context"})," parameter, which is a LoaderContext object. If you set the\n",(0,s.jsx)(t.code,{children:"checkPolicyFile"})," property of the LoaderContext object to ",(0,s.jsx)(t.code,{children:"true"}),", Flash Player\nchecks for a URL policy file on the server from which the image is loaded. If\nthere is a policy file, and the file permits the domain of the loading SWF file,\nthe file is allowed to access data in the Bitmap object; otherwise, access is\ndenied."]}),"\n",(0,s.jsxs)(t.p,{children:["You can also specify a ",(0,s.jsx)(t.code,{children:"checkPolicyFile"})," property in an image loaded via an\n",(0,s.jsx)(t.code,{children:"<img>"})," tag in a text field. For details, see\n",(0,s.jsx)(t.a,{href:"/docs/development/security/loading-content#loading-swf-files-and-images-using-the-img-tag-in-a-text-field",children:"Loading SWF files and images using the <img> tag in a text field"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"accessing-sound-data",children:"Accessing sound data"}),"\n",(0,s.jsx)(t.p,{children:"The following sound-related ActionScript 3.0 APIs have security restrictions:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"SoundMixer.computeSpectrum()"})," method\u2014Always permitted for code running in\nthe same security sandbox as the sound file. For code running in other\nsandboxes, there are security checks."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"SoundMixer.stopAll()"})," method\u2014Always permitted for code running in the\nsame security sandbox as the sound file. For files in other sandboxes, there\nare security checks."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"id3"})," property of the Sound class\u2014Always permitted for SWF files that are\nin the same security sandbox as the sound file. For code running in other\nsandboxes, there are security checks."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Every sound has two kinds of sandboxes associated with it\u2014a content sandbox and\nan owner sandbox:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["The origin domain for the sound determines the content sandbox, and this\ndetermines whether data can be extracted from the sound via the ",(0,s.jsx)(t.code,{children:"id3"})," property\nof the sound and the ",(0,s.jsx)(t.code,{children:"SoundMixer.computeSpectrum()"})," method."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["The object that started the sound playing determines the owner sandbox, and\nthis determines whether the sound can be stopped using the\n",(0,s.jsx)(t.code,{children:"SoundMixer.stopAll()"})," method."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["When you load the sound using the ",(0,s.jsx)(t.code,{children:"load()"})," method of the Sound class, you can\nspecify a ",(0,s.jsx)(t.code,{children:"context"})," parameter, which is a SoundLoaderContext object. If you set\nthe ",(0,s.jsx)(t.code,{children:"checkPolicyFile"})," property of the SoundLoaderContext object to ",(0,s.jsx)(t.code,{children:"true"}),", the\nruntime checks for a URL policy file on the server from which the sound is\nloaded. If there is a policy file, and the file permits the domain of the\nloading code, the code is allowed to access the ",(0,s.jsx)(t.code,{children:"id"})," property of the Sound\nobject; otherwise, it will not. Also, setting the ",(0,s.jsx)(t.code,{children:"checkPolicyFile"})," property can\nenable the ",(0,s.jsx)(t.code,{children:"SoundMixer.computeSpectrum()"})," method for loaded sounds."]}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"SoundMixer.areSoundsInaccessible()"})," method to find out whether\na call to the ",(0,s.jsx)(t.code,{children:"SoundMixer.stopAll()"})," method would not stop all sounds because\nthe sandbox of one or more sound owners is inaccessible to the caller."]}),"\n",(0,s.jsxs)(t.p,{children:["Calling the ",(0,s.jsx)(t.code,{children:"SoundMixer.stopAll()"})," method stops those sounds whose owner sandbox\nis the same as that of the caller of ",(0,s.jsx)(t.code,{children:"stopAll()"}),". It also stops those sounds\nwhose playback was started by SWF files that have called the\n",(0,s.jsx)(t.code,{children:"Security.allowDomain()"})," method to permit access by the domain of the SWF file\ncalling the ",(0,s.jsx)(t.code,{children:"stopAll()"})," method. Any other sounds are not stopped, and the\npresence of such sounds can be revealed by calling the\n",(0,s.jsx)(t.code,{children:"SoundMixer.areSoundsInaccessible()"})," method."]}),"\n",(0,s.jsxs)(t.p,{children:["Calling the ",(0,s.jsx)(t.code,{children:"computeSpectrum()"})," method requires that every sound that is playing\nbe either from the same sandbox as the object calling the method or from a\nsource that has granted permission to the caller's sandbox; otherwise, a\nSecurityError exception is thrown. For sounds that were loaded from embedded\nsounds in a library in a SWF file, permission is granted with a call to the\n",(0,s.jsx)(t.code,{children:"Security.allowDomain()"})," method in the loaded SWF file. For sounds loaded from\nsources other than SWF files (originating from loaded mp3 files or from video\nfiles), a URL policy file on the source server grants access to data in loaded\nmedia."]}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see\n",(0,s.jsx)(t.a,{href:"/docs/development/security/permission-controls#author-developer-controls",children:"Author (developer) controls"}),"\nand\n",(0,s.jsx)(t.a,{href:"/docs/development/security/permission-controls#website-controls-policy-files",children:"Website controls (policy files)"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["To access sound data from RTMP streams, you must allow access on the server. Use\nthe Server-Side ActionScript ",(0,s.jsx)(t.code,{children:"Client.audioSampleAccess"})," property to allow access\nto specific directories on Flash Media Server. For more information, see the\n",(0,s.jsx)(t.a,{href:"https://web.archive.org/web/20150702070954/http://www.adobe.com/support/documentation/en/flashmediaserver/",children:"Server-Side ActionScript Language Reference"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"accessing-video-data",children:"Accessing video data"}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"BitmapData.draw()"})," or ",(0,s.jsx)(t.code,{children:"BitmapData.drawWithQuality()"})," method to\ncapture the pixel data of the current frame of a video. (The ",(0,s.jsx)(t.code,{children:"drawWithQuality"}),"\nmethod is available in Flash Player 11.3 and higher; AIR 3.3 and higher.)"]}),"\n",(0,s.jsx)(t.p,{children:"There are two different kinds of video:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Video streamed over RTMP from Flash Media Server"}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Progressive video, which is loaded from an FLV or F4V file"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["To use the draw methods to extract run-time graphics from RTMP streams, you must\nallow access on the server. Use the Server-Side ActionScript\n",(0,s.jsx)(t.code,{children:"Client.videoSampleAccess"})," property to allow access to specific directories on\nFlash Media Server. For more information, see the\n",(0,s.jsx)(t.a,{href:"https://web.archive.org/web/20150702070954/http://www.adobe.com/support/documentation/en/flashmediaserver/",children:"Server-Side ActionScript Language Reference"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["When you call a draw method with progressive video as the ",(0,s.jsx)(t.code,{children:"source"})," parameter,\nthe caller of the method must either be from the same sandbox as the FLV file,\nor the server of the FLV file must have a policy file that grants permission to\nthe domain of the calling SWF file. You can request that the policy file be\ndownloaded by setting the ",(0,s.jsx)(t.code,{children:"checkPolicyFile"})," property of the NetStream object to\n",(0,s.jsx)(t.code,{children:"true"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);