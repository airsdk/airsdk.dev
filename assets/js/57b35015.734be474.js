"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[43495],{28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>l});var i=n(96540);const s={},r=i.createContext(s);function o(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:o(t.components),i.createElement(r.Provider,{value:e},t.children)}},36867:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"development/client-system-interaction/working-with-air-native-windows/displaying-full-screen-windows","title":"Displaying full-screen windows","description":"Setting the displayState property of the Stage to","source":"@site/docs/development/client-system-interaction/working-with-air-native-windows/displaying-full-screen-windows.md","sourceDirName":"development/client-system-interaction/working-with-air-native-windows","slug":"/development/client-system-interaction/working-with-air-native-windows/displaying-full-screen-windows","permalink":"/docs/development/client-system-interaction/working-with-air-native-windows/displaying-full-screen-windows","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/client-system-interaction/working-with-air-native-windows/displaying-full-screen-windows.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"mainSidebar","previous":{"title":"Listening for window events","permalink":"/docs/development/client-system-interaction/working-with-air-native-windows/listening-for-window-events"},"next":{"title":"Display screens in AIR","permalink":"/docs/development/client-system-interaction/display-screens-in-air"}}');var s=n(74848),r=n(28453);const o={sidebar_position:5},l="Displaying full-screen windows",a={},d=[];function c(t){const e={code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"displaying-full-screen-windows",children:"Displaying full-screen windows"})}),"\n",(0,s.jsxs)(e.p,{children:["Setting the ",(0,s.jsx)(e.code,{children:"displayState"})," property of the Stage to\n",(0,s.jsx)(e.code,{children:"StageDisplayState.FULL_SCREEN_INTERACTIVE"})," places the window in full-screen\nmode, and keyboard input ",(0,s.jsx)(e.em,{children:"is"})," permitted in this mode. (In SWF content running in\na browser, keyboard input is not permitted). To exit full-screen mode, the user\npresses the Escape key."]}),"\n",(0,s.jsx)(e.p,{children:"Note: Some Linux window managers will not change the window dimensions to fill\nthe screen if a maximum size is set for the window (but do remove the window\nsystem chrome)."}),"\n",(0,s.jsx)(e.p,{children:"For example, the following Flex code defines a simple AIR application that sets\nup a simple full-screen terminal:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'<?xml version="1.0" encoding="utf-8"?>\n<mx:WindowedApplication xmlns:mx="https://www.adobe.com/2006/mxml"\n\tlayout="vertical"\n\tapplicationComplete="init()" backgroundColor="0x003030" focusRect="false">\n\t<mx:Script>\n\t<![CDATA[\n\t\tprivate function init():void\n\t\t{\n\t\t\tstage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;\n\t\t\tfocusManager.setFocus(terminal);\n\t\t\tterminal.text = "Welcome to the dumb terminal app. Press the ESC key to exit..\\n";\n\t\t\tterminal.selectionBeginIndex = terminal.text.length;\n\t\t\tterminal.selectionEndIndex = terminal.text.length;\n\t\t}\n\t]]>\n\t</mx:Script>\n\t<mx:TextArea\n\t\tid="terminal"\n\t\theight="100%" width="100%"\n\t\tscroll="false"\n\t\tbackgroundColor="0x003030"\n\t\tcolor="0xCCFF00"\n\t\tfontFamily="Lucida Console"\n\t\tfontSize="44"/>\n</mx:WindowedApplication>\n'})}),"\n",(0,s.jsx)(e.p,{children:"The following ActionScript example for Flash simulates a simple full-screen text\nterminal:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'import flash.display.Sprite;\nimport flash.display.StageDisplayState;\nimport flash.text.TextField;\nimport flash.text.TextFormat;\n\npublic class FullScreenTerminalExample extends Sprite\n{\n\tpublic function FullScreenTerminalExample():void\n\t{\n\t\tvar terminal:TextField = new TextField();\n\t\tterminal.multiline = true;\n\t\tterminal.wordWrap = true;\n\t\tterminal.selectable = true;\n\t\tterminal.background = true;\n\t\tterminal.backgroundColor = 0x00333333;\n\n\t\tthis.stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;\n\n\t\taddChild(terminal);\n\t\tterminal.width = 550;\n\t\tterminal.height = 400;\n\n\t\tterminal.text = "Welcome to the dumb terminal application. Press the ESC key to exit.\\n_";\n\n\t\tvar tf:TextFormat = new TextFormat();\n\t\ttf.font = "Courier New";\n\t\ttf.color = 0x00CCFF00;\n\t\ttf.size = 12;\n\t\tterminal.setTextFormat(tf);\n\n\t\tterminal.setSelection(terminal.text.length - 1, terminal.text.length);\n\t}\n}\n'})})]})}function m(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(c,{...t})}):c(t)}}}]);