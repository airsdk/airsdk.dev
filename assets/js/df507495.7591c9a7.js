"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[94765],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(96540);const i={},d=o.createContext(i);function r(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(d.Provider,{value:n},e.children)}},64485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"building/air-developer-tool/commands/uninstallRuntime","title":"ADT -uninstallRuntime","description":"The shared runtime on Android has been removed so this command has no real usage now","source":"@site/docs/building/air-developer-tool/commands/uninstallRuntime.md","sourceDirName":"building/air-developer-tool/commands","slug":"/building/air-developer-tool/commands/uninstallRuntime","permalink":"/docs/building/air-developer-tool/commands/uninstallRuntime","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/building/air-developer-tool/commands/uninstallRuntime.md","tags":[],"version":"current","frontMatter":{"title":"ADT -uninstallRuntime","sidebar_label":"uninstallRuntime (deprecated)"},"sidebar":"mainSidebar","previous":{"title":"runtimeVersion (deprecated)","permalink":"/docs/building/air-developer-tool/commands/runtimeVersion"},"next":{"title":"Code signing","permalink":"/docs/building/air-developer-tool/option-sets/code-signing-options"}}');var i=t(74848),d=t(28453);const r={title:"ADT -uninstallRuntime",sidebar_label:"uninstallRuntime (deprecated)"},s=void 0,l={},a=[{value:"<code>-platform</code>",id:"-platform",level:3},{value:"<code>-platformsdk</code>",id:"-platformsdk",level:3},{value:"<code>-device</code>",id:"-device",level:3}];function c(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{title:"Deprecated",type:"info",children:(0,i.jsx)(n.p,{children:"The shared runtime on Android has been removed so this command has no real usage now"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"-uninstallRuntime"})," command completely removes the AIR runtime from a device or emulator. The command uses the following syntax:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"adt -uninstallRuntime -platform platformName -platformsdk path_to_sdk -device deviceID\n"})}),"\n",(0,i.jsx)(n.h3,{id:"-platform",children:(0,i.jsx)(n.code,{children:"-platform"})}),"\n",(0,i.jsxs)(n.p,{children:["The name of the platform of the device. Currently this command is only supported on the Android platform. Use the name, ",(0,i.jsx)(n.code,{children:"android"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"-platformsdk",children:(0,i.jsx)(n.code,{children:"-platformsdk"})}),"\n",(0,i.jsxs)(n.p,{children:["The path to the platform SDK for the target device. Currently, the only supported platform SDK is Android. The AIR 2.6+ SDK includes the tools from the Android SDK needed to implement the relevant ADT commands. Only set this value to use a different version of the Android SDK. Also, the platform SDK path does not need to be supplied on the command line if the ",(0,i.jsx)(n.code,{children:"AIR_ANDROID_SDK_HOME"})," environment variable is already set. (If both are set, then the path provided on the command line is used.)"]}),"\n",(0,i.jsx)(n.h3,{id:"-device",children:(0,i.jsx)(n.code,{children:"-device"})}),"\n",(0,i.jsx)(n.p,{children:"The serial number of the device. The device only needs to be specified when more than one device or emulator is attached to your computer and running. If the specified device is not connected, ADT returns exit code 14: Device error. If more than one device or emulator is connected and a device is not specified, ADT returns exit code 2: Usage error."}),"\n",(0,i.jsx)(n.p,{children:"On Android, use the Android ADB tool to list the serial numbers of attached devices and running emulators:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"adb devices\n"})})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);