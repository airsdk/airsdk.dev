"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[91431],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},48935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/core-actionscript-classes/working-with-strings/basics-of-strings","title":"Basics of strings","description":"In programming parlance, a string is a text value\u2014a sequence of letters,","source":"@site/docs/development/core-actionscript-classes/working-with-strings/basics-of-strings.md","sourceDirName":"development/core-actionscript-classes/working-with-strings","slug":"/development/core-actionscript-classes/working-with-strings/basics-of-strings","permalink":"/docs/development/core-actionscript-classes/working-with-strings/basics-of-strings","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/working-with-strings/basics-of-strings.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Working with strings","permalink":"/docs/development/core-actionscript-classes/working-with-strings/"},"next":{"title":"Creating strings","permalink":"/docs/development/core-actionscript-classes/working-with-strings/creating-strings"}}');var r=n(74848),i=n(28453);const a={sidebar_position:1},o="Basics of strings",c={},l=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}];function d(e){const t={br:"br",code:"code",h1:"h1",h4:"h4",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"basics-of-strings",children:"Basics of strings"})}),"\n",(0,r.jsx)(t.p,{children:"In programming parlance, a string is a text value\u2014a sequence of letters,\nnumbers, or other characters strung together into a single value. For instance,\nthis line of code creates a variable with the data type String and assigns a\nliteral string value to that variable:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-actionscript",children:'var albumName:String = "Three for the money";\n'})}),"\n",(0,r.jsx)(t.p,{children:"As this example shows, in ActionScript you can denote a string value by\nsurrounding text with double or single quotation marks. Here are several more\nexamples of strings:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'"Hello"\n"555-7649"\n"https://www.adobe.com/"\n'})}),"\n",(0,r.jsx)(t.p,{children:"Any time you manipulate a piece of text in ActionScript, you are working with a\nstring value. The ActionScript String class is the data type you can use to work\nwith text values. String instances are frequently used for properties, method\nparameters, and so forth in many other ActionScript classes."}),"\n",(0,r.jsx)(t.h4,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,r.jsx)(t.p,{children:"The following reference list contains important terms related to strings that\nyou will encounter:"}),"\n",(0,r.jsxs)(t.p,{children:["ASCII",(0,r.jsx)(t.br,{}),"\n","A system for representing text characters and symbols in computer programs. The\nASCII system supports the 26-letter English alphabet, plus a limited set of\nadditional characters."]}),"\n",(0,r.jsxs)(t.p,{children:["Character",(0,r.jsx)(t.br,{}),"\n","The smallest unit of text data (a single letter or symbol)."]}),"\n",(0,r.jsxs)(t.p,{children:["Concatenation",(0,r.jsx)(t.br,{}),"\n","Joining multiple string values together by adding one to the end of the other,\ncreating a new string value."]}),"\n",(0,r.jsxs)(t.p,{children:["Empty string",(0,r.jsx)(t.br,{}),"\n","A string that contains no text, white space, or other characters, written as\n",(0,r.jsx)(t.code,{children:'""'}),". An empty string value is different from a String variable with a null\nvalue\u2014a null String variable is a variable that does not have a String instance\nassigned to it, whereas an empty string has an instance with a value that\ncontains no characters."]}),"\n",(0,r.jsxs)(t.p,{children:["String",(0,r.jsx)(t.br,{}),"\n","A textual value (sequence of characters)."]}),"\n",(0,r.jsxs)(t.p,{children:['String literal (or "literal string")',(0,r.jsx)(t.br,{}),"\n","A string value written explicitly in code, written as a text value surrounded by\ndouble quotation marks or single quotation marks."]}),"\n",(0,r.jsxs)(t.p,{children:["Substring",(0,r.jsx)(t.br,{}),"\n","A string that is a portion of another string."]}),"\n",(0,r.jsxs)(t.p,{children:["Unicode",(0,r.jsx)(t.br,{}),"\n","A standard system for representing text characters and symbols in computer\nprograms. The Unicode system allows for the use of any character in any writing\nsystem."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);