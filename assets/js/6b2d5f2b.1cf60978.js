"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[34900],{5981:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics","title":"AIR file basics","description":"For a quick explanation and code examples of working with the file system in","source":"@site/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics.md","sourceDirName":"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api","slug":"/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics","permalink":"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Using the AIR file system API","permalink":"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/"},"next":{"title":"Working with File objects in AIR","permalink":"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air"}}');var t=s(74848),r=s(28453);const l={sidebar_position:1},o="AIR file basics",a={},d=[];function c(e){const i={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"air-file-basics",children:"AIR file basics"})}),"\n",(0,t.jsx)(i.p,{children:"For a quick explanation and code examples of working with the file system in\nAIR, see the following quick start articles on the Adobe Developer Connection:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://web.archive.org/web/20090130011935/http://www.adobe.com/devnet/air/flash/quickstart/building_text_editor.html",children:"Building a text-file editor"}),"\n(Flash)"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://web.archive.org/web/20100817082125/http://www.adobe.com/devnet/air/flex/quickstart/building_text_editor.html",children:"Building a text-file editor"}),"\n(Flex)"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://web.archive.org/web/20150508062101/http://www.adobe.com/devnet/air/flex/quickstart/articles/directory_search.html",children:"Building a directory search application"}),"\n(Flex)"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://web.archive.org/web/20170319130306/http://www.adobe.com/devnet/air/flex/quickstart/articles/xml_prefs.html",children:"Reading and writing from an XML preferences file"}),"\n(Flex)"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://web.archive.org/web/20150508064627/http://www.adobe.com/devnet/air/flex/quickstart/articles/compressing_files.html",children:"Compressing files and data"}),"\n(Flex)"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Adobe AIR provides classes that you can use to access, create, and manage both\nfiles and folders. These classes, contained in the flash.filesystem package, are\nused as follows:"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"File classes"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/filesystem/File.html",children:"File"})}),(0,t.jsx)(i.td,{children:"File object represents a path to a file or directory. You use a file object to create a pointer to a file or folder, initiating interaction with the file or folder."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/filesystem/FileMode.html",children:"FileMode"})}),(0,t.jsxs)(i.td,{children:["The FileMode class defines string constants used in the ",(0,t.jsx)(i.code,{children:"fileMode"})," parameter of the ",(0,t.jsx)(i.code,{children:"open()"})," and ",(0,t.jsx)(i.code,{children:"openAsync()"})," methods of the FileStream class. The ",(0,t.jsx)(i.code,{children:"fileMode"})," parameter of these methods determines the capabilities available to the FileStream object once the file is opened, which include writing, reading, appending, and updating."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/filesystem/FileStream.html",children:"FileStream"})}),(0,t.jsx)(i.td,{children:"FileStream object is used to open files for reading and writing. Once you've created a File object that points to a new or existing file, you pass that pointer to the FileStream object so that you can open it and read or write data."})]})]})]}),"\n",(0,t.jsx)(i.p,{children:"Some methods in the File class have both synchronous and asynchronous versions:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"File.copyTo()"})," and ",(0,t.jsx)(i.code,{children:"File.copyToAsync()"})]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"File.deleteDirectory()"})," and ",(0,t.jsx)(i.code,{children:"File.deleteDirectoryAsync()"})]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"File.deleteFile()"})," and ",(0,t.jsx)(i.code,{children:"File.deleteFileAsync()"})]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"File.getDirectoryListing()"})," and ",(0,t.jsx)(i.code,{children:"File.getDirectoryListingAsync()"})]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"File.moveTo()"})," and ",(0,t.jsx)(i.code,{children:"File.moveToAsync()"})]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.code,{children:"File.moveToTrash()"})," and ",(0,t.jsx)(i.code,{children:"File.moveToTrashAsync()"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Also, FileStream operations work synchronously or asynchronously depending on\nhow the FileStream object opens the file: by calling the ",(0,t.jsx)(i.code,{children:"open()"})," method or by\ncalling the ",(0,t.jsx)(i.code,{children:"openAsync()"})," method."]}),"\n",(0,t.jsxs)(i.p,{children:["The asynchronous versions let you initiate processes that run in the background\nand dispatch events when complete (or when error events occur). Other code can\nexecute while these asynchronous background processes are taking place. With\nasynchronous versions of the operations, you must set up event listener\nfunctions, using the ",(0,t.jsx)(i.code,{children:"addEventListener()"})," method of the File or FileStream\nobject that calls the function."]}),"\n",(0,t.jsx)(i.p,{children:"The synchronous versions let you write simpler code that does not rely on\nsetting up event listeners. However, since other code cannot execute while a\nsynchronous method is executing, important processes such as display object\nrendering and animation can be delayed."})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>o});var n=s(96540);const t={},r=n.createContext(t);function l(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);