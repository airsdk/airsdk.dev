"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[95330],{6117:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"development/user-interaction/keyboard-input/virtual-keyboards/index","title":"Virtual keyboards","description":"Mobile devices, such as phones and tablets, often provide a virtual, software","source":"@site/docs/development/user-interaction/keyboard-input/virtual-keyboards/index.md","sourceDirName":"development/user-interaction/keyboard-input/virtual-keyboards","slug":"/development/user-interaction/keyboard-input/virtual-keyboards/","permalink":"/docs/development/user-interaction/keyboard-input/virtual-keyboards/","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/keyboard-input/virtual-keyboards/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Using the IME class","permalink":"/docs/development/user-interaction/keyboard-input/using-the-ime-class"},"next":{"title":"Controlling virtual keyboard behavior","permalink":"/docs/development/user-interaction/keyboard-input/virtual-keyboards/controlling-virtual-keyboard-behavior"}}');var i=t(74848),a=t(28453);const o={},s="Virtual keyboards",d={},l=[];function c(e){const n={a:"a",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"virtual-keyboards",children:"Virtual keyboards"})}),"\n",(0,i.jsx)(n.p,{children:"Mobile devices, such as phones and tablets, often provide a virtual, software\nkeyboard instead of a physical one. The classes in the Flash API let you:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Detect when the virtual keyboard is raised and when it closes."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Prevent the keyboard from raising."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Determine the area of the stage obscured by the virtual keyboard."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create interactive objects that raise the keyboard when they gain focus. (Not\nsupported by AIR applications on iOS.)"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"(AIR only) Disable the automatic panning behavior so that your application can\nmodify its own display to accommodate the keyboard."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"More Help topics"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/docs/development/user-interaction/keyboard-input/virtual-keyboards/controlling-virtual-keyboard-behavior",children:"Controlling virtual keyboard behavior"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/docs/development/user-interaction/keyboard-input/virtual-keyboards/adding-virtual-keyboard-support-for-interactive-objects",children:"Adding virtual keyboard support for interactive objects"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/docs/development/user-interaction/keyboard-input/virtual-keyboards/handling-application-display-changes",children:"Handling application display changes"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);