"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[59810],{28453:(e,s,a)=>{a.d(s,{R:()=>c,x:()=>i});var n=a(96540);const t={},o=n.createContext(t);function c(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(o.Provider,{value:s},e.children)}},50509:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>r,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"development/core-actionscript-classes/working-with-xml/using-xml-namespaces","title":"Using XML namespaces","description":"Namespaces in an XML object (or document) identify the type of data that the object contains. For example, in sending and delivering XML data to a web service that uses the SOAP messaging protocol, you declare the namespace in the opening tag of the XML:","source":"@site/docs/development/core-actionscript-classes/working-with-xml/using-xml-namespaces.md","sourceDirName":"development/core-actionscript-classes/working-with-xml","slug":"/development/core-actionscript-classes/working-with-xml/using-xml-namespaces","permalink":"/docs/development/core-actionscript-classes/working-with-xml/using-xml-namespaces","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/working-with-xml/using-xml-namespaces.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"title":"Using XML namespaces","sidebar_position":9},"sidebar":"mainSidebar","previous":{"title":"Traversing XML structures","permalink":"/docs/development/core-actionscript-classes/working-with-xml/traversing-xml-structures"},"next":{"title":"XML type conversion","permalink":"/docs/development/core-actionscript-classes/working-with-xml/xml-type-conversion"}}');var t=a(74848),o=a(28453);const c={title:"Using XML namespaces",sidebar_position:9},i=void 0,r={},p=[];function l(e){const s={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Namespaces in an XML object (or document) identify the type of data that the object contains. For example, in sending and delivering XML data to a web service that uses the SOAP messaging protocol, you declare the namespace in the opening tag of the XML:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-actionscript",children:'var message:XML =\n<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"\nsoap:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\n    <soap:Body xmlns:w="http://www.test.com/weather/">\n        <w:getWeatherResponse>\n            <w:tempurature >78</w:tempurature>\n        </w:getWeatherResponse>\n    </soap:Body>\n</soap:Envelope>;\n'})}),"\n",(0,t.jsxs)(s.p,{children:["The namespace has a prefix, soap , and a URI that defines the namespace, ",(0,t.jsx)(s.a,{href:"http://schemas.xmlsoap.org/soap/envelope/",children:"http://schemas.xmlsoap.org/soap/envelope/"})," ."]}),"\n",(0,t.jsx)(s.p,{children:"ActionScript 3.0 includes the Namespace class for working with XML namespaces. For the XML object in the previous example, you can use the Namespace class as follows:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-actionscript",children:'var soapNS:Namespace = message.namespace("soap");\ntrace(soapNS); // Output: http://schemas.xmlsoap.org/soap/envelope/\n\nvar wNS:Namespace = new Namespace("w", "http://www.test.com/weather/");\nmessage.addNamespace(wNS);\nvar encodingStyle:XMLList = message.@soapNS::encodingStyle;\nvar body:XMLList = message.soapNS::Body;\n\nmessage.soapNS::Body.wNS::GetWeatherResponse.wNS::tempurature = "78";\n'})}),"\n",(0,t.jsxs)(s.p,{children:["The XML class includes the following methods for working with namespaces: ",(0,t.jsx)(s.code,{children:"addNamespace()"})," , ",(0,t.jsx)(s.code,{children:"inScopeNamespaces()"})," , ",(0,t.jsx)(s.code,{children:"localName()"})," , ",(0,t.jsx)(s.code,{children:"name()"})," , ",(0,t.jsx)(s.code,{children:"namespace()"})," , ",(0,t.jsx)(s.code,{children:"namespaceDeclarations()"})," , ",(0,t.jsx)(s.code,{children:"removeNamespace()"})," , ",(0,t.jsx)(s.code,{children:"setLocalName()"})," , ",(0,t.jsx)(s.code,{children:"setName()"})," , and ",(0,t.jsx)(s.code,{children:"setNamespace()"})," ."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"default"})," ",(0,t.jsx)(s.code,{children:"xml"})," ",(0,t.jsx)(s.code,{children:"namespace"})," directive lets you assign a default namespace for XML objects. For example, in the following, both ",(0,t.jsx)(s.code,{children:"x1"})," and ",(0,t.jsx)(s.code,{children:"x2"})," have the same default namespace:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-actionscript",children:'var ns1:Namespace = new Namespace("http://www.example.com/namespaces/");\ndefault xml namespace = ns1;\nvar x1:XML = <test1 />;\nvar x2:XML = <test2 />;\n'})})]})}function d(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);