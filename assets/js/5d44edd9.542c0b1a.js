"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[11706],{28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>o});var i=n(96540);const l={},a=i.createContext(l);function r(t){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(l):t.components||l:r(t.components),i.createElement(a.Provider,{value:e},t.children)}},93130:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>x,frontMatter:()=>r,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"development/text/using-the-flash-text-engine/creating-and-displaying-text","title":"Creating and displaying text","description":"The classes that make up the Flash Text Engine enable you to create, format, and","source":"@site/docs/development/text/using-the-flash-text-engine/creating-and-displaying-text.md","sourceDirName":"development/text/using-the-flash-text-engine","slug":"/development/text/using-the-flash-text-engine/creating-and-displaying-text","permalink":"/docs/development/text/using-the-flash-text-engine/creating-and-displaying-text","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/text/using-the-flash-text-engine/creating-and-displaying-text.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Controlling text","permalink":"/docs/development/text/using-the-flash-text-engine/controlling-text"},"next":{"title":"Flash Text Engine example: News layout","permalink":"/docs/development/text/using-the-flash-text-engine/flash-text-engine-example-news-layout"}}');var l=n(74848),a=n(28453);const r={},o="Creating and displaying text",c={},s=[{value:"Adding GraphicElement and GroupElement objects",id:"adding-graphicelement-and-groupelement-objects",level:2},{value:"Replacing text",id:"replacing-text",level:2}];function h(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...t.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"creating-and-displaying-text",children:"Creating and displaying text"})}),"\n",(0,l.jsx)(e.p,{children:"The classes that make up the Flash Text Engine enable you to create, format, and\ncontrol text. The following classes are the basic building blocks for creating\nand displaying text with the Flash Text Engine:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"TextElement/GraphicElement/GroupElement - contain the content of a TextBlock\ninstance"}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"ElementFormat - specifies formatting attributes for the content of a TextBlock\ninstance"}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"TextBlock - the factory for building a paragraph of text"}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"TextLine - a line of text created from the TextBlock"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:["To display text, create a TextElement object from a String, using an\nElementFormat object to specify the formatting characteristics. Assign the\nTextElement to the ",(0,l.jsx)(e.code,{children:"content"})," property of a TextBlock object. Create the lines of\ntext for display by calling the ",(0,l.jsx)(e.code,{children:"TextBlock.createTextLine()"})," method. The\n",(0,l.jsx)(e.code,{children:"createTextLine()"})," method returns a TextLine object containing as much of the\nstring as will fit in the specified width. Call the method repeatedly until the\nentire string has been formatted into lines. When there are no more lines to be\ncreated, the textLineCreationResult property of the TextBlock object is assigned\nthe value: ",(0,l.jsx)(e.code,{children:"TextLineCreationResult.COMPLETE"}),". To show the lines, add them to the\ndisplay list (with appropriate ",(0,l.jsx)(e.code,{children:"x"})," and ",(0,l.jsx)(e.code,{children:"y"})," position values)."]}),"\n",(0,l.jsx)(e.p,{children:'The following code, for example, uses these FTE classes to display, "Hello\nWorld! This is Flash Text Engine!", using default format and font values. In\nthis simple example, only a single line of text is created.'}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'package\n{\n\timport flash.text.engine.*;\n\timport flash.display.Sprite;\n\n\tpublic class HelloWorldExample extends Sprite\n\t{\n\t\tpublic function HelloWorldExample()\n\t\t{\n\t\t\tvar str = "Hello World! This is Flash Text Engine!";\n\t\t\tvar format:ElementFormat = new ElementFormat();\n\t\t\tvar textElement:TextElement = new TextElement(str, format);\n\t\t\tvar textBlock:TextBlock = new TextBlock();\n\t\t\ttextBlock.content = textElement;\n\n\t\t\tvar textLine1:TextLine = textBlock.createTextLine(null, 300);\n\t\t\taddChild(textLine1);\n\t\t\ttextLine1.x = 30;\n\t\t\ttextLine1.y = 30;\n\t\t}\n\t}\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:["The parameters for ",(0,l.jsx)(e.code,{children:"createTextLine()"})," specify the line from which to begin the\nnew line and the width of the line in pixels. The line from which to begin the\nnew line is usually the previous line but, in the case of the first line, it is\n",(0,l.jsx)(e.code,{children:"null"}),"."]}),"\n",(0,l.jsx)(e.h2,{id:"adding-graphicelement-and-groupelement-objects",children:"Adding GraphicElement and GroupElement objects"}),"\n",(0,l.jsxs)(e.p,{children:["You can assign a GraphicElement object to a TextBlock object to display an image\nor a graphic element. Simply create an instance of the GraphicElement class from\na graphic or an image and assign the instance to the ",(0,l.jsx)(e.code,{children:"TextBlock.content"}),"\nproperty. Create the text line by calling ",(0,l.jsx)(e.code,{children:"TextBlock.createTextline()"})," as you\nnormally would. The following example creates two text lines, one with a\nGraphicElement object and one with a TextElement object."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'package\n{\n\timport flash.text.engine.*;\n\timport flash.display.Sprite;\n\timport flash.display.Shape;\n\timport flash.display.Graphics;\n\n\tpublic class GraphicElementExample extends Sprite\n\t{\n\t\tpublic function GraphicElementExample()\n\t\t{\n\t\t\tvar str:String = "Beware of Dog!";\n\n\t\t\tvar triangle:Shape = new Shape();\n\t\t\ttriangle.graphics.beginFill(0xFF0000, 1);\n\t\t\ttriangle.graphics.lineStyle(3);\n\t\t\ttriangle.graphics.moveTo(30, 0);\n\t\t\ttriangle.graphics.lineTo(60, 50);\n\t\t\ttriangle.graphics.lineTo(0, 50);\n\t\t\ttriangle.graphics.lineTo(30, 0);\n\t\t\ttriangle.graphics.endFill();\n\n\t\t\tvar format:ElementFormat = new ElementFormat();\n\t\t\tformat.fontSize = 20;\n\n\t\t\tvar graphicElement:GraphicElement = new GraphicElement(triangle, triangle.width, triangle.height, format);\n\t\t\tvar textBlock:TextBlock = new TextBlock();\n\t\t\ttextBlock.content = graphicElement;\n\t\t\tvar textLine1:TextLine = textBlock.createTextLine(null, triangle.width);\n\t\t\ttextLine1.x = 50;\n\t\t\ttextLine1.y = 110;\n\t\t\taddChild(textLine1);\n\n\t\t\tvar textElement:TextElement = new TextElement(str, format);\n\t\t\ttextBlock.content = textElement;\n\t\t\tvar textLine2 = textBlock.createTextLine(null, 300);\n\t\t\taddChild(textLine2);\n\t\t\ttextLine2.x = textLine1.x - 30;\n\t\t\ttextLine2.y = textLine1.y + 15;\n\t\t}\n\t}\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:["You can create a GroupElement object to create a group of TextElement,\nGraphicElement, and other GroupElement objects. A GroupElement can be assigned\nto the ",(0,l.jsx)(e.code,{children:"content"})," property of a TextBlock object. The parameter to the\n",(0,l.jsx)(e.code,{children:"GroupElement()"})," constructor is a Vector, which points to the text, graphic, and\ngroup elements that make up the group. The following example groups two graphic\nelements and a text element and assigns them as a unit to a text block."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'package\n{\n\timport flash.text.engine.*;\n\timport flash.display.Sprite;\n\timport flash.display.Shape;\n\timport flash.display.Graphics;\n\n\tpublic class GroupElementExample extends Sprite\n\t{\n\t\tpublic function GroupElementExample()\n\t\t{\n\t\t\tvar str:String = "Beware of Alligators!";\n\n\t\t\tvar triangle1:Shape = new Shape();\n\t\t\ttriangle1.graphics.beginFill(0xFF0000, 1);\n\t\t\ttriangle1.graphics.lineStyle(3);\n\t\t\ttriangle1.graphics.moveTo(30, 0);\n\t\t\ttriangle1.graphics.lineTo(60, 50);\n\t\t\ttriangle1.graphics.lineTo(0, 50);\n\t\t\ttriangle1.graphics.lineTo(30, 0);\n\t\t\ttriangle1.graphics.endFill();\n\n\t\t\tvar triangle2:Shape = new Shape();\n\t\t\ttriangle2.graphics.beginFill(0xFF0000, 1);\n\t\t\ttriangle2.graphics.lineStyle(3);\n\t\t\ttriangle2.graphics.moveTo(30, 0);\n\t\t\ttriangle2.graphics.lineTo(60, 50);\n\t\t\ttriangle2.graphics.lineTo(0, 50);\n\t\t\ttriangle2.graphics.lineTo(30, 0);\n\t\t\ttriangle2.graphics.endFill();\n\n\t\t\tvar format:ElementFormat = new ElementFormat();\n\t\t\tformat.fontSize = 20;\n\t\t\tvar graphicElement1:GraphicElement = new GraphicElement(triangle1, triangle1.width, triangle1.height, format);\n\t\t\tvar textElement:TextElement = new TextElement(str, format);\n\t\t\tvar graphicElement2:GraphicElement = new GraphicElement(triangle2, triangle2.width, triangle2.height, format);\n\t\t\tvar groupVector:Vector.<ContentElement> = new Vector.<ContentElement>();\n\t\t\tgroupVector.push(graphicElement1, textElement, graphicElement2);\n\t\t\tvar groupElement = new GroupElement(groupVector);\n\t\t\tvar textBlock:TextBlock = new TextBlock();\n\t\t\ttextBlock.content = groupElement;\n\t\t\tvar textLine:TextLine = textBlock.createTextLine(null, 800);\n\t\t\taddChild(textLine);\n\t\t\ttextLine.x = 100;\n\t\t\ttextLine.y = 200;\n\t\t}\n\t}\n}\n'})}),"\n",(0,l.jsx)(e.h2,{id:"replacing-text",children:"Replacing text"}),"\n",(0,l.jsxs)(e.p,{children:["You can replace text in a TextBlock instance by calling\n",(0,l.jsx)(e.code,{children:"TextElement.replaceText()"})," to replace text in the TextElement that you assigned\nto the ",(0,l.jsx)(e.code,{children:"TextBlock.content"})," property."]}),"\n",(0,l.jsxs)(e.p,{children:["The following example uses ",(0,l.jsx)(e.code,{children:"replaceText()"})," to first, insert text at the\nbeginning of the line, then, to append text to the end of the line, and,\nfinally, to replace text in the middle of the line."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'package\n{\n\timport flash.text.engine.*;\n\timport flash.display.Sprite;\n\n\tpublic class ReplaceTextExample extends Sprite\n\t{\n\t\tpublic function ReplaceTextExample()\n\t\t{\n\n\t\t\tvar str:String = "Lorem ipsum dolor sit amet";\n\t\t\tvar fontDescription:FontDescription = new FontDescription("Arial");\n\t\t\tvar format:ElementFormat = new ElementFormat(fontDescription);\n\t\t\tformat.fontSize = 14;\n\t\t\tvar textElement:TextElement = new TextElement(str, format);\n\t\t\tvar textBlock:TextBlock = new TextBlock();\n\t\t\ttextBlock.content = textElement;\n\t\t\tcreateLine(textBlock, 10);\n\t\t\ttextElement.replaceText(0, 0, "A text fragment: ");\n\t\t\tcreateLine(textBlock, 30);\n\t\t\ttextElement.replaceText(43, 43, "...");\n\t\t\tcreateLine(textBlock, 50);\n\t\t\ttextElement.replaceText(23, 28, "(ipsum)");\n\t\t\tcreateLine(textBlock, 70);\n\t\t}\n\n\t\tfunction createLine(textBlock:TextBlock, y:Number):void {\n\t\t\tvar textLine:TextLine = textBlock.createTextLine(null, 300);\n\t\t\ttextLine.x = 10;\n\t\t\ttextLine.y = y;\n\t\t\taddChild(textLine);\n\t\t}\n\t}\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"replaceText()"})," method replaces the text specified by the ",(0,l.jsx)(e.code,{children:"beginIndex"})," and\n",(0,l.jsx)(e.code,{children:"endIndex"})," parameters with the text specified by the ",(0,l.jsx)(e.code,{children:"newText"})," parameter. If the\nvalues of the ",(0,l.jsx)(e.code,{children:"beginIndex"})," and ",(0,l.jsx)(e.code,{children:"endIndex"})," parameters are the same,\n",(0,l.jsx)(e.code,{children:"replaceText()"})," inserts the specified text at that location. Otherwise it\nreplaces the characters specified by ",(0,l.jsx)(e.code,{children:"beginIndex"})," and ",(0,l.jsx)(e.code,{children:"endIndex"})," with the new\ntext."]})]})}function x(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,l.jsx)(e,{...t,children:(0,l.jsx)(h,{...t})}):h(t)}}}]);