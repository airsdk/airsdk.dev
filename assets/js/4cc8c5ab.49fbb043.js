"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[19912],{27066:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"development/display/working-with-movie-clips/creating-movieclip-objects-with-actionscript","title":"Creating MovieClip objects with ActionScript","description":"One way of adding content to the screen in Flash is by dragging assets from the","source":"@site/docs/development/display/working-with-movie-clips/creating-movieclip-objects-with-actionscript.md","sourceDirName":"development/display/working-with-movie-clips","slug":"/development/display/working-with-movie-clips/creating-movieclip-objects-with-actionscript","permalink":"/docs/development/display/working-with-movie-clips/creating-movieclip-objects-with-actionscript","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-movie-clips/creating-movieclip-objects-with-actionscript.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Controlling movie clip playback","permalink":"/docs/development/display/working-with-movie-clips/controlling-movie-clip-playback"},"next":{"title":"Loading an external SWF file","permalink":"/docs/development/display/working-with-movie-clips/loading-an-external-swf-file"}}');var n=t(74848),s=t(28453);const r={},c="Creating MovieClip objects with ActionScript",a={},l=[];function d(e){const i={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"creating-movieclip-objects-with-actionscript",children:"Creating MovieClip objects with ActionScript"})}),"\n",(0,n.jsx)(i.p,{children:"One way of adding content to the screen in Flash is by dragging assets from the\nlibrary onto the Stage, but that is not the only workflow. For complex projects,\nexperienced developers commonly prefer to create movie clips programatically.\nThis approach brings several advantages: easier re-use of code, faster\ncompile-time speed, and more sophisticated modifications that are available only\nto ActionScript."}),"\n",(0,n.jsx)(i.p,{children:"The display list API of ActionScript 3.0 streamlines the process of dynamically\ncreating MovieClip objects. The ability to instantiate a MovieClip instance\ndirectly, separate from the process of adding it to the display list, provides\nflexibility and simplicity without sacrificing control."}),"\n",(0,n.jsxs)(i.p,{children:["In ActionScript 3.0, when you create a movie clip (or any other display object)\ninstance programatically, it is not visible on the screen until it is added to\nthe display list by calling the ",(0,n.jsx)(i.code,{children:"addChild()"})," or the ",(0,n.jsx)(i.code,{children:"addChildAt()"})," method on a\ndisplay object container. This allows you to create a movie clip, set its\nproperties, and even call methods before it is rendered to the screen. For more\ninformation on working with the display list, see\n",(0,n.jsx)(i.a,{href:"/docs/development/display/display-programming/working-with-display-objects/working-with-display-object-containers",children:"Working with display object containers"}),"."]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>c});var o=t(96540);const n={},s=o.createContext(n);function r(e){const i=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:i},e.children)}}}]);