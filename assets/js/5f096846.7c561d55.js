"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[93283],{4453:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"development/display/filtering-display-objects/example-combining-basic-filters","title":"Example: Combining basic filters","description":"The following code example uses several basic filters, combined with a Timer for","source":"@site/docs/development/display/filtering-display-objects/example-combining-basic-filters.md","sourceDirName":"development/display/filtering-display-objects","slug":"/development/display/filtering-display-objects/example-combining-basic-filters","permalink":"/docs/development/display/filtering-display-objects/example-combining-basic-filters","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/filtering-display-objects/example-combining-basic-filters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Drop shadow filter","permalink":"/docs/development/display/filtering-display-objects/drop-shadow-filter"},"next":{"title":"Filtering display objects example: Filter Workbench","permalink":"/docs/development/display/filtering-display-objects/filtering-display-objects-example-filter-workbench"}}');var r=n(74848),a=n(28453);const l={},o="Example: Combining basic filters",s={},c=[];function h(e){const i={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"example-combining-basic-filters",children:"Example: Combining basic filters"})}),"\n",(0,r.jsx)(i.p,{children:"The following code example uses several basic filters, combined with a Timer for\ncreating repeating actions, to create an animated traffic light simulation."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"import flash.display.Shape;\nimport flash.events.TimerEvent;\nimport flash.filters.BitmapFilterQuality;\nimport flash.filters.BitmapFilterType;\nimport flash.filters.DropShadowFilter;\nimport flash.filters.GlowFilter;\nimport flash.filters.GradientBevelFilter;\nimport flash.utils.Timer;\n\nvar count:Number = 1;\nvar distance:Number = 8;\nvar angleInDegrees:Number = 225; // opposite of 45 degrees\nvar colors:Array = [0xFFFFCC, 0xFEFE78, 0x8F8E01];\nvar alphas:Array = [1, 0, 1];\nvar ratios:Array = [0, 128, 255];\nvar blurX:Number = 8;\nvar blurY:Number = 8;\nvar strength:Number = 1;\nvar quality:Number = BitmapFilterQuality.HIGH;\nvar type:String = BitmapFilterType.INNER;\nvar knockout:Boolean = false;\n\n// Draw the rectangle background for the traffic light.\nvar box:Shape = new Shape();\nbox.graphics.lineStyle();\nbox.graphics.beginFill(0xFEFE78);\nbox.graphics.drawRect(100, 50, 90, 200);\nbox.graphics.endFill();\n\n// Draw the 3 circles for the three lights.\nvar stopLight:Shape = new Shape();\nstopLight.graphics.lineStyle();\nstopLight.graphics.beginFill(0xFF0000);\nstopLight.graphics.drawCircle(145,90,25);\nstopLight.graphics.endFill();\n\nvar cautionLight:Shape = new Shape();\ncautionLight.graphics.lineStyle();\ncautionLight.graphics.beginFill(0xFF9900);\ncautionLight.graphics.drawCircle(145,150,25);\ncautionLight.graphics.endFill();\n\nvar goLight:Shape = new Shape();\ngoLight.graphics.lineStyle();\ngoLight.graphics.beginFill(0x00CC00);\ngoLight.graphics.drawCircle(145,210,25);\ngoLight.graphics.endFill();\n\n// Add the graphics to the display list.\naddChild(box);\naddChild(stopLight);\naddChild(cautionLight);\naddChild(goLight);\n\n// Apply a gradient bevel to the traffic light rectangle.\nvar gradientBevel:GradientBevelFilter = new GradientBevelFilter(distance, angleInDegrees, colors, alphas, ratios, blurX, blurY, strength, quality, type, knockout);\nbox.filters = [gradientBevel];\n\n// Create the inner shadow (for lights when off) and glow\n// (for lights when on).\nvar innerShadow:DropShadowFilter = new DropShadowFilter(5, 45, 0, 0.5, 3, 3, 1, 1, true, false);\nvar redGlow:GlowFilter = new GlowFilter(0xFF0000, 1, 30, 30, 1, 1, false, false);\nvar yellowGlow:GlowFilter = new GlowFilter(0xFF9900, 1, 30, 30, 1, 1, false, false);\nvar greenGlow:GlowFilter = new GlowFilter(0x00CC00, 1, 30, 30, 1, 1, false, false);\n\n// Set the starting state of the lights (green on, red/yellow off).\nstopLight.filters = [innerShadow];\ncautionLight.filters = [innerShadow];\ngoLight.filters = [greenGlow];\n\n// Swap the filters based on the count value.\nfunction trafficControl(event:TimerEvent):void\n{\n    if (count == 4)\n    {\n        count = 1;\n    }\n\n    switch (count)\n    {\n        case 1:\n            stopLight.filters = [innerShadow];\n            cautionLight.filters = [yellowGlow];\n            goLight.filters = [innerShadow];\n            break;\n        case 2:\n            stopLight.filters = [redGlow];\n            cautionLight.filters = [innerShadow];\n            goLight.filters = [innerShadow];\n            break;\n        case 3:\n            stopLight.filters = [innerShadow];\n            cautionLight.filters = [innerShadow];\n            goLight.filters = [greenGlow];\n            break;\n    }\n\n    count++;\n}\n\n// Create a timer to swap the filters at a 3 second interval.\nvar timer:Timer = new Timer(3000, 9);\ntimer.addEventListener(TimerEvent.TIMER, trafficControl);\ntimer.start();\n"})})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var t=n(96540);const r={},a=t.createContext(r);function l(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);