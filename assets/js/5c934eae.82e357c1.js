"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[18080],{11175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"development/user-interaction/working-with-menus/about-context-menus-in-html-air","title":"About context menus in HTML (AIR)","description":"In HTML content displayed using the HTMLLoader object, the contextmenu event","source":"@site/docs/development/user-interaction/working-with-menus/about-context-menus-in-html-air.md","sourceDirName":"development/user-interaction/working-with-menus","slug":"/development/user-interaction/working-with-menus/about-context-menus-in-html-air","permalink":"/docs/development/user-interaction/working-with-menus/about-context-menus-in-html-air","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/working-with-menus/about-context-menus-in-html-air.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"mainSidebar","previous":{"title":"Creating native menus (AIR)","permalink":"/docs/development/user-interaction/working-with-menus/creating-native-menus-air"},"next":{"title":"Displaying pop-up native menus (AIR)","permalink":"/docs/development/user-interaction/working-with-menus/displaying-pop-up-native-menus-air"}}');var o=n(74848),s=n(28453);const a={sidebar_position:3},r="About context menus in HTML (AIR)",c={},u=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"about-context-menus-in-html-air",children:"About context menus in HTML (AIR)"})}),"\n",(0,o.jsxs)(t.p,{children:["In HTML content displayed using the HTMLLoader object, the ",(0,o.jsx)(t.code,{children:"contextmenu"})," event\ncan be used to display a context menu. By default, a context menu is displayed\nautomatically when the user invokes the context menu event on selected text (by\nright-clicking or command-clicking the text). To prevent the default menu from\nopening, listen for the ",(0,o.jsx)(t.code,{children:"contextmenu"})," event and call the event object's\n",(0,o.jsx)(t.code,{children:"preventDefault()"})," method:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"function showContextMenu(event){\n\tevent.preventDefault();\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["You can then display a custom context menu using DHTML techniques or by\ndisplaying an AIR native context menu. The following example displays a native\ncontext menu by calling the menu ",(0,o.jsx)(t.code,{children:"display()"})," method in response to the HTML\n",(0,o.jsx)(t.code,{children:"contextmenu"})," event:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'<html>\n<head>\n\t<script src="AIRAliases.js" language="JavaScript" type="text/javascript"><\/script>\n\t<script language="javascript" type="text/javascript">\n\t\tfunction showContextMenu(event){\n\t\t\tevent.preventDefault();\n\t\t\tcontextMenu.display(window.nativeWindow.stage, event.clientX, event.clientY);\n\t\t}\n\n\t\tfunction createContextMenu(){\n\t\t\tvar menu = new air.NativeMenu();\n\t\t\tvar command = menu.addItem(new air.NativeMenuItem("Custom command"));\n\t\t\tcommand.addEventListener(air.Event.SELECT, onCommand);\n\t\t\treturn menu;\n\t\t}\n\n\t\tfunction onCommand(){\n\t\t\tair.trace("Context command invoked.");\n\t\t}\n\n\t\tvar contextMenu = createContextMenu();\n\t<\/script>\n</head>\n<body>\n\t<p oncontextmenu="showContextMenu(event)" style="-khtml-user-select:auto;">Custom context menu.</p>\n</body>\n</html>\n'})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(96540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);