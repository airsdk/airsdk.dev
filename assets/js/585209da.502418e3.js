"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[24241],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var t=s(96540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},55519:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"development/appendixes/sql-support-in-local-databases/index","title":"SQL support in local databases","description":"Adobe AIR includes a SQL database engine with support for local SQL databases","source":"@site/docs/development/appendixes/sql-support-in-local-databases/index.md","sourceDirName":"development/appendixes/sql-support-in-local-databases","slug":"/development/appendixes/sql-support-in-local-databases/","permalink":"/docs/development/appendixes/sql-support-in-local-databases/","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/appendixes/sql-support-in-local-databases/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"How to Use ActionScript Examples","permalink":"/docs/development/appendixes/how-to-use-actionscript-examples"},"next":{"title":"Supported SQL syntax","permalink":"/docs/development/appendixes/sql-support-in-local-databases/supported-sql-syntax"}}');var a=s(74848),r=s(28453);const i={},l="SQL support in local databases",d={},c=[];function o(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"sql-support-in-local-databases",children:"SQL support in local databases"})}),"\n",(0,a.jsxs)(n.p,{children:["Adobe AIR includes a SQL database engine with support for local SQL databases\nwith many standard SQL features, using the open source\n",(0,a.jsx)(n.a,{href:"https://www.sqlite.org",children:"SQLite"})," database system. The runtime does not specify\nhow or where database data is stored on the file system. Each database is stored\ncompletely within a single file. A developer can specify the location in the\nfile system where the database file is stored, and a single AIR application can\naccess one or many separate databases (i.e. separate database files).This\ndocument outlines the SQL syntax and data type support for Adobe AIR local SQL\ndatabases. This document is not intended to serve as a comprehensive SQL\nreference. Rather, it describes specific details of the SQL dialect that Adobe\nAIR supports. The runtime supports most of the SQL-92 standard SQL dialect.\nBecause there are numerous references, web sites, books, and training materials\nfor learning SQL, this document is not intended to be a comprehensive SQL\nreference or tutorial. Instead, this document particularly focuses on the\nAIR-supported SQL syntax, and the differences between SQL-92 and the supported\nSQL dialect."]}),"\n",(0,a.jsx)(n.p,{children:"SQL statement definition conventions"}),"\n",(0,a.jsx)(n.p,{children:"Within statement definitions in this document, the following conventions are\nused:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Text case"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"UPPER CASE - literal SQL keywords are written in all upper case."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"lower case - placeholder terms or clause names are written in all lower"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"case.\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Definition characters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"::= Indicates a clause or statement definition."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Grouping and alternating characters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"| The pipe character is used between alternative options, and can be read"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'as "or".\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"[] Items in square brackets are optional items; the brackets can contain a"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"single item or a set of alternative items.\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"() Parentheses surrounding a set of alternatives (a set of items separated"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"by pipe characters), designates a required group of items, that is, a set of\nitems that are the possible values for a single required item.\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Quantifiers"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"+ A plus character following an item in parentheses indicates that the"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"preceding item can occur 1 or more times.\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"* An asterisk character following an item in square brackets indicates that"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"the preceding (bracketed) item can occur 0 or more times\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Literal characters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"* An asterisk character used in a column name or between the parentheses"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'following a function name signifies a literal asterisk character rather than\nthe "0 or more" quantifier.\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:". A period character represents a literal period."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:", A comma character represents a literal comma."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"() A pair of parentheses surrounding a single clause or item indicates that"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"the parentheses are required, literal parentheses characters.\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Other characters, unless otherwise indicated, represent those literal"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"characters.\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/development/appendixes/sql-support-in-local-databases/supported-sql-syntax",children:"Supported SQL syntax"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/development/appendixes/sql-support-in-local-databases/data-type-support",children:"Data type support"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/development/appendixes/sql-support-in-local-databases/sql-error-detail-messages-ids-and-arguments",children:"SQL error detail messages, ids, and arguments"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);