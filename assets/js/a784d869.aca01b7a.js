"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[39156],{27122:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"development/text/using-the-textfield-class/displaying-text","title":"Displaying text","description":"Although authoring tools like Adobe Flash Builder and Flash Professional provide","source":"@site/docs/development/text/using-the-textfield-class/displaying-text.md","sourceDirName":"development/text/using-the-textfield-class","slug":"/development/text/using-the-textfield-class/displaying-text","permalink":"/docs/development/text/using-the-textfield-class/displaying-text","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/text/using-the-textfield-class/displaying-text.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Capturing text input","permalink":"/docs/development/text/using-the-textfield-class/capturing-text-input"},"next":{"title":"Formatting text","permalink":"/docs/development/text/using-the-textfield-class/formatting-text"}}');var s=n(74848),o=n(28453);const a={},l="Displaying text",r={},d=[{value:"Types of text",id:"types-of-text",level:2},{value:"Modifying the text field contents",id:"modifying-the-text-field-contents",level:2},{value:"Displaying HTML text",id:"displaying-html-text",level:2},{value:"Using images in text fields",id:"using-images-in-text-fields",level:2},{value:"Scrolling text in a text field",id:"scrolling-text-in-a-text-field",level:2}];function x(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"displaying-text",children:"Displaying text"})}),"\n",(0,s.jsx)(e.p,{children:"Although authoring tools like Adobe Flash Builder and Flash Professional provide\nseveral options for displaying text, including text-related components or text\ntools, the simplest way to display text programmatically is through a text\nfield."}),"\n",(0,s.jsx)(e.h2,{id:"types-of-text",children:"Types of text"}),"\n",(0,s.jsx)(e.p,{children:"The type of text within a text field is characterized by its source:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Dynamic text"}),"\n",(0,s.jsx)(e.p,{children:"Dynamic text includes content that is loaded from an external source, such as\na text file, an XML file, or even a remote web service."}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Input text"}),"\n",(0,s.jsxs)(e.p,{children:["Input text is any text entered by a user or dynamic text that a user can edit.\nYou can set up a style sheet to format input text, or use the\nflash.text.TextFormat class to assign properties to the text field for the\ninput content. For more information, see\n",(0,s.jsx)(e.a,{href:"/docs/development/text/using-the-textfield-class/capturing-text-input",children:"Capturing text input"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Static text"}),"\n",(0,s.jsxs)(e.p,{children:["Static text is created through Flash Professional only. You cannot create a\nstatic text instance using ActionScript 3.0. However, you can use ActionScript\nclasses like StaticText and TextSnapshot to manipulate an existing static text\ninstance. For more information, see\n",(0,s.jsx)(e.a,{href:"/docs/development/text/using-the-textfield-class/working-with-static-text",children:"Working with static text"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"modifying-the-text-field-contents",children:"Modifying the text field contents"}),"\n",(0,s.jsxs)(e.p,{children:["You can define dynamic text by assigning a string to the\n",(0,s.jsx)(e.code,{children:"flash.text.TextField.text"})," property. You assign a string directly to the\nproperty, as follows:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'myTextField.text = "Hello World";\n'})}),"\n",(0,s.jsxs)(e.p,{children:["You can also assign the ",(0,s.jsx)(e.code,{children:"text"})," property a value from a variable defined in your\nscript, as in the following example:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'package\n{\n\timport flash.display.Sprite;\n\timport flash.text.*;\n\n\tpublic class TextWithImage extends Sprite\n\t{\n\t\tprivate var myTextBox:TextField = new TextField();\n\t\tprivate var myText:String = "Hello World";\n\n\t\tpublic function TextWithImage()\n\t\t{\n\t\t\taddChild(myTextBox);\n\t\t\tmyTextBox.text = myText;\n\t\t}\n\t}\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Alternatively, you can assign the ",(0,s.jsx)(e.code,{children:"text"})," property a value from a remote\nvariable. You have three options for loading text values from remote sources:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"The flash.net.URLLoader and flash.net.URLRequest classes load variables for\nthe text from a local or remote location."}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"FlashVars"})," attribute is embedded in the HTML page hosting the SWF file\nand can contain values for text variables."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["The flash.net.SharedObject class manages persistent storage of values. For\nmore information, see\n",(0,s.jsx)(e.a,{href:"/docs/development/files-and-data/storing-local-data/",children:"Storing local data"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"displaying-html-text",children:"Displaying HTML text"}),"\n",(0,s.jsxs)(e.p,{children:["The flash.text.TextField class has an ",(0,s.jsx)(e.code,{children:"htmlText"})," property that you can use to\nidentify your text string as one containing HTML tags for formatting the\ncontent. As in the following example, you must assign your string value to the\n",(0,s.jsx)(e.code,{children:"htmlText"})," property (not the ",(0,s.jsx)(e.code,{children:"text"})," property) for Flash Player or AIR to render\nthe text as HTML:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'var myText:String = "<p>This is <b>some</b> content to <i>render</i> as <u>HTML</u> text.</p>";\nmyTextBox.htmlText = myText;\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Flash Player and AIR support a subset of HTML tags and entities for the\n",(0,s.jsx)(e.code,{children:"htmlText"})," property. The ",(0,s.jsx)(e.code,{children:"flash.text.TextField.htmlText"})," property description in\nthe ActionScript 3.0 Reference provides detailed information about the supported\nHTML tags and entities."]}),"\n",(0,s.jsxs)(e.p,{children:["Once you designate your content using the ",(0,s.jsx)(e.code,{children:"htmlText"})," property, you can use style\nsheets or the ",(0,s.jsx)(e.code,{children:"textformat"})," tag to manage the formatting of your content. For\nmore information, see ",(0,s.jsx)(e.a,{href:"/docs/development/text/using-the-textfield-class/formatting-text",children:"Formatting text"}),"."]}),"\n",(0,s.jsx)(e.h2,{id:"using-images-in-text-fields",children:"Using images in text fields"}),"\n",(0,s.jsxs)(e.p,{children:["Another advantage to displaying your content as HTML text is that you can\ninclude images in the text field. You can reference an image, local or remote,\nusing the ",(0,s.jsx)(e.code,{children:"img"})," tag and have it appear within the associated text field."]}),"\n",(0,s.jsxs)(e.p,{children:["The following example creates a text field named ",(0,s.jsx)(e.code,{children:"myTextBox"})," and includes a JPG\nimage of an eye, stored in the same directory as the SWF file, within the\ndisplayed text:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"package\n{\n\timport flash.display.Sprite;\n\timport flash.text.*;\n\n\tpublic class TextWithImage extends Sprite\n\t{\n\t\tprivate var myTextBox:TextField;\n\t\tprivate var myText:String = \"<p>This is <b>some</b> content to <i>test</i> and <i>see</i></p><p><img src='eye.jpg' width='20' height='20'></p><p>what can be rendered.</p><p>You should see an eye image and some <u>HTML</u> text.</p>\";\n\n\t\tpublic function TextWithImage()\n\t\t{\n\t\t\tmyTextBox.width = 200;\n\t\t\tmyTextBox.height = 200;\n\t\t\tmyTextBox.multiline = true;\n\t\t\tmyTextBox.wordWrap = true;\n\t\t\tmyTextBox.border = true;\n\n\t\t\taddChild(myTextBox);\n\t\t\tmyTextBox.htmlText = myText;\n\t\t}\n\t}\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"img"})," tag supports JPEG, GIF, PNG, and SWF files."]}),"\n",(0,s.jsx)(e.h2,{id:"scrolling-text-in-a-text-field",children:"Scrolling text in a text field"}),"\n",(0,s.jsx)(e.p,{children:"In many cases, your text can be longer than the text field displaying the text.\nOr you may have an input field that allows a user to input more text than can be\ndisplayed at one time. You can use the scroll-related properties of the\nflash.text.TextField class to manage lengthy content, either vertically or\nhorizontally."}),"\n",(0,s.jsxs)(e.p,{children:["The scroll-related properties include ",(0,s.jsx)(e.code,{children:"TextField.scrollV"}),", ",(0,s.jsx)(e.code,{children:"TextField.scrollH"}),"\nand ",(0,s.jsx)(e.code,{children:"maxScrollV"})," and ",(0,s.jsx)(e.code,{children:"maxScrollH"}),". Use these properties to respond to events,\nlike a mouse click or a keypress."]}),"\n",(0,s.jsx)(e.p,{children:"The following example creates a text field that is a set size and contains more\ntext than the field can display at one time. As the user clicks the text field,\nthe text scrolls vertically."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'package\n{\n\timport flash.display.Sprite;\n\timport flash.text.*;\n\timport flash.events.MouseEvent;\n\n\tpublic class TextScrollExample extends Sprite\n\t{\n\t\tprivate var myTextBox:TextField = new TextField();\n\t\tprivate var myText:String = "Hello world and welcome to the show. It\'s really nice to meet you. Take your coat off and stay a while. OK, show is over. Hope you had fun. You can go home now. Don\'t forget to tip your waiter. There are mints in the bowl by the door. Thank you. Please come again.";\n\n\t\tpublic function TextScrollExample()\n\t\t{\n\t\t\tmyTextBox.text = myText;\n\t\t\tmyTextBox.width = 200;\n\t\t\tmyTextBox.height = 50;\n\t\t\tmyTextBox.multiline = true;\n\t\t\tmyTextBox.wordWrap = true;\n\t\t\tmyTextBox.background = true;\n\t\t\tmyTextBox.border = true;\n\n\t\t\tvar format:TextFormat = new TextFormat();\n\t\t\tformat.font = "Verdana";\n\t\t\tformat.color = 0xFF0000;\n\t\t\tformat.size = 10;\n\n\t\t\tmyTextBox.defaultTextFormat = format;\n\t\t\taddChild(myTextBox);\n\t\t\tmyTextBox.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownScroll);\n\t\t}\n\n\t\tpublic function mouseDownScroll(event:MouseEvent):void\n\t\t{\n\t\t\tmyTextBox.scrollV++;\n\t\t}\n\t}\n}\n'})})]})}function c(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(x,{...t})}):x(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>l});var i=n(96540);const s={},o=i.createContext(s);function a(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);