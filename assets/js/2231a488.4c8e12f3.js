"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[32060],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}},32873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"development/text/using-the-textfield-class/restricting-text-input","title":"Restricting text input","description":"Since input text fields are often used for forms or dialog boxes in","source":"@site/docs/development/text/using-the-textfield-class/restricting-text-input.md","sourceDirName":"development/text/using-the-textfield-class","slug":"/development/text/using-the-textfield-class/restricting-text-input","permalink":"/docs/development/text/using-the-textfield-class/restricting-text-input","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/text/using-the-textfield-class/restricting-text-input.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Formatting text","permalink":"/docs/development/text/using-the-textfield-class/formatting-text"},"next":{"title":"Selecting and manipulating text","permalink":"/docs/development/text/using-the-textfield-class/selecting-and-manipulating-text"}}');var r=n(74848),i=n(28453);const o={},c="Restricting text input",d={},a=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"restricting-text-input",children:"Restricting text input"})}),"\n",(0,r.jsxs)(t.p,{children:["Since input text fields are often used for forms or dialog boxes in\napplications, you may want to limit the types of characters a user can enter in\na text field, or even keep the text hidden \u2014for example, for a password. The\nflash.text.TextField class has a ",(0,r.jsx)(t.code,{children:"displayAsPassword"})," property and a ",(0,r.jsx)(t.code,{children:"restrict"}),"\nproperty that you can set to control user input."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"displayAsPassword"})," property simply hides the text (displaying it as a\nseries of asterisks) as the user types it. When ",(0,r.jsx)(t.code,{children:"displayAsPassword"})," is set to\n",(0,r.jsx)(t.code,{children:"true"}),", the Cut and Copy commands and their corresponding keyboard shortcuts do\nnot function. As the following example shows, you assign the ",(0,r.jsx)(t.code,{children:"displayAsPassword"}),"\nproperty just as you would other properties, such as background and color:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"myTextBox.type = TextFieldType.INPUT;\nmyTextBox.background = true;\nmyTextBox.displayAsPassword = true;\naddChild(myTextBox);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"restrict"})," property is a little more complicated since you must specify\nwhich characters the user is allowed to type in an input text field. You can\nallow specific letters, numbers, or ranges of letters, numbers, and characters.\nThe following code allows the user to enter only uppercase letters (and not\nnumbers or special characters) in the text field:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'myTextBox.restrict = "A-Z";\n'})}),"\n",(0,r.jsxs)(t.p,{children:["ActionScript 3.0 uses hyphens to define ranges, and carets to define excluded\ncharacters. For more information about defining what is restricted in an input\ntext field, see the ",(0,r.jsx)(t.code,{children:"flash.text.TextField.restrict"})," property entry in the\nActionScript 3.0 Reference."]}),"\n",(0,r.jsxs)(t.p,{children:["Note: If you use the ",(0,r.jsx)(t.code,{children:"flash.text.TextField.restrict"})," property, the runtime\nautomatically converts restricted letters to the allowed case. If you use the\n",(0,r.jsx)(t.code,{children:"fl.text.TLFTextField.restrict"})," property (that is, if you use a TLF text field),\nthe runtime ignores restricted letters."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);