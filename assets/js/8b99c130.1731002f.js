"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[52786],{26747:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"development/core-actionscript-classes/handling-errors/basics-of-error-handling","title":"Basics of error handling","description":"A run-time error is something that goes wrong in your ActionScript code that","source":"@site/docs/development/core-actionscript-classes/handling-errors/basics-of-error-handling.md","sourceDirName":"development/core-actionscript-classes/handling-errors","slug":"/development/core-actionscript-classes/handling-errors/basics-of-error-handling","permalink":"/docs/development/core-actionscript-classes/handling-errors/basics-of-error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/handling-errors/basics-of-error-handling.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Handling errors","permalink":"/docs/development/core-actionscript-classes/handling-errors/"},"next":{"title":"Types of errors","permalink":"/docs/development/core-actionscript-classes/handling-errors/types-of-errors"}}');var o=n(74848),s=n(28453);const a={sidebar_position:1},i="Basics of error handling",c={},h=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}];function d(e){const r={a:"a",br:"br",code:"code",em:"em",h1:"h1",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"basics-of-error-handling",children:"Basics of error handling"})}),"\n",(0,o.jsxs)(r.p,{children:["A run-time error is something that goes wrong in your ActionScript code that\nstops the ActionScript content from running as intended. To ensure that your\nActionScript code runs smoothly for users, write code in your application that\nhandles the error\u2014that fixes it, works around it, or at least lets the user know\nthat it has happened. This process is called ",(0,o.jsx)(r.em,{children:"error handling"}),"."]}),"\n",(0,o.jsx)(r.p,{children:"Error handling is a broad category that includes responding to many kinds of\nerrors that are thrown during compilation or while an application is running.\nErrors that happen at compile time are often easier to identify\u2014 fix them to\ncomplete the process of creating a SWF file."}),"\n",(0,o.jsxs)(r.p,{children:["Run-time errors can be more difficult to detect, because in order for them to\noccur the erroneous code must actually be run. If a segment of your program has\nseveral branches of code, like an ",(0,o.jsx)(r.code,{children:"if..then..else"})," statement, test every\npossible condition, with all the possible input values that real users might\nuse, to confirm that your code is error-free."]}),"\n",(0,o.jsxs)(r.p,{children:["Run-time errors can be divided into two categories: ",(0,o.jsx)(r.em,{children:"program errors"})," are\nmistakes in your ActionScript code, such as specifying the wrong data type for a\nmethod parameter; ",(0,o.jsx)(r.em,{children:"logical errors"})," are mistakes in the logic (the data checking\nand value manipulation) of your program, such as using the wrong formula to\ncalculate interest rates in a banking application. Again, both of these types of\nerrors can often be detected and corrected ahead of time by diligently testing\nyour application."]}),"\n",(0,o.jsx)(r.p,{children:"Ideally, you'll want to identify and remove all errors from your application\nbefore it is released to end users. However, not all errors can be foreseen or\nprevented. For example, suppose your ActionScript application loads information\nfrom a particular website that is outside your control. If at some point that\nwebsite isn't available, the part of your application that depends on that\nexternal data won't behave correctly. The most important aspect of error\nhandling involves preparing for these unknown cases and handling them\ngracefully. Users need to continue to use your application, or at least get a\nfriendly error message explaining why it isn't working."}),"\n",(0,o.jsx)(r.p,{children:"Run-time errors are represented in two ways in ActionScript:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsx)(r.p,{children:"Error classes: Many errors have an error class associated with them. When an\nerror occurs, the Flash runtime (such as Flash Player or Adobe AIR) creates an\ninstance of the specific error class that is associated with that particular\nerror. Your code can use the information contained in that error object to\nmake an appropriate response to the error."}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsx)(r.p,{children:"Error events: Sometimes an error occurs when the Flash runtime would normally\ntrigger an event. In those cases, an error event is triggered instead. Each\nerror event has a class associated with it, and the Flash runtime passes an\ninstance of that class to the methods that are subscribed to the error event."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["To determine whether a particular method can trigger an error or error event,\nsee the method's entry in the\n",(0,o.jsx)(r.a,{href:"https://airsdk.dev/reference/actionscript/3.0/index.html",children:"ActionScript 3.0 Reference for the Adobe Flash Platform"}),"."]}),"\n",(0,o.jsx)(r.h4,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,o.jsx)(r.p,{children:"The following reference list contains important terms for programming error\nhandling routines:"}),"\n",(0,o.jsxs)(r.p,{children:["Asynchronous",(0,o.jsx)(r.br,{}),"\n","A program command such as a method call that doesn't provide an immediate\nresult; instead it gives a result (or error) in the form of an event."]}),"\n",(0,o.jsxs)(r.p,{children:["Catch",(0,o.jsx)(r.br,{}),"\n","When an exception (a run-time error) occurs and your code becomes aware of the\nexception, that code is said to ",(0,o.jsx)(r.em,{children:"catch"})," the exception. Once an exception is\ncaught, the Flash runtime stops notifying other ActionScript code of the\nexception."]}),"\n",(0,o.jsxs)(r.p,{children:["Debugger version",(0,o.jsx)(r.br,{}),"\n","A special version of the Flash runtime, such as the Flash Player dubugger\nversion or the AIR Debug Launcher (ADL), that contains code for notifying users\nof run-time errors. In the standard version of Flash Player or Adobe AIR (the\none that most users have), errors that aren't handled by your ActionScript code\nare ignored. In the debugger versions (which are included with Adobe Flash CS4\nProfessional and Adobe Flash Builder), a warning message appears when an\nunhandled error happens."]}),"\n",(0,o.jsxs)(r.p,{children:["Exception",(0,o.jsx)(r.br,{}),"\n","An error that happens while an application is running and that the Flash runtime\ncan't resolve on its own."]}),"\n",(0,o.jsxs)(r.p,{children:["Re-throw",(0,o.jsx)(r.br,{}),"\n","When your code catches an exception, the Flash runtime no longer notifies other\nobjects of the exception. If it's important for other objects to receive the\nexception, your code must ",(0,o.jsx)(r.em,{children:"re-throw"})," the exception to start the notification\nprocess again."]}),"\n",(0,o.jsxs)(r.p,{children:["Synchronous",(0,o.jsx)(r.br,{}),"\n","A program command, such as a method call, that provides an immediate result (or\nimmediately throws an error), meaning that the response can be used within the\nsame code block."]}),"\n",(0,o.jsxs)(r.p,{children:["Throw",(0,o.jsx)(r.br,{}),"\n","The act of notifying a Flash runtime (and consequently, notifying other objects\nand ActionScript code) that an error has occurred is known as ",(0,o.jsx)(r.em,{children:"throwing"})," an\nerror."]})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var t=n(96540);const o={},s=t.createContext(o);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);