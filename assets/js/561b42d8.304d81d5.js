"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[27193],{14099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/client-system-interaction/client-system-environment/using-the-system-class","title":"Using the System class","description":"The System class contains methods and properties that allow you to interact with","source":"@site/docs/development/client-system-interaction/client-system-environment/using-the-system-class.md","sourceDirName":"development/client-system-interaction/client-system-environment","slug":"/development/client-system-interaction/client-system-environment/using-the-system-class","permalink":"/docs/development/client-system-interaction/client-system-environment/using-the-system-class","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/client-system-interaction/client-system-environment/using-the-system-class.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Basics of the client system environment","permalink":"/docs/development/client-system-interaction/client-system-environment/basics-of-the-client-system-environment"},"next":{"title":"Using the Capabilities class","permalink":"/docs/development/client-system-interaction/client-system-environment/using-the-capabilities-class"}}');var i=n(74848),r=n(28453);const o={sidebar_position:2},a="Using the System class",c={},l=[{value:"Getting data about the user&#39;s system at run time",id:"getting-data-about-the-users-system-at-run-time",level:2},{value:"Saving text to the clipboard",id:"saving-text-to-the-clipboard",level:2},{value:"Flash Player 10 and AIR 1.0",id:"flash-player-10-and-air-10",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"using-the-system-class",children:"Using the System class"})}),"\n",(0,i.jsxs)(t.p,{children:["The System class contains methods and properties that allow you to interact with\nthe user's operating system and retrieve the current memory usage of the\nruntime. The methods and properties of the System class also allow you to listen\nfor ",(0,i.jsx)(t.code,{children:"imeComposition"})," events, instruct the runtime to load external text files\nusing the user's current code page or to load them as Unicode, or set the\ncontents of the user's clipboard."]}),"\n",(0,i.jsx)(t.h2,{id:"getting-data-about-the-users-system-at-run-time",children:"Getting data about the user's system at run time"}),"\n",(0,i.jsxs)(t.p,{children:["By checking the ",(0,i.jsx)(t.code,{children:"System.totalMemory"})," property, you can determine the amount of\nmemory (in bytes) that the runtime is currently using. This property allows you\nto monitor memory usage and optimize your applications based on how the memory\nlevel changes. For example, if a particular visual effect causes a large\nincrease in memory usage, you may want to consider modifying the effect or\neliminating it altogether."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"System.ime"})," property is a reference to the currently installed Input Method\nEditor (IME). This property allows you to listen for ",(0,i.jsx)(t.code,{children:"imeComposition"})," events (\n",(0,i.jsx)(t.code,{children:"flash.events.IMEEvent.IME_COMPOSITION"}),") by using the ",(0,i.jsx)(t.code,{children:"addEventListener()"}),"\nmethod."]}),"\n",(0,i.jsxs)(t.p,{children:["The third property in the System class is ",(0,i.jsx)(t.code,{children:"useCodePage"}),". When ",(0,i.jsx)(t.code,{children:"useCodePage"})," is\nset to ",(0,i.jsx)(t.code,{children:"true"}),", the runtime uses the traditional code page of the operating\nsystem to load external text files. If you set this property to ",(0,i.jsx)(t.code,{children:"false"}),", you\ntell the runtime to interpret the external file as Unicode."]}),"\n",(0,i.jsxs)(t.p,{children:["If you set ",(0,i.jsx)(t.code,{children:"System.useCodePage"})," to ",(0,i.jsx)(t.code,{children:"true"}),", remember that the traditional code\npage of the operating system must include the characters used in your external\ntext file in order for the text to display. For example, if you load an external\ntext file that contains Chinese characters, those characters cannot display on a\nsystem that uses the English Windows code page because that code page does not\ninclude Chinese characters."]}),"\n",(0,i.jsxs)(t.p,{children:["To ensure that users on all platforms can view the external text files that are\nused in your application, you should encode all external text files as Unicode\nand leave ",(0,i.jsx)(t.code,{children:"System.useCodePage"})," set to ",(0,i.jsx)(t.code,{children:"false"})," by default. This way, the runtime\ninterprets the text as Unicode."]}),"\n",(0,i.jsx)(t.h2,{id:"saving-text-to-the-clipboard",children:"Saving text to the clipboard"}),"\n",(0,i.jsxs)(t.p,{children:["The System class includes a method called ",(0,i.jsx)(t.code,{children:"setClipboard()"})," that allows the Flash\nruntime to set the contents of the user's clipboard with a specified string. For\nsecurity reasons, there is no ",(0,i.jsx)(t.code,{children:"Security.getClipboard()"})," method, since such a\nmethod could potentially allow malicious sites to access the data last copied to\nthe user's clipboard."]}),"\n",(0,i.jsx)(t.p,{children:"The following code illustrates how an error message can be copied to the user's\nclipboard when a security error occurs. The error message can be useful if the\nuser wants to report a potential bug with an application."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'private function securityErrorHandler(event:SecurityErrorEvent):void\n{\n\tvar errorString:String = "[" + event.type + "] " + event.text;\n\ttrace(errorString);\n\tSystem.setClipboard(errorString);\n}\n'})}),"\n",(0,i.jsx)(t.h4,{id:"flash-player-10-and-air-10",children:"Flash Player 10 and AIR 1.0"}),"\n",(0,i.jsx)(t.p,{children:"You can use the Clipboard class to read and write clipboard data in response to\na user event. In AIR, a user event is not required for code running in the\napplication sandbox to access the clipboard."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);