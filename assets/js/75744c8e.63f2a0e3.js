"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[5980],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},43843:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"development/networking-and-communication/xml-signature-validation-in-air/about-xml-signatures","title":"About XML signatures","description":"An XML signature is a digital signature represented in XML syntax. The data in","source":"@site/docs/development/networking-and-communication/xml-signature-validation-in-air/about-xml-signatures.md","sourceDirName":"development/networking-and-communication/xml-signature-validation-in-air","slug":"/development/networking-and-communication/xml-signature-validation-in-air/about-xml-signatures","permalink":"/docs/development/networking-and-communication/xml-signature-validation-in-air/about-xml-signatures","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/networking-and-communication/xml-signature-validation-in-air/about-xml-signatures.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Basics of XML signature validation","permalink":"/docs/development/networking-and-communication/xml-signature-validation-in-air/basics-of-xml-signature-validation"},"next":{"title":"Implementing the IURIDereferencer interface","permalink":"/docs/development/networking-and-communication/xml-signature-validation-in-air/implementing-the-iuridereferencer-interface"}}');var a=n(74848),s=n(28453);const r={sidebar_position:2},o="About XML signatures",l={},d=[{value:"Supported XML signature syntax",id:"supported-xml-signature-syntax",level:2},{value:"Certificates and trust",id:"certificates-and-trust",level:3},{value:"Certificate expiration and revocation",id:"certificate-expiration-and-revocation",level:4}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"about-xml-signatures",children:"About XML signatures"})}),"\n",(0,a.jsx)(t.p,{children:"An XML signature is a digital signature represented in XML syntax. The data in\nan XML signature can be used to validate that the signed information has not\nbeen altered since signing. In addition, when a signing certificate has been\nissued by a trusted certification authority, the identity of the signer can be\nverified through the public key infrastructure."}),"\n",(0,a.jsx)(t.p,{children:"An XML signature can be applied to any type of digital data (in binary or XML\nformat). XML signatures are typically used for such purposes as:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"checking whether external or downloaded resources have been modified"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"verifying that messages come from a known source"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"validating application license or subscription privileges"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"supported-xml-signature-syntax",children:"Supported XML signature syntax"}),"\n",(0,a.jsx)(t.p,{children:"AIR supports the following elements from the W3C recommendation for XML\nSignature Syntax and Processing:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"All core signature syntax elements (section 4 of the W3C recommendation\ndocument)\u2014except the KeyInfo element is not fully supported"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The KeyInfo element must only contain an X509Data element"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"An X509Data element must only contain an X509Certificate element"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The SHA256 digest method"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The RSA-SHA1 (PKCS1) signing algorithm"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:'The "Canonical XML without comments" canonicalization method and transform'}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"The enveloped signature transform"}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"timestamps"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The following document illustrates a typical XML signature (most of the\ncryptographic data has been removed to simplify the example):"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'<Signature xmlns="http://www.w3.org/2000/09/xmldsig#">\n\t<SignedInfo>\n\t\t<CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>\n\t\t<SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>\n\t\t<Reference URI="URI_to_signed_data">\n\t\t\t<Transforms>\n\t\t\t\t<Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>            </Transforms>\n\t\t\t<DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>\n\t\t\t<DigestValue>uoo...vY=</DigestValue>\n\t\t</Reference>\n\t</SignedInfo>\n\t<SignatureValue>Ked...w==</SignatureValue>\n\t<KeyInfo>\n\t\t<X509Data>\n\t\t\t<X509Certificate>i7d...w==</X509Certificate>\n\t\t</X509Data>\n\t</KeyInfo>\n</Signature>\n'})}),"\n",(0,a.jsx)(t.p,{children:"The key elements of a signature are:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"SignedInfo \u2014 Contains references to the signed data and the computed digest\nvalues at the time of signing. The signed data itself may be included in the\nsame document as the XML signature or may be external."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"SignatureValue \u2014 Contains a digest of the SignedInfo element encrypted with\nthe signer's private key."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"KeyInfo \u2014 Contains the signing certificate, as well as any additional\ncertificates needed to establish the chain of trust. Note that although the\nKeyInfo element is technically optional, AIR cannot validate the signature if\nit is not included."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"There are three general types of XML signatures:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Enveloped \u2014 the signature is inserted inside the XML data that it is signing."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Enveloping \u2014 the signed XML data is contained within an Object element within\nthe Signature element."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Detached \u2014 the signed data is external to the XML signature. The signed data\nmight be in an external file. Alternately, it might be in the same XML\ndocument as the signature, just not a parent or child element of the Signature\nelement."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"XML signatures use URIs to reference the signed data. The signing and the\nvalidating applications must use the same conventions for resolving these URIs.\nWhen using the XMLSignatureValidator class, you must provide an implementation\nof the IURIDereferencer interface. This implementation is responsible for\nresolving the URI and returning the signed data as a ByteArray object. The\nreturned ByteArray object is digested using the same algorithm that produced the\ndigest in the signature."}),"\n",(0,a.jsx)(t.h3,{id:"certificates-and-trust",children:"Certificates and trust"}),"\n",(0,a.jsx)(t.p,{children:"A certificate consists of a public key, identifying information, and possibly\none or more certificates belonging to the issuing certification authority."}),"\n",(0,a.jsx)(t.p,{children:"There are two ways to establish trust in a certificate. You can establish trust\nby obtaining a copy of the certificate directly from the signer, for example on\nphysical media, or through a secure digital transmission such as an SSL\ntransaction. You can also rely on a certification authority to determine whether\nthe signing certificate is trustworthy."}),"\n",(0,a.jsx)(t.p,{children:"To rely on a certification authority, the signing certificate must be issued by\nan authority that is trusted on the computer upon which the signature is\nvalidated. Most operating system manufacturers place the root certificates of a\nnumber of certification authorities into the operating system trust store. Users\ncan also add and remove certificates from the store."}),"\n",(0,a.jsx)(t.p,{children:"Even if a certificate is issued by a trusted certification authority, you must\nstill decide whether the certificate belongs to someone you trust. In many use\ncases, this decision is passed along to the end-user. For example, when an AIR\napplication is installed, the AIR installer displays the identifying information\nfrom the publisher's certificate when asking the user to verify whether they\nwant to install the application. In other cases, you might have to compare the\npublic key or other certificate information to a list of acceptable keys. (This\nlist must be secured, perhaps by its own signature, or by storing in the AIR\nencrypted local store, so that the list itself cannot be tampered with.)"}),"\n",(0,a.jsx)(t.p,{children:'Note: While you can elect to trust the signing certificate without independent\nverification\u2014such as when a signature is "self-signed"\u2014you do not thereby gain\nmuch assurance of anything by verifying the signature. Without knowing who\ncreated a signature, the assurance that the signature has not been tampered\nwith, is of little, if any, value. The signature could be a validly signed\nforgery.'}),"\n",(0,a.jsx)(t.h4,{id:"certificate-expiration-and-revocation",children:"Certificate expiration and revocation"}),"\n",(0,a.jsx)(t.p,{children:"All certificates expire. Certificates can also be revoked by the issuing\ncertification authority if, for example, the private key related to the\ncertificate is compromised or stolen. If a signature is signed with an expired\nor revoked certificate, then the signature will be reported as invalid unless a\ntimestamp has been included as part of the signature. If a timestamp is present,\nthen the XMLSignatureValidator class will validate the signature as long as the\ncertificate was valid at the time of signing."}),"\n",(0,a.jsx)(t.p,{children:"A timestamp is a signed digital message from a timestamp service that certifies\nthat the data was signed at a particular time and date. Timestamps are issued by\ntimestamp authorities and signed by the timestamp authority's own certificate.\nThe timestamp authority certificate embedded in the timestamp must be trusted on\nthe current machine for the timestamp to be considered valid. The\nXMLSignatureValidator does not provide an API for designating a different\ncertificate to use in validating the timestamp."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);