"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[46698],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(96540);const t={},a=i.createContext(t);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},43782:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"development/security/flash-platform-security-overview","title":"Flash Platform security overview","description":"Much of security model used by the Flash Player and AIR runtimes is based on the","source":"@site/docs/development/security/flash-platform-security-overview.md","sourceDirName":"development/security","slug":"/development/security/flash-platform-security-overview","permalink":"/docs/development/security/flash-platform-security-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/security/flash-platform-security-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Security","permalink":"/docs/development/security/"},"next":{"title":"Security sandboxes","permalink":"/docs/development/security/security-sandboxes"}}');var t=s(74848),a=s(28453);const o={sidebar_position:1},r="Flash Platform security overview",d={},c=[];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"flash-platform-security-overview",children:"Flash Platform security overview"})}),"\n",(0,t.jsxs)(n.p,{children:["Much of security model used by the Flash Player and AIR runtimes is based on the\ndomain of origin for loaded SWF files, HTML, media, and other assets. Executable\ncode in a file from a specific Internet domain, such as ",(0,t.jsx)(n.a,{href:"http://www.example.com",children:"www.example.com"}),", can\nalways access all data from that domain. These assets are put in the same\nsecurity grouping, known as a ",(0,t.jsx)(n.em,{children:"security sandbox"}),". (For more information, see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/security-sandboxes",children:"Security sandboxes"}),".)"]}),"\n",(0,t.jsxs)(n.p,{children:["For example, ActionScript code in a SWF file can load SWF files, bitmaps, audio,\ntext files, and any other asset from its own domain. Also, cross-scripting\nbetween two SWF files from the same domain is always permitted, as long as both\nfiles are written using ActionScript 3.0. ",(0,t.jsx)(n.em,{children:"Cross-scripting"})," is the ability of\ncode in one file to access the properties, methods, and objects defined by the\ncode in another file."]}),"\n",(0,t.jsxs)(n.p,{children:["Cross-scripting is not supported between SWF files written using ActionScript\n3.0 and those using previous versions of ActionScript; however, these files can\ncommunicate by using the LocalConnection class. Also, the ability of a SWF file\nto cross-script ActionScript 3.0 SWF files from other domains and to load data\nfrom other domains is prohibited by default; however, such access can be granted\nwith a call to the ",(0,t.jsx)(n.code,{children:"Security.allowDomain()"})," method in the loaded SWF file. For\nmore information, see ",(0,t.jsx)(n.a,{href:"/docs/development/security/cross-scripting",children:"Cross-scripting"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The following basic security rules always apply by default:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Resources in the same security sandbox can always access each other."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Executable code in files in a remote sandbox can never access local files and\ndata."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The Flash Player and AIR runtimes consider the following to be individual\ndomains, and set up individual security sandboxes for each:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"http://example.com"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"http://www.example.com"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"http://store.example.com"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"https://www.example.com"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"http://192.0.34.166"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Even if a named domain, such as ",(0,t.jsx)(n.code,{children:"http://example.com"}),", maps to a specific IP\naddress, such as ",(0,t.jsx)(n.code,{children:"http://192.0.34.166"}),", the runtimes set up separate security\nsandboxes for each."]}),"\n",(0,t.jsx)(n.p,{children:"There are two basic methods that a developer can use to grant a SWF file access\nto assets from sandboxes other than that of the SWF file:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Security.allowDomain()"})," method (see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/permission-controls#author-developer-controls",children:"Author (developer) controls"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The URL policy file (see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/permission-controls#website-controls-policy-files",children:"Website controls (policy files)"}),")"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In the Flash Player and AIR runtime security models, there is a distinction\nbetween loading content and extracting or accessing data. ",(0,t.jsx)(n.em,{children:"Content"})," is defined\nas media, including visual media the runtimes can display, audio, video, or a\nSWF file or HTML that includes displayed media. ",(0,t.jsx)(n.em,{children:"Data"})," is defined as something\nthat is accessible only to code. Content and data are loaded in different ways."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Loading content\u2014You can load content using classes such as the Loader, Sound,\nand NetStream classes; through MXML tags when using Flex; or through HTML tags\nin an AIR application."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Extracting data\u2014You can extract data from loaded media content by using Bitmap\nobjects, the ",(0,t.jsx)(n.code,{children:"BitmapData.draw()"})," and ",(0,t.jsx)(n.code,{children:"BitmapData.drawWithQuality()"})," methods,\nthe ",(0,t.jsx)(n.code,{children:"Sound.id3"})," property, or the ",(0,t.jsx)(n.code,{children:"SoundMixer.computeSpectrum()"})," method. The\n",(0,t.jsx)(n.code,{children:"drawWithQuality"})," method is available in Flash Player 11.3 and higher; AIR 3.3\nand higher."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Accessing data\u2014You can access data directly by loading it from an external\nfile (such as an XML file) using classes such as the URLStream, URLLoader,\nFileReference, Socket, and XMLSocket classes. AIR provides additional classes\nfor loading data, such as FileStream, and XMLHttpRequest."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The Flash Player security model defines different rules for loading content and\naccessing data. In general, there are fewer restrictions on loading content than\non accessing data."}),"\n",(0,t.jsx)(n.p,{children:"In general, content (SWF files, bitmaps, mp3 files, and videos) can be loaded\nfrom anywhere, but if the content is from a domain other than that of the\nloading code or content, it will be partitioned in a separate security sandbox."}),"\n",(0,t.jsx)(n.p,{children:"There are a few barriers to loading content:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["By default, local SWF files (those loaded from a non-network address, such as\na user's hard drive) are classified in the local-with-filesystem sandbox.\nThese files cannot load content from the network. For more information, see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/security-sandboxes#local-sandboxes",children:"Local sandboxes"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Real-Time Messaging Protocol (RTMP) servers can limit access to content. For\nmore information, see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/loading-content#content-delivered-using-rtmp-servers",children:"Content delivered using RTMP servers"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["If the loaded media is an image, audio, or video, its data, such as pixel data\nand sound data, can be accessed by a SWF file outside its security sandbox only\nif the domain of that SWF file has been included in a URL policy file at the\norigin domain of the media. For details, see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/accessing-loaded-media-as-data",children:"Accessing loaded media as data"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Other forms of loaded data include text or XML files, which are loaded with a\nURLLoader object. Again in this case, to access any data from another security\nsandbox, permission must be granted by means of a URL policy file at the origin\ndomain. For details, see\n",(0,t.jsx)(n.a,{href:"/docs/development/security/loading-data#using-urlloader-and-urlstream",children:"Using URLLoader and URLStream"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Note: Policy files are never required in order for code executing in the AIR\napplication sandbox to load remote content or data."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);