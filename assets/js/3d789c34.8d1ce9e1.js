"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[42246],{28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>l});var i=n(96540);const o={},s=i.createContext(o);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(s.Provider,{value:t},e.children)}},70017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content","title":"Defining browser-like user interfaces for HTML content","description":"JavaScript provides several APIs for controlling the window displaying the HTML","source":"@site/docs/development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content.md","sourceDirName":"development/html-content-in-air/scripting-the-air-html-container","slug":"/development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content","permalink":"/docs/development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/scripting-the-air-html-container/defining-browser-like-user-interfaces-for-html-content.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Creating subclasses of the HTMLLoader class","permalink":"/docs/development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class"},"next":{"title":"Display properties of HTMLLoader objects","permalink":"/docs/development/html-content-in-air/scripting-the-air-html-container/display-properties-of-htmlloader-objects"}}');var o=n(74848),s=n(28453);const d={},l="Defining browser-like user interfaces for HTML content",r={},a=[{value:"About extending the HTMLHost class",id:"about-extending-the-htmlhost-class",level:2},{value:"Example: Extending the HTMLHost class",id:"example-extending-the-htmlhost-class",level:2},{value:"Flex example:",id:"flex-example",level:4},{value:"Flash Professional example:",id:"flash-professional-example",level:4},{value:"Handling changes to the window.location property",id:"handling-changes-to-the-windowlocation-property",level:2},{value:"Handling JavaScript calls to window.moveBy(), window.moveTo(), window.resizeTo(), window.resizeBy()",id:"handling-javascript-calls-to-windowmoveby-windowmoveto-windowresizeto-windowresizeby",level:2},{value:"Handling JavaScript calls to window.open()",id:"handling-javascript-calls-to-windowopen",level:2},{value:"Handling JavaScript calls to window.close()",id:"handling-javascript-calls-to-windowclose",level:2},{value:"Handling changes of the window.status property",id:"handling-changes-of-the-windowstatus-property",level:2},{value:"Handling changes of the window.document.title property",id:"handling-changes-of-the-windowdocumenttitle-property",level:2},{value:"Handling JavaScript calls to window.blur() and window.focus()",id:"handling-javascript-calls-to-windowblur-and-windowfocus",level:2},{value:"Creating windows with scrolling HTML content",id:"creating-windows-with-scrolling-html-content",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"defining-browser-like-user-interfaces-for-html-content",children:"Defining browser-like user interfaces for HTML content"})}),"\n",(0,o.jsxs)(t.p,{children:["JavaScript provides several APIs for controlling the window displaying the HTML\ncontent. In AIR, these APIs can be overridden by implementing a custom\n",(0,o.jsx)(t.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/html/HTMLHost.html",children:"HTMLHost"}),"\nclass."]}),"\n",(0,o.jsx)(t.h2,{id:"about-extending-the-htmlhost-class",children:"About extending the HTMLHost class"}),"\n",(0,o.jsxs)(t.p,{children:["If, for example, your application presents multiple HTMLLoader objects in a\ntabbed interface, you may want title changes made by the loaded HTML pages to\nchange the label of the tab, not the title of the main window. Similarly, your\ncode could respond to a ",(0,o.jsx)(t.code,{children:"window.moveTo()"})," call by repositioning the HTMLLoader\nobject in its parent display object container, by moving the window that\ncontains the HTMLLoader object, by doing nothing at all, or by doing something\nelse entirely."]}),"\n",(0,o.jsx)(t.p,{children:"The AIR HTMLHost class controls the following JavaScript properties and methods:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.status"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.document.title"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.location"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.blur()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.close()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.focus()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.moveBy()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.moveTo()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.open()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.resizeBy()"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"window.resizeTo()"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["When you create an HTMLLoader object using ",(0,o.jsx)(t.code,{children:"new HTMLLoader()"}),", the listed\nJavaScript properties or methods are not enabled. The HTMLHost class provides a\ndefault, browser-like implementation of these JavaScript APIs. You can also\nextend the HTMLHost class to customize the behavior. To create an HTMLHost\nobject supporting the default behavior, set the ",(0,o.jsx)(t.code,{children:"defaultBehaviors"})," parameter to\ntrue in the HTMLHost constructor:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"var defaultHost:HTMLHost = new HTMLHost(true);\n"})}),"\n",(0,o.jsxs)(t.p,{children:["When you create an HTML window in AIR with the HTMLLoader class\n",(0,o.jsx)(t.code,{children:"createRootWindow()"})," method, an HTMLHost instance supporting the default\nbehaviors is assigned automatically. You can change the host object behavior by\nassigning a different HTMLHost implementation to the ",(0,o.jsx)(t.code,{children:"htmlHost"})," property of the\nHTMLLoader, or you can assign ",(0,o.jsx)(t.code,{children:"null"})," to disable the features entirely."]}),"\n",(0,o.jsxs)(t.p,{children:["Note: AIR assigns a default HTMLHost object to the initial window created for an\nHTML-based AIR application and any windows created by the default implementation\nof the JavaScript ",(0,o.jsx)(t.code,{children:"window.open()"})," method."]}),"\n",(0,o.jsx)(t.h2,{id:"example-extending-the-htmlhost-class",children:"Example: Extending the HTMLHost class"}),"\n",(0,o.jsx)(t.p,{children:"The following example shows how to customize the way that an HTMLLoader object\naffects the user interface, by extending the HTMLHost class:"}),"\n",(0,o.jsx)(t.h4,{id:"flex-example",children:"Flex example:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Create a class that extends the HTMLHost class (a subclass)."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Override methods of the new class to handle changes in the user\ninterface-related settings. For example, the following class, CustomHost,\ndefines behaviors for calls to ",(0,o.jsx)(t.code,{children:"window.open()"})," and changes to\n",(0,o.jsx)(t.code,{children:"window.document.title"}),". Calls to ",(0,o.jsx)(t.code,{children:"window.open()"})," open the HTML page in a\nnew window, and changes to ",(0,o.jsx)(t.code,{children:"window.document.title"})," (including the setting of\nthe ",(0,o.jsx)(t.code,{children:"<title>"})," element of an HTML page) set the title of that window."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"package\n{\n\timport flash.html.*;\n\timport flash.display.StageScaleMode;\n\timport flash.display.NativeWindow;\n\timport flash.display.NativeWindowInitOptions;\n\n\tpublic class CustomHost extends HTMLHost\n\t{\n\t\toverride public function\n\t\t\tcreateWindow(windowCreateOptions:HTMLWindowCreateOptions):HTMLLoader\n\t\t{\n\t\t\tvar initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();\n\t\t\tvar bounds:Rectangle = new Rectangle(windowCreateOptions.x,\n\t\t\t\t\t\t\t\t\t\t\twindowCreateOptions.y,\n\t\t\t\t\t\t\t\t\t\t\twindowCreateOptions.width,\n\t\t\t\t\t\t\t\t\t\t\twindowCreateOptions.height);\n\t\t\tvar htmlControl:HTMLLoader = HTMLLoader.createRootWindow(true, initOptions,\n\t\t\t\t\t\t\t\t\t\twindowCreateOptions.scrollBarsVisible, bounds);\n\t\t\thtmlControl.htmlHost = new HTMLHostImplementation();\n\t\t\tif(windowCreateOptions.fullscreen){\n\t\t\t\thtmlControl.stage.displayState =\n\t\t\t\t\tStageDisplayState.FULL_SCREEN_INTERACTIVE;\n\t\t\t}\n\t\t\treturn htmlControl;\n\t\t}\n\t\toverride public function updateTitle(title:String):void\n\t\t{\n\t\t\thtmlLoader.stage.nativeWindow.title = title;\n\t\t}\n\t}\n}\n"})}),"\n",(0,o.jsxs)(t.ol,{start:"3",children:["\n",(0,o.jsxs)(t.li,{children:["In the code that contains the HTMLLoader (not the code of the new subclass\nof HTMLHost), create an object of the new class. Assign the new object to\nthe ",(0,o.jsx)(t.code,{children:"htmlHost"})," property of the HTMLLoader. The following Flex code uses the\nCustomHost class defined in the previous step:"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'<?xml version="1.0" encoding="utf-8"?>\n<mx:WindowedApplication\n\txmlns:mx="https://www.adobe.com/2006/mxml"\n\tlayout="vertical"\n\tapplicationComplete="init()">\n\t<mx:Script>\n\t<![CDATA[\n\t\timport flash.html.HTMLLoader;\n\t\timport CustomHost;\n\t\tprivate function init():void\n\t\t{\n\t\t\tvar html:HTMLLoader = new HTMLLoader();\n\t\t\thtml.width = container.width;\n\t\t\thtml.height = container.height;\n\t\t\tvar urlReq:URLRequest = new URLRequest("Test.html");\n\t\t\thtml.htmlHost = new CustomHost();\n\t\t\thtml.load(urlReq);\n\t\t\tcontainer.addChild(html);\n\t\t}\n\t]]>\n\t</mx:Script>\n\t<mx:UIComponent id="container" width="100%" height="100%"/>\n</mx:WindowedApplication>\n'})}),"\n",(0,o.jsx)(t.p,{children:"To test the code described here, include an HTML file with the following content\nin the application directory:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'<html>\n<head>\n\t<title>Test</title>\n</head>\n<script>\n\tfunction openWindow()\n\t{\n\t\twindow.runtime.trace("in");\n\t\tdocument.title = "foo"\n\t\twindow.open(\'Test.html\');\n\t\twindow.runtime.trace("out");\n\t}\n<\/script>\n<body>\n\t<a href="#" onclick="openWindow()">window.open(\'Test.html\')</a>\n</body>\n</html>\n'})}),"\n",(0,o.jsx)(t.h4,{id:"flash-professional-example",children:"Flash Professional example:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Create a Flash file for AIR. Set its document class to CustomHostExample and\nthen save the file as CustomHostExample.fla."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Create an ActionScript file called CustomHost.as containing a class that\nextends the HTMLHost class (a subclass). This class overrides certain\nmethods of the new class to handle changes in the user interface-related\nsettings. For example, the following class, CustomHost, defines behaviors\nfor calls to ",(0,o.jsx)(t.code,{children:"window.open()"})," and changes to ",(0,o.jsx)(t.code,{children:"window.document.title"}),". Calls\nto the ",(0,o.jsx)(t.code,{children:"window.open()"})," method open the HTML page in a new window, and\nchanges to the ",(0,o.jsx)(t.code,{children:"window.document.title"})," property (including the setting of\nthe ",(0,o.jsx)(t.code,{children:"<title>"})," element of an HTML page) set the title of that window."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'package\n{\n\timport flash.display.StageScaleMode;\n\timport flash.display.NativeWindow;\n\timport flash.display.NativeWindowInitOptions;\n\timport flash.events.Event;\n\timport flash.events.NativeWindowBoundsEvent;\n\timport flash.geom.Rectangle;\n\timport flash.html.HTMLLoader;\n\timport flash.html.HTMLHost;\n\timport flash.html.HTMLWindowCreateOptions;\n\timport flash.text.TextField;\n\n\tpublic class CustomHost extends HTMLHost\n\t{\n\t\tpublic var statusField:TextField;\n\n\t\tpublic function CustomHost(defaultBehaviors:Boolean=true)\n\t\t{\n\t\t\tsuper(defaultBehaviors);\n\t\t}\n\t\toverride public function windowClose():void\n\t\t{\n\t\t\thtmlLoader.stage.nativeWindow.close();\n\t\t}\n\t\toverride public function createWindow(\n\t\t\t\t\t\t\t\twindowCreateOptions:HTMLWindowCreateOptions ):HTMLLoader\n\t\t{\n\t\t\tvar initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();\n\t\t\tvar bounds:Rectangle = new Rectangle(windowCreateOptions.x,\n\t\t\t\t\t\t\t\t\t\t\twindowCreateOptions.y,\n\t\t\t\t\t\t\t\t\t\t\twindowCreateOptions.width,\n\t\t\t\t\t\t\t\t\t\t\twindowCreateOptions.height);\n\t\t\tvar htmlControl:HTMLLoader = HTMLLoader.createRootWindow(true, initOptions,\n\t\t\t\t\t\t\t\t\t\twindowCreateOptions.scrollBarsVisible, bounds);\n\t\t\thtmlControl.htmlHost = new HTMLHostImplementation();\n\t\t\tif(windowCreateOptions.fullscreen){\n\t\t\t\thtmlControl.stage.displayState =\n\t\t\t\t\tStageDisplayState.FULL_SCREEN_INTERACTIVE;\n\t\t\t}\n\t\t\treturn htmlControl;\n\t\t}\n\t\toverride public function updateLocation(locationURL:String):void\n\t\t{\n\t\t\ttrace(locationURL);\n\t\t}\n\t\toverride public function set windowRect(value:Rectangle):void\n\t\t{\n\t\t\thtmlLoader.stage.nativeWindow.bounds = value;\n\t\t}\n\t\toverride public function updateStatus(status:String):void\n\t\t{\n\t\t\tstatusField.text = status;\n\t\t\ttrace(status);\n\t\t}\n\t\toverride public function updateTitle(title:String):void\n\t\t{\n\t\t\thtmlLoader.stage.nativeWindow.title = title + "- Example Application";\n\t\t}\n\t\toverride public function windowBlur():void\n\t\t{\n\t\t\thtmlLoader.alpha = 0.5;\n\t\t}\n\t\toverride public function windowFocus():void\n\t\t{\n\t\t\thtmlLoader.alpha = 1;\n\t\t}\n\t}\n}\n'})}),"\n",(0,o.jsxs)(t.ol,{start:"3",children:["\n",(0,o.jsx)(t.li,{children:"Create another ActionScript file named CustomHostExample.as to contain the\ndocument class for the application. This class creates an HTMLLoader object\nand sets its host property to an instance of the CustomHost class defined in\nthe previous step:"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'package\n{\n\timport flash.display.Sprite;\n\timport flash.html.HTMLLoader;\n\timport flash.net.URLRequest;\n\timport flash.text.TextField;\n\n\tpublic class CustomHostExample extends Sprite\n\t{\n\t\tfunction CustomHostExample():void\n\t\t{\n\t\t\tvar html:HTMLLoader = new HTMLLoader();\n\t\t\thtml.width = 550;\n\t\t\thtml.height = 380;\n\t\t\tvar host:CustomHost = new CustomHost();\n\t\t\thtml.htmlHost = host;\n\n\t\t\tvar urlReq:URLRequest = new URLRequest("Test.html");\n\t\t\thtml.load(urlReq);\n\n\t\t\taddChild(html);\n\n\t\t\tvar statusTxt:TextField = new TextField();\n\t\t\tstatusTxt.y = 380;\n\t\t\tstatusTxt.height = 20;\n\t\t\tstatusTxt.width = 550;\n\t\t\tstatusTxt.background = true;\n\t\t\tstatusTxt.backgroundColor = 0xEEEEEEEE;\n\t\t\taddChild(statusTxt);\n\n\t\t\thost.statusField = statusTxt;\n\t\t}\n\t}\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:"To test the code described here, include an HTML file with the following\ncontent in the application directory:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'<html>\n<head>\n\t<title>Test</title>\n\t<script>\n\t\tfunction openWindow()\n\t\t{\n\t\t\tdocument.title = "Test"\n\t\t\twindow.open(\'Test.html\');\n\t\t}\n\t<\/script>\n</head>\n<body bgColor="#EEEEEE">\n\t<a href="#" onclick="window.open(\'Test.html\')">window.open(\'Test.html\')</a>\n\t<br/><a href="#" onclick="window.document.location=\'http://www.adobe.com\'">\n\twindow.document.location = \'http://www.adobe.com\'</a>\n\t<br/><a href="#" onclick="window.moveBy(6, 12)">moveBy(6, 12)</a>\n\t<br/><a href="#" onclick="window.close()">window.close()</a>\n\t<br/><a href="#" onclick="window.blur()">window.blur()</a>\n\t<br/><a href="#" onclick="window.focus()">window.focus()</a>\n\t<br/><a href="#" onclick="window.status = new Date().toString()">window.status=new Date().toString()</a>\n</body>\n</html>\n'})}),"\n",(0,o.jsx)(t.h2,{id:"handling-changes-to-the-windowlocation-property",children:"Handling changes to the window.location property"}),"\n",(0,o.jsxs)(t.p,{children:["Override the ",(0,o.jsx)(t.code,{children:"locationChange()"})," method to handle changes of the URL of the HTML\npage. The ",(0,o.jsx)(t.code,{children:"locationChange()"})," method is called when JavaScript in a page changes\nthe value of ",(0,o.jsx)(t.code,{children:"window.location"}),". The following example simply loads the requested\nURL:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function updateLocation(locationURL:String):void\n{\n\thtmlLoader.load(new URLRequest(locationURL));\n}\n"})}),"\n",(0,o.jsx)(t.p,{children:"Note: You can use the htmlLoader property of the HTMLHost object to reference\nthe current HTMLLoader object."}),"\n",(0,o.jsx)(t.h2,{id:"handling-javascript-calls-to-windowmoveby-windowmoveto-windowresizeto-windowresizeby",children:"Handling JavaScript calls to window.moveBy(), window.moveTo(), window.resizeTo(), window.resizeBy()"}),"\n",(0,o.jsxs)(t.p,{children:["Override the ",(0,o.jsx)(t.code,{children:"set windowRect()"})," method to handle changes in the bounds of the\nHTML content. The ",(0,o.jsx)(t.code,{children:"set windowRect()"})," method is called when JavaScript in a page\ncalls ",(0,o.jsx)(t.code,{children:"window.moveBy()"}),", ",(0,o.jsx)(t.code,{children:"window.moveTo()"}),", ",(0,o.jsx)(t.code,{children:"window.resizeTo()"}),", or\n",(0,o.jsx)(t.code,{children:"window.resizeBy()"}),". The following example simply updates the bounds of the\ndesktop window:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function set windowRect(value:Rectangle):void\n{\n\thtmlLoader.stage.nativeWindow.bounds = value;\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"handling-javascript-calls-to-windowopen",children:"Handling JavaScript calls to window.open()"}),"\n",(0,o.jsxs)(t.p,{children:["Override the ",(0,o.jsx)(t.code,{children:"createWindow()"})," method to handle JavaScript calls to\n",(0,o.jsx)(t.code,{children:"window.open()"}),". Implementations of the ",(0,o.jsx)(t.code,{children:"createWindow()"})," method are responsible\nfor creating and returning a new HTMLLoader object. Typically, you would display\nthe HTMLLoader in a new window, but creating a window is not required."]}),"\n",(0,o.jsxs)(t.p,{children:["The following example illustrates how to implement the ",(0,o.jsx)(t.code,{children:"createWindow()"})," function\nusing the ",(0,o.jsx)(t.code,{children:"HTMLLoader.createRootWindow()"})," to create both the window and the\nHTMLLoader object. You can also create a NativeWindow object separately and add\nthe HTMLLoader to the window stage."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function createWindow(windowCreateOptions:HTMLWindowCreateOptions):HTMLLoader{\n\tvar initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();\n\tvar bounds:Rectangle = new Rectangle(windowCreateOptions.x, windowCreateOptions.y,\n\t\t\t\t\t\t\t\twindowCreateOptions.width, windowCreateOptions.height);\n\tvar htmlControl:HTMLLoader = HTMLLoader.createRootWindow(true, initOptions,\n\t\t\t\t\t\t\t\t\twindowCreateOptions.scrollBarsVisible, bounds);\n\thtmlControl.htmlHost = new HTMLHostImplementation();\n\tif(windowCreateOptions.fullscreen){\n\t\thtmlControl.stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;\n\t}\n\treturn htmlControl;\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Note: This example assigns the custom HTMLHost implementation to any new windows\ncreated with ",(0,o.jsx)(t.code,{children:"window.open()"}),". You can also use a different implementation or set\nthe ",(0,o.jsx)(t.code,{children:"htmlHost"})," property to null for new windows, if desired."]}),"\n",(0,o.jsxs)(t.p,{children:["The object passed as a parameter to the ",(0,o.jsx)(t.code,{children:"createWindow()"})," method is an\n",(0,o.jsx)(t.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/html/HTMLWindowCreateOptions.html",children:"HTMLWindowCreateOptions"}),"\nobject. The HTMLWindowCreateOptions class includes properties that report the\nvalues set in the ",(0,o.jsx)(t.code,{children:"features"})," parameter string in the call to ",(0,o.jsx)(t.code,{children:"window.open()"}),":"]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"HTMLWindowCreateOptions property"}),(0,o.jsx)(t.th,{children:"Corresponding setting in the features string in the JavaScript call to window.open()"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"fullscreen"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"fullscreen"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"height"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"height"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"locationBarVisible"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"location"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"menuBarVisible"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"menubar"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"resizeable"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"resizable"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"scrollBarsVisible"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"scrollbars"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"statusBarVisible"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"status"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"toolBarVisible"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"toolbar"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"width"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"width"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"x"})}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.code,{children:"left"})," or ",(0,o.jsx)(t.code,{children:"screenX"})]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"y"})}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.code,{children:"top"})," or ",(0,o.jsx)(t.code,{children:"screenY"})]})]})]})]}),"\n",(0,o.jsx)(t.p,{children:"The HTMLLoader class does not implement all the features that can be specified\nin the feature string. Your application must provide scroll bars, location bars,\nmenu bars, status bars, and toolbars when appropriate."}),"\n",(0,o.jsxs)(t.p,{children:["The other arguments to the JavaScript ",(0,o.jsx)(t.code,{children:"window.open()"})," method are handled by the\nsystem. A ",(0,o.jsx)(t.code,{children:"createWindow()"})," implementation should not load content in the\nHTMLLoader object, or set the window title."]}),"\n",(0,o.jsx)(t.h2,{id:"handling-javascript-calls-to-windowclose",children:"Handling JavaScript calls to window.close()"}),"\n",(0,o.jsxs)(t.p,{children:["Override the ",(0,o.jsx)(t.code,{children:"windowClose()"})," to handle JavaScript calls to ",(0,o.jsx)(t.code,{children:"window.close()"}),"\nmethod. The following example closes the desktop window when the\n",(0,o.jsx)(t.code,{children:"window.close()"})," method is called:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function windowClose():void\n{\n\thtmlLoader.stage.nativeWindow.close();\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["JavaScript calls to ",(0,o.jsx)(t.code,{children:"window.close()"})," do not have to close the containing window.\nYou could, for example, remove the HTMLLoader from the display list, leaving the\nwindow (which may have other content) open, as in the following code:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function windowClose():void\n{\n\thtmlLoader.parent.removeChild(htmlLoader);\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"handling-changes-of-the-windowstatus-property",children:"Handling changes of the window.status property"}),"\n",(0,o.jsxs)(t.p,{children:["Override the ",(0,o.jsx)(t.code,{children:"updateStatus()"})," method to handle JavaScript changes to the value\nof ",(0,o.jsx)(t.code,{children:"window.status"}),". The following example traces the status value:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function updateStatus(status:String):void\n{\n\ttrace(status);\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The requested status is passed as a string to the ",(0,o.jsx)(t.code,{children:"updateStatus()"})," method."]}),"\n",(0,o.jsx)(t.p,{children:"The HTMLLoader object does not provide a status bar."}),"\n",(0,o.jsx)(t.h2,{id:"handling-changes-of-the-windowdocumenttitle-property",children:"Handling changes of the window.document.title property"}),"\n",(0,o.jsxs)(t.p,{children:["override the ",(0,o.jsx)(t.code,{children:"updateTitle()"})," method to handle JavaScript changes to the value of\n",(0,o.jsx)(t.code,{children:"window.document.title"}),'. The following example changes the window title and\nappends the string, "Sample," to the title:']}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'override public function updateTitle(title:String):void\n{\n\thtmlLoader.stage.nativeWindow.title = title + " - Sample";\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["When ",(0,o.jsx)(t.code,{children:"document.title"})," is set on an HTML page, the requested title is passed as a\nstring to the ",(0,o.jsx)(t.code,{children:"updateTitle()"})," method."]}),"\n",(0,o.jsxs)(t.p,{children:["Changes to ",(0,o.jsx)(t.code,{children:"document.title"})," do not have to change the title of the window\ncontaining the HTMLLoader object. You could, for example, change another\ninterface element, such as a text field."]}),"\n",(0,o.jsx)(t.h2,{id:"handling-javascript-calls-to-windowblur-and-windowfocus",children:"Handling JavaScript calls to window.blur() and window.focus()"}),"\n",(0,o.jsxs)(t.p,{children:["Override the ",(0,o.jsx)(t.code,{children:"windowBlur()"})," and ",(0,o.jsx)(t.code,{children:"windowFocus()"})," methods to handle JavaScript\ncalls to ",(0,o.jsx)(t.code,{children:"window.blur()"})," and ",(0,o.jsx)(t.code,{children:"window.focus()"}),", as shown in the following\nexample:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"override public function windowBlur():void\n{\n\thtmlLoader.alpha = 0.5;\n}\noverride public function windowFocus():void\n{\n\thtmlLoader.alpha = 1.0;\n\tNativeApplication.nativeApplication.activate(htmlLoader.stage.nativeWindow);\n}\n"})}),"\n",(0,o.jsx)(t.p,{children:"Note: AIR does not provide an API for deactivating a window or application."}),"\n",(0,o.jsx)(t.h2,{id:"creating-windows-with-scrolling-html-content",children:"Creating windows with scrolling HTML content"}),"\n",(0,o.jsxs)(t.p,{children:["The HTMLLoader class includes a static method, ",(0,o.jsx)(t.code,{children:"HTMLLoader.createRootWindow()"}),",\nwhich lets you open a new window (represented by a NativeWindow object) that\ncontains an HTMLLoader object and define some user interface settings for that\nwindow. The method takes four parameters, which let you define the user\ninterface:"]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Parameter"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"visible"})}),(0,o.jsxs)(t.td,{children:["A Boolean value that specifies whether the window is initially visible ( ",(0,o.jsx)(t.code,{children:"true"}),") or not ( ",(0,o.jsx)(t.code,{children:"false"}),")."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"windowInitOptions"})}),(0,o.jsxs)(t.td,{children:["A ",(0,o.jsx)(t.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/display/NativeWindowInitOptions.html",children:"NativeWindowInitOptions"})," object. The NativeWindowInitOptions class defines initialization options for a NativeWindow object, including the following: whether the window is minimizable, maximizable, or resizable, whether the window has system chrome or custom chrome, whether the window is transparent or not (for windows that do not use system chrome), and the type of window."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"scrollBarsVisible"})}),(0,o.jsxs)(t.td,{children:["Whether there are scroll bars ( ",(0,o.jsx)(t.code,{children:"true"}),") or not ( ",(0,o.jsx)(t.code,{children:"false"}),")."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"bounds"})}),(0,o.jsxs)(t.td,{children:["A ",(0,o.jsx)(t.a,{href:"https://airsdk.dev/reference/actionscript/3.0/flash/geom/Rectangle.html",children:"Rectangle"})," object defining the position and size of the new window."]})]})]})]}),"\n",(0,o.jsxs)(t.p,{children:["For example, the following code uses the ",(0,o.jsx)(t.code,{children:"HTMLLoader.createRootWindow()"})," method\nto create a window with HTMLLoader content that uses scroll bars:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'var initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();\nvar bounds:Rectangle = new Rectangle(10, 10, 600, 400);\nvar html2:HTMLLoader = HTMLLoader.createRootWindow(true, initOptions, true, bounds);\nvar urlReq2:URLRequest = new URLRequest("http://www.example.com");\nhtml2.load(urlReq2);\nhtml2.stage.nativeWindow.activate();\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Note: Windows created by calling ",(0,o.jsx)(t.code,{children:"createRootWindow()"})," directly in JavaScript\nremain independent from the opening HTML window. The JavaScript Window ",(0,o.jsx)(t.code,{children:"opener"}),"\nand ",(0,o.jsx)(t.code,{children:"parent"})," properties, for example, are ",(0,o.jsx)(t.code,{children:"null"}),". However, if you call\n",(0,o.jsx)(t.code,{children:"createRootWindow()"})," indirectly by overriding the HTMLHost ",(0,o.jsx)(t.code,{children:"createWindow()"}),"\nmethod to call ",(0,o.jsx)(t.code,{children:"createRootWindow()"}),", then ",(0,o.jsx)(t.code,{children:"opener"})," and ",(0,o.jsx)(t.code,{children:"parent"})," do reference the\nopening HTML window."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);