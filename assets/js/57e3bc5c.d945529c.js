"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[27578],{28453:(n,t,e)=>{e.d(t,{R:()=>o,x:()=>a});var s=e(96540);const r={},i=s.createContext(r);function o(n){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:t},n.children)}},34875:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/core-actionscript-classes/working-with-strings/concatenating-strings","title":"Concatenating strings","description":"Concatenation of strings means taking two strings and joining them sequentially","source":"@site/docs/development/core-actionscript-classes/working-with-strings/concatenating-strings.md","sourceDirName":"development/core-actionscript-classes/working-with-strings","slug":"/development/core-actionscript-classes/working-with-strings/concatenating-strings","permalink":"/docs/development/core-actionscript-classes/working-with-strings/concatenating-strings","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/working-with-strings/concatenating-strings.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"mainSidebar","previous":{"title":"Obtaining string representations of other objects","permalink":"/docs/development/core-actionscript-classes/working-with-strings/obtaining-string-representations-of-other-objects"},"next":{"title":"Finding substrings and patterns in strings","permalink":"/docs/development/core-actionscript-classes/working-with-strings/finding-substrings-and-patterns-in-strings"}}');var r=e(74848),i=e(28453);const o={sidebar_position:7},a="Concatenating strings",c={},l=[];function d(n){const t={code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"concatenating-strings",children:"Concatenating strings"})}),"\n",(0,r.jsx)(t.p,{children:"Concatenation of strings means taking two strings and joining them sequentially\ninto one. For example, you can use the+` operator to concatenate two strings:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-actionscript",children:'var str1:String = "green";\nvar str2:String = "ish";\nvar str3:String = str1 + str2; // str3 == "greenish"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can also use the ",(0,r.jsx)(t.code,{children:"+="})," operator to the produce the same result, as the\nfollowing example shows:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-actionscript",children:'var str:String = "green";\nstr += "ish"; // str == "greenish"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Additionally, the String class includes a ",(0,r.jsx)(t.code,{children:"concat()"})," method, which can be used\nas follows:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-actionscript",children:'var str1:String = "Bonjour";\nvar str2:String = "from";\nvar str3:String = "Paris";\nvar str4:String = str1.concat(" ", str2, " ", str3);\n// str4 == "Bonjour from Paris"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["If you use the ",(0,r.jsx)(t.code,{children:"+"})," operator (or the ",(0,r.jsx)(t.code,{children:"+="})," operator) with a String object and an\nobject that is ",(0,r.jsx)(t.em,{children:"not"})," a string, ActionScript automatically converts the nonstring\nobject to a String object in order to evaluate the expression, as shown in this\nexample:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-actionscript",children:'var str:String = "Area = ";\nvar area:Number = Math.PI * Math.pow(3, 2);\nstr = str + area; // str == "Area = 28.274333882308138"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["However, you can use parentheses for grouping to provide context for the ",(0,r.jsx)(t.code,{children:"+"}),"\noperator, as the following example shows:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-actionscript",children:'trace("Total: $" + 4.55 + 1.45); // output: Total: $4.551.45\ntrace("Total: $" + (4.55 + 1.45)); // output: Total: $6\n'})})]})}function g(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);