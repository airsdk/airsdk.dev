"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[26303],{28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>o});var r=n(96540);const i={},a=r.createContext(i);function t(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:s},e.children)}},98701:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/index","title":"Regular expression syntax","description":"This section describes all of the elements of ActionScript regular expression","source":"@site/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/index.md","sourceDirName":"development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax","slug":"/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Basics of regular expressions","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions"},"next":{"title":"Creating an instance of a regular expression","permalink":"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/creating-an-instance-of-a-regular-expression"}}');var i=n(74848),a=n(28453);const t={},o="Regular expression syntax",c={},l=[];function p(e){const s={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"regular-expression-syntax",children:"Regular expression syntax"})}),"\n",(0,i.jsx)(s.p,{children:"This section describes all of the elements of ActionScript regular expression\nsyntax. As you'll see, regular expressions can have many complexities and\nnuances. You can find detailed resources on regular expressions on the web and\nin bookstores. Keep in mind that different programming environments implement\nregular expressions in different ways. ActionScript 3.0 implements regular\nexpressions as defined in the ECMAScript edition 3 language specification\n(ECMA-262)."}),"\n",(0,i.jsx)(s.p,{children:"Generally, you use regular expressions that match more complicated patterns than\na simple string of characters. For example, the following regular expression\ndefines the pattern consisting of the letters A, B, and C in sequence followed\nby any digit:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"/ABC\\d/\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"\\d"}),' code represents "any digit." The backslash (',(0,i.jsx)(s.code,{children:"\\"}),") character is called\nthe escape character, and combined with the character that follows it (in this\ncase the letter d), it has special meaning in the regular expression."]}),"\n",(0,i.jsx)(s.p,{children:"The following regular expression defines the pattern of the letters ABC followed\nby any number of digits (note the asterisk):"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"/ABC\\d*/\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The asterisk character (",(0,i.jsx)(s.code,{children:"*"}),") is a ",(0,i.jsx)(s.em,{children:"metacharacter"}),". A metacharacter is a\ncharacter that has special meaning in regular expressions. The asterisk is a\nspecific type of metacharacter called a ",(0,i.jsx)(s.em,{children:"quantifier,"})," which is used to quantify\nthe amount of repetition of a character or group of characters. For more\ninformation, see ",(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers",children:"Quantifiers"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["In addition to its pattern, a regular expression can contain flags, which\nspecify how the regular expression is to be matched. For example, the following\nregular expression uses the ",(0,i.jsx)(s.code,{children:"i"})," flag, which specifies that the regular\nexpression ignores case sensitivity in matching strings:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"/ABC\\d*/i\n"})}),"\n",(0,i.jsxs)(s.p,{children:["For more information, see ",(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/flags-and-properties",children:"Flags and properties"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["You can use regular expressions with the following methods of the String class:\n",(0,i.jsx)(s.code,{children:"match()"}),", ",(0,i.jsx)(s.code,{children:"replace()"}),", and ",(0,i.jsx)(s.code,{children:"search()"}),". For more information on these methods,\nsee\n",(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/working-with-strings/finding-substrings-and-patterns-in-strings",children:"Finding patterns in strings and replacing substrings"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"More Help topics"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/creating-an-instance-of-a-regular-expression",children:"Creating an instance of a regular expression"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/characters-metacharacters-and-metasequences",children:"Characters, metacharacters, and metasequences"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/character-classes",children:"Character classes"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/quantifiers",children:"Quantifiers"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/alternation",children:"Alternation"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/groups",children:"Groups"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/flags-and-properties",children:"Flags and properties"})}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);