"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[6194],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},87276:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"development/user-interaction/mouse-input/capturing-mouse-input","title":"Capturing mouse input","description":"Mouse clicks create mouse events that can be used to trigger interactive","source":"@site/docs/development/user-interaction/mouse-input/capturing-mouse-input.md","sourceDirName":"development/user-interaction/mouse-input","slug":"/development/user-interaction/mouse-input/capturing-mouse-input","permalink":"/docs/development/user-interaction/mouse-input/capturing-mouse-input","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/mouse-input/capturing-mouse-input.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Mouse input","permalink":"/docs/development/user-interaction/mouse-input/"},"next":{"title":"Mouse input example: WordSearch","permalink":"/docs/development/user-interaction/mouse-input/mouse-input-example-word-search"}}');var i=t(74848),s=t(28453);const o={sidebar_position:1},a="Capturing mouse input",c={},d=[{value:"Dragging Sprites around the stage",id:"dragging-sprites-around-the-stage",level:2},{value:"Drag-and-drop in AIR",id:"drag-and-drop-in-air",level:4},{value:"Customizing the mouse cursor",id:"customizing-the-mouse-cursor",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"capturing-mouse-input",children:"Capturing mouse input"})}),"\n",(0,i.jsx)(n.p,{children:"Mouse clicks create mouse events that can be used to trigger interactive\nfunctionality. You can add an event listener to the Stage to listen for mouse\nevents that occur anywhere within the SWF file. You can also add event listeners\nto objects on the Stage that inherit from InteractiveObject (for example, Sprite\nor MovieClip); these listeners are triggered when the object is clicked."}),"\n",(0,i.jsxs)(n.p,{children:["As with keyboard events, mouse events bubble. In the following example, because\n",(0,i.jsx)(n.code,{children:"square"})," is a child of the Stage, the event dispatches both from the sprite\n",(0,i.jsx)(n.code,{children:"square"})," as well as from the Stage object when the square is clicked:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-actionscript",children:"var square:Sprite = new Sprite();\nsquare.graphics.beginFill(0xFF0000);\nsquare.graphics.drawRect(0,0,100,100);\nsquare.graphics.endFill();\nsquare.addEventListener(MouseEvent.CLICK, reportClick);\nsquare.x =\nsquare.y = 50;\naddChild(square);\n\nstage.addEventListener(MouseEvent.CLICK, reportClick);\n\nfunction reportClick(event:MouseEvent):void\n{\n"})}),"\n",(0,i.jsx)(n.p,{children:'trace(event.currentTarget.toString() + " dispatches MouseEvent. Local coords [" + event.localX + "," + event.localY + "] Stage coords [" + event.stageX + "," + event.stageY + "]");'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the previous example, notice that the mouse event contains positional\ninformation about the click. The ",(0,i.jsx)(n.code,{children:"localX"})," and ",(0,i.jsx)(n.code,{children:"localY"})," properties contain the\nlocation of the click on the lowest child in the display chain. For example,\nclicking at the top-left corner of ",(0,i.jsx)(n.code,{children:"square"})," reports local coordinates of [0,0]\nbecause that is the registration point of ",(0,i.jsx)(n.code,{children:"square"}),". Alternatively, the ",(0,i.jsx)(n.code,{children:"stageX"}),"\nand ",(0,i.jsx)(n.code,{children:"stageY"})," properties refer to the global coordinates of the click on the\nStage. The same click reports [50,50] for these coordinates, because ",(0,i.jsx)(n.code,{children:"square"}),"\nwas moved to these coordinates. Both of these coordinate pairs can be useful\ndepending on how you want to respond to user interaction."]}),"\n",(0,i.jsxs)(n.p,{children:["Note: In full-screen mode, you can configure the application to use mouse\nlocking. Mouse locking disables the cursor and enables unbounded mouse movement.\nFor more information, see\n",(0,i.jsx)(n.a,{href:"/docs/development/display/display-programming/working-with-display-objects/setting-stage-properties#working-with-full-screen-mode",children:"Working with full-screen mode"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The MouseEvent object also contains ",(0,i.jsx)(n.code,{children:"altKey"}),", ",(0,i.jsx)(n.code,{children:"ctrlKey"}),", and ",(0,i.jsx)(n.code,{children:"shiftKey"})," Boolean\nproperties. You can use these properties to check if the Alt, Ctrl, or Shift key\nis also being pressed at the time of the mouse click."]}),"\n",(0,i.jsx)(n.h2,{id:"dragging-sprites-around-the-stage",children:"Dragging Sprites around the stage"}),"\n",(0,i.jsxs)(n.p,{children:["You can allow users to drag a Sprite object around the stage using the\n",(0,i.jsx)(n.code,{children:"startDrag()"})," method of the Sprite class. The following code shows an example of\nthis:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-actionscript",children:'import flash.display.Sprite;\nimport flash.events.MouseEvent;\n\nvar circle:Sprite = new Sprite();\ncircle.graphics.beginFill(0xFFCC00);\ncircle.graphics.drawCircle(0, 0, 40);\n\nvar target1:Sprite = new Sprite();\ntarget1.graphics.beginFill(0xCCFF00);\ntarget1.graphics.drawRect(0, 0, 100, 100);\ntarget1.name = "target1";\n\nvar target2:Sprite = new Sprite();\ntarget2.graphics.beginFill(0xCCFF00);\ntarget2.graphics.drawRect(0, 200, 100, 100);\ntarget2.name = "target2";\n\naddChild(target1);\naddChild(target2);\naddChild(circle);\n\ncircle.addEventListener(MouseEvent.MOUSE_DOWN, mouseDown)\n\nfunction mouseDown(event:MouseEvent):void\n{\n'})}),"\n",(0,i.jsx)(n.p,{children:"circle.startDrag();"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n}\ncircle.addEventListener(MouseEvent.MOUSE_UP, mouseReleased);\n\nfunction mouseReleased(event:MouseEvent):void\n{\n"})}),"\n",(0,i.jsx)(n.p,{children:"circle.stopDrag();\ntrace(circle.dropTarget.name);"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For more details, see the section on creating mouse drag interaction in\n",(0,i.jsx)(n.a,{href:"/docs/development/display/display-programming/manipulating-display-objects/changing-position",children:"Changing position"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"drag-and-drop-in-air",children:"Drag-and-drop in AIR"}),"\n",(0,i.jsxs)(n.p,{children:["In Adobe AIR, you can enable drag-and-drop support to allow users to drag data\ninto and out of your application. For more details, see\n",(0,i.jsx)(n.a,{href:"/docs/development/user-interaction/drag-and-drop-in-air/",children:"Drag and drop in AIR"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"customizing-the-mouse-cursor",children:"Customizing the mouse cursor"}),"\n",(0,i.jsxs)(n.p,{children:["The mouse cursor (mouse pointer) can be hidden or swapped for any display object\non the Stage. To hide the mouse cursor, call the ",(0,i.jsx)(n.code,{children:"Mouse.hide()"})," method.\nCustomize the cursor by calling ",(0,i.jsx)(n.code,{children:"Mouse.hide()"}),", listening to the Stage for the\n",(0,i.jsx)(n.code,{children:"MouseEvent.MOUSE_MOVE"})," event, and setting the coordinates of a display object\n(your custom cursor) to the ",(0,i.jsx)(n.code,{children:"stageX"})," and ",(0,i.jsx)(n.code,{children:"stageY"})," properties of the event. The\nfollowing example illustrates a basic execution of this task:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-actionscript",children:"var cursor:Sprite = new Sprite();\ncursor.graphics.beginFill(0x000000);\ncursor.graphics.drawCircle(0,0,20);\ncursor.graphics.endFill();\naddChild(cursor);\n\nstage.addEventListener(MouseEvent.MOUSE_MOVE,redrawCursor);\nMouse.hide();\n\nfunction redrawCursor(event:MouseEvent):void\n{\n"})}),"\n",(0,i.jsx)(n.p,{children:"cursor.x = event.stageX;\ncursor.y = event.stageY;"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);