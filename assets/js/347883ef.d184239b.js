"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[28101],{16617:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"development/networking-and-communication/http-communications/web-service-requests/rest-style-web-service-requests","title":"REST-style web service requests","description":"REST-style web services use HTTP method verbs to designate the basic action and","source":"@site/docs/development/networking-and-communication/http-communications/web-service-requests/rest-style-web-service-requests.md","sourceDirName":"development/networking-and-communication/http-communications/web-service-requests","slug":"/development/networking-and-communication/http-communications/web-service-requests/rest-style-web-service-requests","permalink":"/docs/development/networking-and-communication/http-communications/web-service-requests/rest-style-web-service-requests","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/networking-and-communication/http-communications/web-service-requests/rest-style-web-service-requests.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Web service requests","permalink":"/docs/development/networking-and-communication/http-communications/web-service-requests/"},"next":{"title":"XML-RPC web service requests","permalink":"/docs/development/networking-and-communication/http-communications/web-service-requests/xml-rpc-web-service-requests"}}');var s=n(74848),i=n(28453);const a={sidebar_position:1},o="REST-style web service requests",c={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"rest-style-web-service-requests",children:"REST-style web service requests"})}),"\n",(0,s.jsx)(t.p,{children:"REST-style web services use HTTP method verbs to designate the basic action and\nURL variables to specify the action details. For example, a request to get data\nfor an item could use the GET verb and URL variables to specify a method name\nand item ID. The resulting URL string might look like:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"http://service.example.com/?method=getItem&id=d3452\n"})}),"\n",(0,s.jsx)(t.p,{children:"To access a REST-style web service with ActionScript, you can use the\nURLRequest, URLVariables, and URLLoader classes. In JavaScript code within an\nAIR application, you can also use an XMLHttpRequest."}),"\n",(0,s.jsx)(t.p,{children:"Programming a REST-style web service call in ActionScript, typically involves\nthe following steps:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Create a URLRequest object."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Set the service URL and HTTP method verb on the request object."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Create a URLVariables object."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Set the service call parameters as dynamic properties of the variables"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"object.\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"5",children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Assign the variables object to the data property of the request object."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Send the call to the service with a URLLoader object."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Handle the ",(0,s.jsx)(t.code,{children:"complete"})," event dispatched by the URLLoader that indicates that"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"the service call is complete. It is also wise to listen for the various\nerror events that can be dispatched by a URLLoader object.\n"})}),"\n",(0,s.jsx)(t.p,{children:"For example, consider a web service that exposes a test method that echoes the\ncall parameters back to the requestor. The following ActionScript code could be\nused to call the service:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'import flash.events.Event;\nimport flash.events.ErrorEvent;\nimport flash.events.IOErrorEvent;\nimport flash.events.SecurityErrorEvent;\nimport flash.net.URLLoader;\nimport flash.net.URLRequest;\nimport flash.net.URLRequestMethod;\nimport flash.net.URLVariables;\n\nprivate var requestor:URLLoader = new URLLoader();\npublic function restServiceCall():void\n{\n\t//Create the HTTP request object\n\tvar request:URLRequest = new URLRequest( "http://service.example.com/" );\n\trequest.method = URLRequestMethod.GET;\n\n\t//Add the URL variables\n\tvar variables:URLVariables = new URLVariables();\n\tvariables.method = "test.echo";\n\tvariables.api_key = "123456ABC";\n\tvariables.message = "Able was I, ere I saw Elba.";\n\trequest.data = variables;\n\n\t//Initiate the transaction\n\trequestor = new URLLoader();\n\trequestor.addEventListener( Event.COMPLETE, httpRequestComplete );\n\trequestor.addEventListener( IOErrorEvent.IOERROR, httpRequestError );\n\trequestor.addEventListener( SecurityErrorEvent.SECURITY_ERROR, httpRequestError );\n\trequestor.load( request );\n}\nprivate function httpRequestComplete( event:Event ):void\n{\n\ttrace( event.target.data );\n}\n\nprivate function httpRequestError( error:ErrorEvent ):void{\n\ttrace( "An error occured: " + error.message );\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"In JavaScript within an AIR application, you can make the same request using the\nXMLHttpRequest object:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'<html>\n<head>\n\t<title>RESTful web service request</title>\n\t<script type="text/javascript">\n\t\tfunction makeRequest()\n\t\t{\n\t\t\tvar requestDisplay = document.getElementById( "request" );\n\t\t\tvar resultDisplay  = document.getElementById( "result" );\n\n\t\t\t//Create a conveninece object to hold the call properties\n\t\t\tvar request = {};\n\t\t\trequest.URL = "http://service.example.com/";\n\t\t\trequest.method = "test.echo";\n\t\t\trequest.HTTPmethod = "GET";\n\t\t\trequest.parameters = {};\n\t\t\trequest.parameters.api_key = "ABCDEF123";\n\t\t\trequest.parameters.message = "Able was I ere I saw Elba.";\n\t\t\tvar requestURL = makeURL( request );\n\t\t\txmlhttp = new XMLHttpRequest();\n\t\t\txmlhttp.open( request.HTTPmethod, requestURL, true);\n\t\t\txmlhttp.onreadystatechange = function() {\n\t\t\t\tif (xmlhttp.readyState == 4) {\n\t\t\t\t\tresultDisplay.innerHTML = xmlhttp.responseText;\n\t\t\t\t}\n\t\t\t}\n\t\t\txmlhttp.send(null);\n\n\t\t\trequestDisplay.innerHTML = requestURL;\n\t\t}\n\t\t//Convert the request object into a properly formatted URL\n\t\tfunction makeURL( request )\n\t\t{\n\t\t\tvar url = request.URL + "?method=" + escape( request.method );\n\t\t\tfor( var property in request.parameters )\n\t\t\t{\n\t\t\t\turl += "&" + property + "=" + escape( request.parameters[property] );\n\t\t\t}\n\n\t\t\treturn url;\n\t\t}\n\t<\/script>\n</head>\n<body onload="makeRequest()">\n\t<h1>Request:</h1>\n\t<div id="request"></div>\n\t<h1>Result:</h1>\n\t<div id="result"></div>\n</body>\n</html>\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);