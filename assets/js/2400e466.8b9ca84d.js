"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[83442],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(96540);const i={},a=o.createContext(i);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:n},e.children)}},76246:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"development/html-content-in-air/about-the-html-environment/javascript-in-air","title":"JavaScript in AIR","description":"AIR makes several changes to the typical behavior of common JavaScript objects.","source":"@site/docs/development/html-content-in-air/about-the-html-environment/javascript-in-air.md","sourceDirName":"development/html-content-in-air/about-the-html-environment","slug":"/development/html-content-in-air/about-the-html-environment/javascript-in-air","permalink":"/docs/development/html-content-in-air/about-the-html-environment/javascript-in-air","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/about-the-html-environment/javascript-in-air.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"HTML in AIR","permalink":"/docs/development/html-content-in-air/about-the-html-environment/html-in-air"},"next":{"title":"Overview of the HTML environment","permalink":"/docs/development/html-content-in-air/about-the-html-environment/overview-of-the-html-environment"}}');var i=t(74848),a=t(28453);const r={},s="JavaScript in AIR",d={},c=[{value:"HTML Sandboxes",id:"html-sandboxes",level:2},{value:"JavaScript eval() function",id:"javascript-eval-function",level:2},{value:"Function constructors",id:"function-constructors",level:2},{value:"Loading external scripts",id:"loading-external-scripts",level:2},{value:"The XMLHttpRequest object",id:"the-xmlhttprequest-object",level:2},{value:"Cookies",id:"cookies",level:2},{value:"The Clipboard object",id:"the-clipboard-object",level:2},{value:"Drag and Drop",id:"drag-and-drop",level:2},{value:"innerHTML and outerHTML properties",id:"innerhtml-and-outerhtml-properties",level:2},{value:"Document.write() and Document.writeln() methods",id:"documentwrite-and-documentwriteln-methods",level:2},{value:"Document.designMode property",id:"documentdesignmode-property",level:2},{value:"unload events (for body and frameset objects)",id:"unload-events-for-body-and-frameset-objects",level:2},{value:"JavaScript Window object",id:"javascript-window-object",level:2},{value:"air.NativeApplication object",id:"airnativeapplication-object",level:2},{value:"The JavaScript URL scheme",id:"the-javascript-url-scheme",level:2}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"javascript-in-air",children:"JavaScript in AIR"})}),"\n",(0,i.jsxs)(n.p,{children:["AIR makes several changes to the typical behavior of common JavaScript objects.\nMany of these changes are made to make it easier to write secure applications in\nAIR. At the same time, these differences in behavior mean that some common\nJavaScript coding patterns, and existing web applications using those patterns,\nmight not always execute as expected in AIR. For information on correcting these\ntypes of issues, see\n",(0,i.jsx)(n.a,{href:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/avoiding-security-related-javascript-errors",children:"Avoiding security-related JavaScript errors"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"html-sandboxes",children:"HTML Sandboxes"}),"\n",(0,i.jsxs)(n.p,{children:["AIR places content into isolated sandboxes according to the origin of the\ncontent. The sandbox rules are consistent with the same-origin policy\nimplemented by most web browsers, as well as the rules for sandboxes implemented\nby the Adobe Flash Player. In addition, AIR provides a new ",(0,i.jsx)(n.em,{children:"application"})," sandbox\ntype to contain and protect application content. See\n",(0,i.jsx)(n.a,{href:"/docs/development/security/security-sandboxes",children:"Security sandboxes"})," for more information\non the types of sandboxes you may encounter when developing AIR applications."]}),"\n",(0,i.jsx)(n.p,{children:"Access to the run-time environment and AIR APIs are only available to HTML and\nJavaScript running within the application sandbox. At the same time, however,\ndynamic evaluation and execution of JavaScript, in its various forms, is largely\nrestricted within the application sandbox for security reasons. These\nrestrictions are in place whether or not your application actually loads\ninformation directly from a server. (Even file content, pasted strings, and\ndirect user input may be untrustworthy.)"}),"\n",(0,i.jsxs)(n.p,{children:["The origin of the content in a page determines the sandbox to which it is\nconsigned. Only content loaded from the application directory (the installation\ndirectory referenced by the ",(0,i.jsx)(n.code,{children:"app:"})," URL scheme) is placed in the application\nsandbox. Content loaded from the file system is placed in the ",(0,i.jsx)(n.em,{children:"local-with-file\nsystem"})," or the ",(0,i.jsx)(n.em,{children:"local-trusted"})," sandbox, which allows access and interaction with\ncontent on the local file system, but not remote content. Content loaded from\nthe network is placed in a remote sandbox corresponding to its domain of origin."]}),"\n",(0,i.jsx)(n.p,{children:"To allow an application page to interact freely with content in a remote\nsandbox, the page can be mapped to the same domain as the remote content. For\nexample, if you write an application that displays map data from an Internet\nservice, the page of your application that loads and displays content from the\nservice could be mapped to the service domain. The attributes for mapping pages\ninto a remote sandbox and domain are new attributes added to the frame and\niframe HTML elements."}),"\n",(0,i.jsx)(n.p,{children:"To allow content in a non-application sandbox to safely use AIR features, you\ncan set up a parent sandbox bridge. To allow application content to safely call\nmethods and access properties of content in other sandboxes, you can set up a\nchild sandbox bridge. Safety here means that remote content cannot accidentally\nget references to objects, properties, or methods that are not explicitly\nexposed. Only simple data types, functions, and anonymous objects can be passed\nacross the bridge. However, you must still avoid explicitly exposing potentially\ndangerous functions. If, for example, you exposed an interface that allowed\nremote content to read and write files anywhere on a user's system, then you\nmight be giving remote content the means to do considerable harm to your users."}),"\n",(0,i.jsx)(n.h2,{id:"javascript-eval-function",children:"JavaScript eval() function"}),"\n",(0,i.jsxs)(n.p,{children:["Use of the ",(0,i.jsx)(n.code,{children:"eval()"})," function is restricted within the application sandbox once a\npage has finished loading. Some uses are permitted so that JSON-formatted data\ncan be safely parsed, but any evaluation that results in executable statements\nresults in an error.\n",(0,i.jsx)(n.a,{href:"/docs/development/security/air-security/html-security-in-adobe-air#code-restrictions-for-content-in-different-sandboxes",children:"Code restrictions for content in different sandboxes"}),"\ndescribes the allowed uses of the ",(0,i.jsx)(n.code,{children:"eval()"})," function."]}),"\n",(0,i.jsx)(n.h2,{id:"function-constructors",children:"Function constructors"}),"\n",(0,i.jsxs)(n.p,{children:["In the application sandbox, function constructors can be used before a page has\nfinished loading. After all page ",(0,i.jsx)(n.code,{children:"load"})," event handlers have finished, new\nfunctions cannot be created."]}),"\n",(0,i.jsx)(n.h2,{id:"loading-external-scripts",children:"Loading external scripts"}),"\n",(0,i.jsxs)(n.p,{children:["HTML pages in the application sandbox cannot use the ",(0,i.jsx)(n.code,{children:"script"})," tag to load\nJavaScript files from outside of the application directory. For a page in your\napplication to load a script from outside the application directory, the page\nmust be mapped to a non-application sandbox."]}),"\n",(0,i.jsx)(n.h2,{id:"the-xmlhttprequest-object",children:"The XMLHttpRequest object"}),"\n",(0,i.jsx)(n.p,{children:"AIR provides an XMLHttpRequest (XHR) object that applications can use to make\ndata requests. The following example illustrates a simple data request:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'xmlhttp = new XMLHttpRequest();\nxmlhttp.open("GET", "http:/www.example.com/file.data", true);\nxmlhttp.onreadystatechange = function() {\n\tif (xmlhttp.readyState == 4) {\n\t\t//do something with data...\n\t}\n}\nxmlhttp.send(null);\n'})}),"\n",(0,i.jsx)(n.p,{children:"In contrast to a browser, AIR allows content running in the application sandbox\nto request data from any domain. The result of an XHR that contains a JSON\nstring can be evaluated into data objects unless the result also contains\nexecutable code. If executable statements are present in the XHR result, an\nerror is thrown and the evaluation attempt fails."}),"\n",(0,i.jsx)(n.p,{children:"To prevent accidental injection of code from remote sources, synchronous XHRs\nreturn an empty result if made before a page has finished loading. Asynchronous\nXHRs will always return after a page has loaded."}),"\n",(0,i.jsxs)(n.p,{children:["By default, AIR blocks cross-domain XMLHttpRequests in non-application\nsandboxes. A parent window in the application sandbox can choose to allow\ncross-domain requests in a child frame containing content in a non-application\nsandbox by setting ",(0,i.jsx)(n.code,{children:"allowCrossDomainXHR"}),", an attribute added by AIR, to ",(0,i.jsx)(n.code,{children:"true"}),"\nin the containing frame or iframe element:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<iframe id="mashup"\n\tsrc="http://www.example.com/map.html"\n\tallowCrossDomainXHR="true">\n</iframe>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note: When convenient, the AIR URLStream class can also be used to download\ndata."}),"\n",(0,i.jsx)(n.p,{children:"If you dispatch an XMLHttpRequest to a remote server from a frame or iframe\ncontaining application content that has been mapped to a remote sandbox, make\nsure that the mapping URL does not mask the server address used in the XHR. For\nexample, consider the following iframe definition, which maps application\ncontent into a remote sandbox for the example.com domain:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<iframe id="mashup"\n\tsrc="http://www.example.com/map.html"\n\tdocumentRoot="app:/sandbox/"\n\tsandboxRoot="http://www.example.com/"\n\tallowCrossDomainXHR="true">\n</iframe>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Because the ",(0,i.jsx)(n.code,{children:"sandboxRoot"})," attribute remaps the root URL of the ",(0,i.jsx)(n.a,{href:"http://www.example.com",children:"www.example.com"}),"\naddress, all requests are loaded from the application directory and not the\nremote server. Requests are remapped whether they derive from page navigation or\nfrom an XMLHttpRequest."]}),"\n",(0,i.jsxs)(n.p,{children:["To avoid accidentally blocking data requests to your remote server, map the\n",(0,i.jsx)(n.code,{children:"sandboxRoot"})," to a subdirectory of the remote URL rather than the root. The\ndirectory does not have to exist. For example, to allow requests to the\n",(0,i.jsx)(n.a,{href:"http://www.example.com",children:"www.example.com"})," to load from the remote server rather than the application\ndirectory, change the previous iframe to the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<iframe id="mashup"\n\tsrc="http://www.example.com/map.html"\n\tdocumentRoot="app:/sandbox/"\n\tsandboxRoot="http://www.example.com/air/"\n\tallowCrossDomainXHR="true">\n</iframe>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this case, only content in the ",(0,i.jsx)(n.code,{children:"air"})," subdirectory is loaded locally."]}),"\n",(0,i.jsxs)(n.p,{children:["For more information on sandbox mapping see\n",(0,i.jsx)(n.a,{href:"/docs/development/html-content-in-air/about-the-html-environment/html-in-air#html-frame-and-iframe-elements",children:"HTML frame and iframe elements"}),"\nand\n",(0,i.jsx)(n.a,{href:"/docs/development/security/air-security/html-security-in-adobe-air",children:"HTML security in Adobe AIR"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"cookies",children:"Cookies"}),"\n",(0,i.jsxs)(n.p,{children:["In AIR applications, only content in remote sandboxes (content loaded from http:\nand https: sources) can use cookies (the ",(0,i.jsx)(n.code,{children:"document.cookie"})," property). In the\napplication sandbox, other means for storing persistent data are available,\nincluding the EncryptedLocalStore, SharedObject, and FileStream classes."]}),"\n",(0,i.jsx)(n.h2,{id:"the-clipboard-object",children:"The Clipboard object"}),"\n",(0,i.jsxs)(n.p,{children:["The WebKit Clipboard API is driven with the following events: ",(0,i.jsx)(n.code,{children:"copy"}),", ",(0,i.jsx)(n.code,{children:"cut"}),", and\n",(0,i.jsx)(n.code,{children:"paste"}),". The event object passed in these events provides access to the\nclipboard through the ",(0,i.jsx)(n.code,{children:"clipboardData"})," property. Use the following methods of the\n",(0,i.jsx)(n.code,{children:"clipboardData"})," object to read or write clipboard data:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"clearData(mimeType)"}),(0,i.jsxs)(n.td,{children:["Clears the clipboard data. Set the ",(0,i.jsx)(n.code,{children:"mimeType"})," parameter to the MIME type of the data to clear."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"getData(mimeType)"}),(0,i.jsxs)(n.td,{children:["Get the clipboard data. This method can only be called in a handler for the ",(0,i.jsx)(n.code,{children:"paste"})," event. Set the ",(0,i.jsx)(n.code,{children:"mimeType"})," parameter to the MIME type of the data to return."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"setData(mimeType, data)"}),(0,i.jsxs)(n.td,{children:["Copy data to the clipboard. Set the ",(0,i.jsx)(n.code,{children:"mimeType"})," parameter to the MIME type of the data."]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"JavaScript code outside the application sandbox can only access the clipboard\nthrough theses events. However, content in the application sandbox can access\nthe system clipboard directly using the AIR Clipboard class. For example, you\ncould use the following statement to get text format data on the clipboard:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'var clipping = air.Clipboard.generalClipboard.getData("text/plain",\n'})}),"\n",(0,i.jsx)(n.p,{children:"air.ClipboardTransferMode.ORIGINAL_ONLY);"}),"\n",(0,i.jsx)(n.p,{children:"The valid data MIME types are:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"MIME type"}),(0,i.jsx)(n.th,{children:"Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Text"}),(0,i.jsx)(n.td,{children:'"text/plain"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"HTML"}),(0,i.jsx)(n.td,{children:'"text/html"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"URL"}),(0,i.jsx)(n.td,{children:'"text/uri-list"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Bitmap"}),(0,i.jsx)(n.td,{children:'"image/x-vnd.adobe.air.bitmap"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"File list"}),(0,i.jsx)(n.td,{children:'"application/x-vnd.adobe.air.file-list"'})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Important: Only content in the application sandbox can access file data present\non the clipboard. If non-application content attempts to access a file object\nfrom the clipboard, a security error is thrown."}),"\n",(0,i.jsxs)(n.p,{children:["For more information on using the clipboard, see\n",(0,i.jsx)(n.a,{href:"/docs/development/user-interaction/copy-and-paste/",children:"Copy and paste"})," and\n",(0,i.jsx)(n.a,{href:"http://developer.apple.com/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Tasks/CopyAndPaste.html#//apple_ref/doc/uid/30001234",children:"Using the Pasteboard from JavaScript (Apple Developer Center)"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"drag-and-drop",children:"Drag and Drop"}),"\n",(0,i.jsxs)(n.p,{children:["Drag-and-drop gestures into and out of HTML produce the following DOM events:\n",(0,i.jsx)(n.code,{children:"dragstart"}),", ",(0,i.jsx)(n.code,{children:"drag"}),", ",(0,i.jsx)(n.code,{children:"dragend"}),", ",(0,i.jsx)(n.code,{children:"dragenter"}),", ",(0,i.jsx)(n.code,{children:"dragover"}),", ",(0,i.jsx)(n.code,{children:"dragleave"}),", and\n",(0,i.jsx)(n.code,{children:"drop"}),". The event object passed in these events provides access to the dragged\ndata through the ",(0,i.jsx)(n.code,{children:"dataTransfer"})," property. The ",(0,i.jsx)(n.code,{children:"dataTransfer"})," property references\nan object that provides the same methods as the ",(0,i.jsx)(n.code,{children:"clipboardData"})," object\nassociated with a clipboard event. For example, you could use the following\nfunction to get text format data from a ",(0,i.jsx)(n.code,{children:"drop"})," event:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'function onDrop(dragEvent){\n\treturn dragEvent.dataTransfer.getData("text/plain",\n\t\t\tair.ClipboardTransferMode.ORIGINAL_ONLY);\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"dataTransfer"})," object has the following important members:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Member"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"clearData(mimeType)"}),(0,i.jsxs)(n.td,{children:["Clears the data. Set the ",(0,i.jsx)(n.code,{children:"mimeType"})," parameter to the MIME type of the data representation to clear."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"getData(mimeType)"}),(0,i.jsxs)(n.td,{children:["Get the dragged data. This method can only be called in a handler for the ",(0,i.jsx)(n.code,{children:"drop"})," event. Set the ",(0,i.jsx)(n.code,{children:"mimeType"})," parameter to the MIME type of the data to get."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"setData(mimeType, data)"}),(0,i.jsxs)(n.td,{children:["Set the data to be dragged. Set the ",(0,i.jsx)(n.code,{children:"mimeType"})," parameter to the MIME type of the data."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"types"}),(0,i.jsxs)(n.td,{children:["An array of strings containing the MIME types of all data representations currently available in the ",(0,i.jsx)(n.code,{children:"dataTransfer"})," object."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"effectsAllowed"}),(0,i.jsxs)(n.td,{children:["Specifies whether the data being dragged can be copied, moved, linked, or some combination thereof. Set the ",(0,i.jsx)(n.code,{children:"effectsAllowed"})," property in the handler for the ",(0,i.jsx)(n.code,{children:"dragstart"})," event."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dropEffect"}),(0,i.jsxs)(n.td,{children:["Specifies which of the allowed drop effects are supported by a drag target. Set the ",(0,i.jsx)(n.code,{children:"dropEffect"})," property in the handler for the ",(0,i.jsx)(n.code,{children:"dragEnter"})," event. During the drag, the cursor changes to indicate which effect would occur if the user released the mouse. If no ",(0,i.jsx)(n.code,{children:"dropEffect"})," is specified, an ",(0,i.jsx)(n.code,{children:"effectsAllowed"})," property effect is chosen. The copy effect has priority over the move effect, which itself has priority over the link effect. The user can modify the default priority using the keyboard."]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["For more information on adding support for drag-and-drop to an AIR application\nsee ",(0,i.jsx)(n.a,{href:"/docs/development/user-interaction/drag-and-drop-in-air/",children:"Drag and drop in AIR"}),"\nand\n",(0,i.jsx)(n.a,{href:"http://developer.apple.com/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Tasks/DragAndDrop.html#//apple_ref/doc/uid/30001233",children:"Using the Drag-and-Drop from JavaScript (Apple Developer Center)"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"innerhtml-and-outerhtml-properties",children:"innerHTML and outerHTML properties"}),"\n",(0,i.jsxs)(n.p,{children:["AIR places security restrictions on the use of the ",(0,i.jsx)(n.code,{children:"innerHTML"})," and ",(0,i.jsx)(n.code,{children:"outerHTML"}),"\nproperties for content running in the application sandbox. Before the page load\nevent, as well as during the execution of any load event handlers, use of the\n",(0,i.jsx)(n.code,{children:"innerHTML"})," and ",(0,i.jsx)(n.code,{children:"outerHTML"})," properties is unrestricted. However, once the page\nhas loaded, you can only use ",(0,i.jsx)(n.code,{children:"innerHTML"})," or ",(0,i.jsx)(n.code,{children:"outerHTML"})," properties to add static\ncontent to the document. Any statement in the string assigned to ",(0,i.jsx)(n.code,{children:"innerHTML"})," or\n",(0,i.jsx)(n.code,{children:"outerHTML"})," that evaluates to executable code is ignored. For example, if you\ninclude an event callback attribute in an element definition, the event listener\nis not added. Likewise, embedded ",(0,i.jsx)(n.code,{children:"<script>"})," tags are not evaluated. For more\ninformation, see the\n",(0,i.jsx)(n.a,{href:"/docs/development/security/air-security/html-security-in-adobe-air",children:"HTML security in Adobe AIR"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"documentwrite-and-documentwriteln-methods",children:"Document.write() and Document.writeln() methods"}),"\n",(0,i.jsxs)(n.p,{children:["Use of the ",(0,i.jsx)(n.code,{children:"write()"})," and ",(0,i.jsx)(n.code,{children:"writeln()"})," methods is not restricted in the\napplication sandbox before the ",(0,i.jsx)(n.code,{children:"load"})," event of the page. However, once the page\nhas loaded, calling either of these methods does not clear the page or create a\nnew one. In a non-application sandbox, as in most web browsers, calling\n",(0,i.jsx)(n.code,{children:"document.write()"})," or ",(0,i.jsx)(n.code,{children:"writeln()"})," after a page has finished loading clears the\ncurrent page and opens a new, blank one."]}),"\n",(0,i.jsx)(n.h2,{id:"documentdesignmode-property",children:"Document.designMode property"}),"\n",(0,i.jsxs)(n.p,{children:["Set the ",(0,i.jsx)(n.code,{children:"document.designMode"})," property to a value of ",(0,i.jsx)(n.code,{children:"on"})," to make all elements\nin the document editable. Built-in editor support includes text editing, copy,\npaste, and drag-and-drop. Setting ",(0,i.jsx)(n.code,{children:"designMode"})," to ",(0,i.jsx)(n.code,{children:"on"})," is equivalent to setting\nthe ",(0,i.jsx)(n.code,{children:"contentEditable"})," property of the ",(0,i.jsx)(n.code,{children:"body"})," element to ",(0,i.jsx)(n.code,{children:"true"}),". You can use the\n",(0,i.jsx)(n.code,{children:"contentEditable"})," property on most HTML elements to define which sections of a\ndocument are editable. See\n",(0,i.jsx)(n.a,{href:"/docs/development/html-content-in-air/about-the-html-environment/html-in-air#html-contenteditable-attribute",children:"HTML contentEditable attribute"}),"\nfor additional information."]}),"\n",(0,i.jsx)(n.h2,{id:"unload-events-for-body-and-frameset-objects",children:"unload events (for body and frameset objects)"}),"\n",(0,i.jsxs)(n.p,{children:["In the top-level ",(0,i.jsx)(n.code,{children:"frameset"})," or ",(0,i.jsx)(n.code,{children:"body"})," tag of a window (including the main window\nof the application), do not use the ",(0,i.jsx)(n.code,{children:"unload"})," event to respond to the window (or\napplication) being closed. Instead, use ",(0,i.jsx)(n.code,{children:"exiting"})," event of the NativeApplication\nobject (to detect when an application is closing). Or use the ",(0,i.jsx)(n.code,{children:"closing"})," event of\nthe NativeWindow object (to detect when a window is closing). For example, the\nfollowing JavaScript code displays a message ( ",(0,i.jsx)(n.code,{children:'"Goodbye."'}),") when the user\ncloses the application:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'var app = air.NativeApplication.nativeApplication;\napp.addEventListener(air.Event.EXITING, closeHandler);\nfunction closeHandler(event)\n{\n\talert("Goodbye.");\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["However, scripts ",(0,i.jsx)(n.em,{children:"can"})," successfully respond to the ",(0,i.jsx)(n.code,{children:"unload"})," event caused by\nnavigation of a frame, iframe, or top-level window content."]}),"\n",(0,i.jsx)(n.p,{children:"Note: These limitations may be removed in a future version of Adobe AIR."}),"\n",(0,i.jsx)(n.h2,{id:"javascript-window-object",children:"JavaScript Window object"}),"\n",(0,i.jsx)(n.p,{children:"The Window object remains the global object in the JavaScript execution context.\nIn the application sandbox, AIR adds new properties to the JavaScript Window\nobject to provide access to the built-in classes of AIR, as well as important\nhost objects. In addition, some methods and properties behave differently\ndepending on whether they are within the application sandbox or not."}),"\n",(0,i.jsxs)(n.p,{children:["Window.runtime property",(0,i.jsx)(n.br,{}),"\n","The ",(0,i.jsx)(n.code,{children:"runtime"})," property allows you to instantiate and use the built-in runtime\nclasses from within the application sandbox. These classes include the AIR and\nFlash Player APIs (but not, for example, the Flex framework). For example, the\nfollowing statement creates an AIR file object:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"var preferencesFile = new window.runtime.flash.filesystem.File();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AIRAliases.js"})," file, provided in the AIR SDK, contains alias definitions\nthat allow you to shorten such references. For example, when ",(0,i.jsx)(n.code,{children:"AIRAliases.js"})," is\nimported into a page, a File object can be created with the following statement:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"var preferencesFile = new air.File();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"window.runtime"})," property is only defined for content within the application\nsandbox and only for the parent document of a page with frames or iframes."]}),"\n",(0,i.jsxs)(n.p,{children:["See\n",(0,i.jsx)(n.a,{href:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/using-the-airaliases-js-file",children:"Using the AIRAliases.js file"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Window.nativeWindow property",(0,i.jsx)(n.br,{}),"\n","The ",(0,i.jsx)(n.code,{children:"nativeWindow"})," property provides a reference to the underlying native window\nobject. With this property, you can script window functions and properties such\nas screen position, size, and visibility, and handle window events such as\nclosing, resizing, and moving. For example, the following statement closes the\nwindow:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"window.nativeWindow.close();\n"})}),"\n",(0,i.jsx)(n.p,{children:"Note: The window control features provided by the NativeWindow object overlap\nthe features provided by the JavaScript Window object. In such cases, you can\nuse whichever method you find most convenient."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"window.nativeWindow"})," property is only defined for content within the\napplication sandbox and only for the parent document of a page with frames or\niframes."]}),"\n",(0,i.jsxs)(n.p,{children:["Window.htmlLoader property",(0,i.jsx)(n.br,{}),"\n","The ",(0,i.jsx)(n.code,{children:"htmlLoader"})," property provides a reference to the AIR HTMLLoader object that\ncontains the HTML content. With this property, you can script the appearance and\nbehavior of the HTML environment. For example, you can use the\n",(0,i.jsx)(n.code,{children:"htmlLoader.paintsDefaultBackground"})," property to determine whether the control\npaints a default, white background:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"window.htmlLoader.paintsDefaultBackground = false;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note: The HTMLLoader object itself has a ",(0,i.jsx)(n.code,{children:"window"})," property, which references the\nJavaScript Window object of the HTML content it contains. You can use this\nproperty to access the JavaScript environment through a reference to the\ncontaining HTMLLoader."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"window.htmlLoader"})," property is only defined for content within the\napplication sandbox and only for the parent document of a page with frames or\niframes."]}),"\n",(0,i.jsxs)(n.p,{children:["Window.parentSandboxBridge and Window.childSandboxBridge properties",(0,i.jsx)(n.br,{}),"\n","The ",(0,i.jsx)(n.code,{children:"parentSandboxBridge"})," and ",(0,i.jsx)(n.code,{children:"childSandboxBridge"})," properties allow you to\ndefine an interface between a parent and a child frame. For more information,\nsee\n",(0,i.jsx)(n.a,{href:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes",children:"Cross-scripting content in different security sandboxes"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Window.setTimeout() and Window.setInterval() functions",(0,i.jsx)(n.br,{}),"\n","AIR places security restrictions on use of the ",(0,i.jsx)(n.code,{children:"setTimeout()"})," and\n",(0,i.jsx)(n.code,{children:"setInterval()"})," functions within the application sandbox. You cannot define the\ncode to be executed as a string when calling ",(0,i.jsx)(n.code,{children:"setTimeout()"})," or ",(0,i.jsx)(n.code,{children:"setInterval()"}),".\nYou must use a function reference. For more information, see\n",(0,i.jsx)(n.a,{href:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/avoiding-security-related-javascript-errors#settimeout-and-setinterval",children:"setTimeout() and setInterval()"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Window.open() function",(0,i.jsx)(n.br,{}),"\n","When called by code running in a non-application sandbox, the ",(0,i.jsx)(n.code,{children:"open()"})," method\nonly opens a window when called as a result of user interaction (such as a mouse\nclick or keypress). In addition, the window title is prefixed with the\napplication title (to prevent windows opened by remote content from\nimpersonating windows opened by the application). For more information, see the\n",(0,i.jsx)(n.a,{href:"/docs/development/security/air-security/html-security-in-adobe-air#restrictions-on-calling-the-javascript-windowopen-method",children:"Restrictions on calling the JavaScript window.open() method"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"airnativeapplication-object",children:"air.NativeApplication object"}),"\n",(0,i.jsxs)(n.p,{children:["The NativeApplication object provides information about the application state,\ndispatches several important application-level events, and provides useful\nfunctions for controlling application behavior. A single instance of the\nNativeApplication object is created automatically and can be accessed through\nthe class-defined ",(0,i.jsx)(n.code,{children:"NativeApplication.nativeApplication"})," property."]}),"\n",(0,i.jsx)(n.p,{children:"To access the object from JavaScript code you could use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"var app = window.runtime.flash.desktop.NativeApplication.nativeApplication;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or, if the ",(0,i.jsx)(n.code,{children:"AIRAliases.js"})," script has been imported, you could use the shorter\nform:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"var app = air.NativeApplication.nativeApplication;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The NativeApplication object can only be accessed from within the application\nsandbox. For more information about the NativeApplication object, see\n",(0,i.jsx)(n.a,{href:"/docs/development/client-system-interaction/working-with-air-runtime-and-operating-system-information",children:"Working with AIR runtime and operating system information"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"the-javascript-url-scheme",children:"The JavaScript URL scheme"}),"\n",(0,i.jsxs)(n.p,{children:["Execution of code defined in a JavaScript URL scheme (as in\n",(0,i.jsx)(n.code,{children:"href=\"javascript:alert('Test')\""}),") is blocked within the application sandbox. No\nerror is thrown."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);