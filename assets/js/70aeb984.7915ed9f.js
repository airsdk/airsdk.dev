"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[55303],{16054:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"development/display/working-with-pixel-bender-shaders/basics-of-pixel-bender-shaders","title":"Basics of Pixel Bender shaders","description":"Adobe Pixel Bender is a programming language that is used to create or","source":"@site/docs/development/display/working-with-pixel-bender-shaders/basics-of-pixel-bender-shaders.md","sourceDirName":"development/display/working-with-pixel-bender-shaders","slug":"/development/display/working-with-pixel-bender-shaders/basics-of-pixel-bender-shaders","permalink":"/docs/development/display/working-with-pixel-bender-shaders/basics-of-pixel-bender-shaders","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-pixel-bender-shaders/basics-of-pixel-bender-shaders.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Accessing shader metadata","permalink":"/docs/development/display/working-with-pixel-bender-shaders/accessing-shader-metadata"},"next":{"title":"Loading or embedding a shader","permalink":"/docs/development/display/working-with-pixel-bender-shaders/loading-or-embedding-a-shader"}}');var s=i(74848),r=i(28453);const a={},o="Basics of Pixel Bender shaders",d={},l=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4},{value:"Working through the code examples",id:"working-through-the-code-examples",level:4}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"basics-of-pixel-bender-shaders",children:"Basics of Pixel Bender shaders"})}),"\n",(0,s.jsx)(n.p,{children:"Adobe Pixel Bender is a programming language that is used to create or\nmanipulate image content. Using Pixel Bender you create a kernel, also known as\na shader. The shader defines a single function that executes on each of the\npixels of an image individually. The result of each call to the function is the\noutput color at that pixel coordinate in the image. Input images and parameter\nvalues can be specified to customize the operation. In a single execution of a\nshader, input and parameter values are constant. The only thing that varies is\nthe coordinate of the pixel whose color is the result of the function call."}),"\n",(0,s.jsx)(n.p,{children:"Where possible, the shader function is called for multiple output pixel\ncoordinates in parallel. This improves shader performance and can provide\nhigh-performance processing."}),"\n",(0,s.jsx)(n.p,{children:"In ActionScript, three types of effects can be easily created using a shader:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"drawing fill"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"blend mode"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"filter"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A shader can also be executed in stand-alone mode. Using stand-alone mode a\nshader's result is accessed directly rather than pre-specifying its intended\nuse. The result can be accessed as image data or as binary or number data. The\ndata need not be image data at all. In this way you can give a shader a set of\ndata as an input. The shader processes the data, and you can access the result\ndata returned by the shader."}),"\n",(0,s.jsx)(n.p,{children:"Pixel Bender support is available starting in Flash Player 10 and Adobe AIR 1.5.\nPixel Bender blends, filters, and fills are not supported under GPU rendering.\nOn mobile devices, Pixel Bender shaders do run under CPU rendering. However,\nperformance is not at the same level as on a desktop computer. Many shader\nprograms may only execute at a few frames per second."}),"\n",(0,s.jsx)(n.h4,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,s.jsx)(n.p,{children:"The following reference list contains important terms that you will encounter\nwhen creating and using Pixel Bender shaders:"}),"\n",(0,s.jsxs)(n.p,{children:["Kernel",(0,s.jsx)(n.br,{}),"\n","For Pixel Bender, a kernel is the same thing as a shader. Using Pixel Bender\nyour code defines a kernel, which defines a single function that executes on\neach of the pixels of an image individually."]}),"\n",(0,s.jsxs)(n.p,{children:["Pixel Bender bytecode",(0,s.jsx)(n.br,{}),"\n","When a Pixel Bender kernel is compiled it is transformed into Pixel Bender\nbytecode. The bytecode is accessed and executed at run time."]}),"\n",(0,s.jsxs)(n.p,{children:["Pixel Bender language",(0,s.jsx)(n.br,{}),"\n","The programming language used to create a Pixel Bender kernel."]}),"\n",(0,s.jsxs)(n.p,{children:["Pixel Bender Toolkit",(0,s.jsx)(n.br,{}),"\n","The application that is used to create a Pixel Bender bytecode file from Pixel\nBender source code. The toolkit allows you to write, test, and compile Pixel\nBender source code."]}),"\n",(0,s.jsxs)(n.p,{children:["Shader",(0,s.jsx)(n.br,{}),"\n","For the purposes of this document, a shader is a set of functionality written in\nthe Pixel Bender language. A shader's code creates a visual effect or performs a\ncalculation. In either case, the shader returns a set of data (usually the\npixels of an image). The shader performs the same operation on each data point,\nwith the only difference being the coordinates of the output pixel.The shader is\nnot written in ActionScript. It is written in the Pixel Bender language and\ncompiled into Pixel Bender bytecode. It can be embedded into a SWF file at\ncompile time or loaded as an external file at run time. In either case it is\naccessed in ActionScript by creating a Shader object and linking that object to\nthe shader bytecode."]}),"\n",(0,s.jsxs)(n.p,{children:["Shader input",(0,s.jsx)(n.br,{}),"\n","A complex input, usually bitmap image data, that is provided to a shader to use\nin its calculations. For each input variable defined in a shader, a single value\n(that is, a single image or set of binary data) is used for the entire execution\nof the shader."]}),"\n",(0,s.jsxs)(n.p,{children:["Shader parameter",(0,s.jsx)(n.br,{}),"\n","A single value (or limited set of values) that is provided to a shader to use in\nits calculations. Each parameter value is defined for a single shader execution,\nand the same value is used throughout the shader execution."]}),"\n",(0,s.jsx)(n.h4,{id:"working-through-the-code-examples",children:"Working through the code examples"}),"\n",(0,s.jsx)(n.p,{children:"You may want to test the example code listings that are provided. Testing the\ncode involves running the code and viewing the results in the SWF that's\ncreated. All the examples create content using the drawing API which uses or is\nmodified by the shader effect."}),"\n",(0,s.jsx)(n.p,{children:"Most of the example code listings include two parts. One part is the Pixel\nBender source code for the shader used in the example. You must first use the\nPixel Bender Toolkit to compile the source code to a Pixel Bender bytecode file.\nFollow these steps to create the Pixel Bender bytecode file:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Open Adobe Pixel Bender Toolkit. If necessary, from the Build menu choose"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'"Turn on Flash Player warnings and errors."\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Copy the Pixel Bender code listing and paste it into the code editor pane of"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"the Pixel Bender Toolkit.\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:'From the File menu, choose "Export kernel filter for Flash Player."'}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Save the Pixel Bender bytecode file in the same directory as the Flash"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"document. The file's name should match the name specified in the example\ndescription.\n"})}),"\n",(0,s.jsx)(n.p,{children:"The ActionScript part of each example is written as a class file. To test the\nexample in Flash Professional:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create an empty Flash document and save it to your computer."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a new ActionScript file and save it in the same directory as the"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Flash document. The file's name should match the name of the class in the\ncode listing. For instance, if the code listing defines a class named\nMyApplication, use the name MyApplication.as to save the ActionScript file.\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Copy the code listing into the ActionScript file and save the file."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"In the Flash document, click a blank part of the Stage or work space to"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"activate the document Property inspector.\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"In the Property inspector, in the Document Class field, enter the name of"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"the ActionScript class you copied from the text.\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:"Run the program using Control > Test Movie"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"You will see the results of the example in the preview window.\n"})}),"\n",(0,s.jsxs)(n.p,{children:["These techniques for testing example code listings are explained in more detail\nin\n",(0,s.jsx)(n.a,{href:"/docs/development/appendixes/how-to-use-actionscript-examples",children:"How to Use ActionScript Examples"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);