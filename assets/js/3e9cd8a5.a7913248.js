"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[52301],{28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>r});var n=t(96540);const s={},o=n.createContext(s);function a(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:i},e.children)}},59286:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"development/display/filtering-display-objects/basics-of-filtering-display-objects","title":"Basics of filtering display objects","description":"One of the ways to add polish to an application is to add simple graphic","source":"@site/docs/development/display/filtering-display-objects/basics-of-filtering-display-objects.md","sourceDirName":"development/display/filtering-display-objects","slug":"/development/display/filtering-display-objects/basics-of-filtering-display-objects","permalink":"/docs/development/display/filtering-display-objects/basics-of-filtering-display-objects","draft":false,"unlisted":false,"editUrl":"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/filtering-display-objects/basics-of-filtering-display-objects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Available display filters","permalink":"/docs/development/display/filtering-display-objects/available-display-filters"},"next":{"title":"Bevel filter","permalink":"/docs/development/display/filtering-display-objects/bevel-filter"}}');var s=t(74848),o=t(28453);const a={},r="Basics of filtering display objects",l={},d=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}];function c(e){const i={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"basics-of-filtering-display-objects",children:"Basics of filtering display objects"})}),"\n",(0,s.jsx)(i.p,{children:"One of the ways to add polish to an application is to add simple graphic\neffects. You can add a drop shadow behind a photo to create the illusion of 3-d,\nor a glow around a button to show that it is active. ActionScript 3.0 includes\nten filters that you can apply to any display object or to a BitmapData\ninstance. The built-in filters range from basic, such as the drop shadow and\nglow filters, to complex, such as the displacement map filter and the\nconvolution filter."}),"\n",(0,s.jsxs)(i.p,{children:["Note: In addition to the built-in filters, you can also program custom filters\nand effects using Pixel Bender. See\n",(0,s.jsx)(i.a,{href:"/docs/development/display/working-with-pixel-bender-shaders/",children:"Working with Pixel Bender shaders"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"important-concepts-and-terms",children:"Important concepts and terms"}),"\n",(0,s.jsx)(i.p,{children:"The following reference list contains important terms that you might encounter\nwhen creating filters:"}),"\n",(0,s.jsxs)(i.p,{children:["Bevel",(0,s.jsx)(i.br,{}),"\n","An edge created by lightening pixels on two sides and darkening pixels on the\nopposite two sides. This effect creates the appearance of a three-dimensional\nborder. The effect is commonly used for raised or indented buttons and similar\ngraphics."]}),"\n",(0,s.jsxs)(i.p,{children:["Convolution",(0,s.jsx)(i.br,{}),"\n","Distorting pixels in an image by combining each pixel's value with the values of\nsome or all of its neighboring pixels, using various ratios."]}),"\n",(0,s.jsxs)(i.p,{children:["Displacement",(0,s.jsx)(i.br,{}),"\n","Shifting or moving pixels in an image to a new position."]}),"\n",(0,s.jsxs)(i.p,{children:["Matrix",(0,s.jsx)(i.br,{}),"\n","A grid of numbers used to perform certain mathematical calculations by applying\nthe numbers in the grid to various values, then combining the results."]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);